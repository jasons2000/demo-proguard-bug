demo.Demo -> demo.Demo:
    void <init>() -> <init>
    void main(java.lang.String[]) -> main
org.apache.tika.Tika -> org.apache.tika.Tika:
    org.apache.tika.detect.Detector detector -> detector
    org.apache.tika.parser.Parser parser -> parser
    org.apache.tika.language.translate.Translator translator -> translator
    int maxStringLength -> maxStringLength
    void <init>(org.apache.tika.detect.Detector,org.apache.tika.parser.Parser) -> <init>
    void <init>(org.apache.tika.detect.Detector,org.apache.tika.parser.Parser,org.apache.tika.language.translate.Translator) -> <init>
    void <init>(org.apache.tika.config.TikaConfig) -> <init>
    void <init>() -> <init>
    void <init>(org.apache.tika.detect.Detector) -> <init>
    java.lang.String detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
    java.lang.String detect(java.io.InputStream,java.lang.String) -> detect
    java.lang.String detect(java.io.InputStream) -> detect
    java.lang.String detect(byte[],java.lang.String) -> detect
    java.lang.String detect(byte[]) -> detect
    java.lang.String detect(java.nio.file.Path) -> detect
    java.lang.String detect(java.io.File) -> detect
    java.lang.String detect(java.net.URL) -> detect
    java.lang.String detect(java.lang.String) -> detect
    java.lang.String translate(java.lang.String,java.lang.String,java.lang.String) -> translate
    java.lang.String translate(java.lang.String,java.lang.String) -> translate
    java.lang.String translate(java.io.InputStream,java.lang.String,java.lang.String) -> translate
    java.lang.String translate(java.io.InputStream,java.lang.String) -> translate
    java.io.Reader parse(java.io.InputStream,org.apache.tika.metadata.Metadata) -> parse
    java.io.Reader parse(java.io.InputStream) -> parse
    java.io.Reader parse(java.nio.file.Path,org.apache.tika.metadata.Metadata) -> parse
    java.io.Reader parse(java.nio.file.Path) -> parse
    java.io.Reader parse(java.io.File,org.apache.tika.metadata.Metadata) -> parse
    java.io.Reader parse(java.io.File) -> parse
    java.io.Reader parse(java.net.URL) -> parse
    java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata) -> parseToString
    java.lang.String parseToString(java.io.InputStream,org.apache.tika.metadata.Metadata,int) -> parseToString
    java.lang.String parseToString(java.io.InputStream) -> parseToString
    java.lang.String parseToString(java.nio.file.Path) -> parseToString
    java.lang.String parseToString(java.io.File) -> parseToString
    java.lang.String parseToString(java.net.URL) -> parseToString
    int getMaxStringLength() -> getMaxStringLength
    void setMaxStringLength(int) -> setMaxStringLength
    org.apache.tika.parser.Parser getParser() -> getParser
    org.apache.tika.detect.Detector getDetector() -> getDetector
    org.apache.tika.language.translate.Translator getTranslator() -> getTranslator
    java.lang.String toString() -> toString
org.apache.tika.concurrent.ConfigurableThreadPoolExecutor -> org.apache.tika.concurrent.ConfigurableThreadPoolExecutor:
    void setMaximumPoolSize(int) -> setMaximumPoolSize
    void setCorePoolSize(int) -> setCorePoolSize
org.apache.tika.concurrent.SimpleThreadPoolExecutor -> org.apache.tika.concurrent.SimpleThreadPoolExecutor:
    void <init>() -> <init>
org.apache.tika.concurrent.SimpleThreadPoolExecutor$1 -> org.apache.tika.concurrent.SimpleThreadPoolExecutor$1:
    void <init>() -> <init>
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.apache.tika.config.Field -> org.apache.tika.config.Field:
    java.lang.String name() -> name
    boolean required() -> required
org.apache.tika.config.Initializable -> org.apache.tika.config.Initializable:
    void initialize(java.util.Map) -> initialize
    void checkInitialization(org.apache.tika.config.InitializableProblemHandler) -> checkInitialization
org.apache.tika.config.InitializableProblemHandler -> org.apache.tika.config.InitializableProblemHandler:
    org.apache.tika.config.InitializableProblemHandler IGNORE -> IGNORE
    org.apache.tika.config.InitializableProblemHandler INFO -> INFO
    org.apache.tika.config.InitializableProblemHandler WARN -> WARN
    org.apache.tika.config.InitializableProblemHandler THROW -> THROW
    org.apache.tika.config.InitializableProblemHandler DEFAULT -> DEFAULT
    void handleInitializableProblem(java.lang.String,java.lang.String) -> handleInitializableProblem
    void <clinit>() -> <clinit>
org.apache.tika.config.InitializableProblemHandler$1 -> org.apache.tika.config.InitializableProblemHandler$1:
    void <init>() -> <init>
    void handleInitializableProblem(java.lang.String,java.lang.String) -> handleInitializableProblem
    java.lang.String toString() -> toString
org.apache.tika.config.InitializableProblemHandler$2 -> org.apache.tika.config.InitializableProblemHandler$2:
    void <init>() -> <init>
    void handleInitializableProblem(java.lang.String,java.lang.String) -> handleInitializableProblem
    java.lang.String toString() -> toString
org.apache.tika.config.InitializableProblemHandler$3 -> org.apache.tika.config.InitializableProblemHandler$3:
    void <init>() -> <init>
    void handleInitializableProblem(java.lang.String,java.lang.String) -> handleInitializableProblem
    java.lang.String toString() -> toString
org.apache.tika.config.InitializableProblemHandler$4 -> org.apache.tika.config.InitializableProblemHandler$4:
    void <init>() -> <init>
    void handleInitializableProblem(java.lang.String,java.lang.String) -> handleInitializableProblem
    java.lang.String toString() -> toString
org.apache.tika.config.LoadErrorHandler -> org.apache.tika.config.LoadErrorHandler:
    org.apache.tika.config.LoadErrorHandler IGNORE -> IGNORE
    org.apache.tika.config.LoadErrorHandler WARN -> WARN
    org.apache.tika.config.LoadErrorHandler THROW -> THROW
    void handleLoadError(java.lang.String,java.lang.Throwable) -> handleLoadError
    void <clinit>() -> <clinit>
org.apache.tika.config.LoadErrorHandler$1 -> org.apache.tika.config.LoadErrorHandler$1:
    void <init>() -> <init>
    void handleLoadError(java.lang.String,java.lang.Throwable) -> handleLoadError
    java.lang.String toString() -> toString
org.apache.tika.config.LoadErrorHandler$2 -> org.apache.tika.config.LoadErrorHandler$2:
    void <init>() -> <init>
    void handleLoadError(java.lang.String,java.lang.Throwable) -> handleLoadError
    java.lang.String toString() -> toString
org.apache.tika.config.LoadErrorHandler$3 -> org.apache.tika.config.LoadErrorHandler$3:
    void <init>() -> <init>
    void handleLoadError(java.lang.String,java.lang.Throwable) -> handleLoadError
    java.lang.String toString() -> toString
org.apache.tika.config.Param -> org.apache.tika.config.Param:
    java.util.Map map -> map
    java.util.Map reverseMap -> reverseMap
    java.lang.Class type -> type
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.Object actualValue -> actualValue
    void <init>() -> <init>
    void <init>(java.lang.String,java.lang.Class,java.lang.Object) -> <init>
    void <init>(java.lang.String,java.lang.Object) -> <init>
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.Class getType() -> getType
    void setType(java.lang.Class) -> setType
    java.lang.String getTypeString() -> getTypeString
    void setTypeString(java.lang.String) -> setTypeString
    java.lang.Object getValue() -> getValue
    java.lang.String toString() -> toString
    void save(java.io.OutputStream) -> save
    void save(org.w3c.dom.Node) -> save
    org.apache.tika.config.Param load(java.io.InputStream) -> load
    org.apache.tika.config.Param load(org.w3c.dom.Node) -> load
    java.lang.Class classFromType(java.lang.String) -> classFromType
    java.lang.Object getTypedValue(java.lang.Class,java.lang.String) -> getTypedValue
    void <clinit>() -> <clinit>
org.apache.tika.config.ParamField -> org.apache.tika.config.ParamField:
    java.lang.String DEFAULT -> DEFAULT
    java.util.Map PRIMITIVE_MAP -> PRIMITIVE_MAP
    java.lang.reflect.Field field -> field
    java.lang.reflect.Method setter -> setter
    java.lang.String name -> name
    java.lang.Class type -> type
    boolean required -> required
    void <init>(java.lang.reflect.AccessibleObject) -> <init>
    java.lang.reflect.Field getField() -> getField
    java.lang.reflect.Method getSetter() -> getSetter
    java.lang.String getName() -> getName
    java.lang.Class getType() -> getType
    boolean isRequired() -> isRequired
    void assignValue(java.lang.Object,java.lang.Object) -> assignValue
    java.lang.Class retrieveType() -> retrieveType
    java.lang.String retrieveParamName(org.apache.tika.config.Field) -> retrieveParamName
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
org.apache.tika.config.ParamField$1 -> org.apache.tika.config.ParamField$1:
    void <init>() -> <init>
org.apache.tika.config.ServiceLoader -> org.apache.tika.config.ServiceLoader:
    java.lang.ClassLoader contextClassLoader -> contextClassLoader
    java.util.Map services -> services
    java.lang.ClassLoader loader -> loader
    org.apache.tika.config.LoadErrorHandler handler -> handler
    org.apache.tika.config.InitializableProblemHandler initializableProblemHandler -> initializableProblemHandler
    boolean dynamic -> dynamic
    java.util.regex.Pattern COMMENT -> COMMENT
    java.util.regex.Pattern WHITESPACE -> WHITESPACE
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    void setContextClassLoader(java.lang.ClassLoader) -> setContextClassLoader
    void addService(java.lang.Object,java.lang.Object,int) -> addService
    java.lang.Object removeService(java.lang.Object) -> removeService
    void <init>(java.lang.ClassLoader,org.apache.tika.config.LoadErrorHandler,org.apache.tika.config.InitializableProblemHandler,boolean) -> <init>
    void <init>(java.lang.ClassLoader,org.apache.tika.config.LoadErrorHandler,boolean) -> <init>
    void <init>(java.lang.ClassLoader,org.apache.tika.config.LoadErrorHandler) -> <init>
    void <init>(java.lang.ClassLoader) -> <init>
    void <init>() -> <init>
    boolean isDynamic() -> isDynamic
    org.apache.tika.config.LoadErrorHandler getLoadErrorHandler() -> getLoadErrorHandler
    org.apache.tika.config.InitializableProblemHandler getInitializableProblemHandler() -> getInitializableProblemHandler
    java.io.InputStream getResourceAsStream(java.lang.String) -> getResourceAsStream
    java.lang.ClassLoader getLoader() -> getLoader
    java.lang.Class getServiceClass(java.lang.Class,java.lang.String) -> getServiceClass
    java.util.Enumeration findServiceResources(java.lang.String) -> findServiceResources
    java.util.List loadServiceProviders(java.lang.Class) -> loadServiceProviders
    java.util.List loadDynamicServiceProviders(java.lang.Class) -> loadDynamicServiceProviders
    java.util.List identifyStaticServiceProviders(java.lang.Class) -> identifyStaticServiceProviders
    java.util.List loadStaticServiceProviders(java.lang.Class) -> loadStaticServiceProviders
    void collectServiceClassNames(java.net.URL,java.util.Collection) -> collectServiceClassNames
    void <clinit>() -> <clinit>
org.apache.tika.config.ServiceLoader$RankedService -> org.apache.tika.config.ServiceLoader$RankedService:
    java.lang.Object service -> service
    int rank -> rank
    void <init>(java.lang.Object,int) -> <init>
    boolean isInstanceOf(java.lang.Class) -> isInstanceOf
    int compareTo(org.apache.tika.config.ServiceLoader$RankedService) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
    java.lang.Object access$000(org.apache.tika.config.ServiceLoader$RankedService) -> access$000
org.apache.tika.config.TikaActivator -> org.apache.tika.config.TikaActivator:
    org.osgi.util.tracker.ServiceTracker detectorTracker -> detectorTracker
    org.osgi.util.tracker.ServiceTracker parserTracker -> parserTracker
    org.osgi.framework.BundleContext bundleContext -> bundleContext
    void <init>() -> <init>
    void start(org.osgi.framework.BundleContext) -> start
    void stop(org.osgi.framework.BundleContext) -> stop
    java.lang.Object addingService(org.osgi.framework.ServiceReference) -> addingService
    void modifiedService(org.osgi.framework.ServiceReference,java.lang.Object) -> modifiedService
    void removedService(org.osgi.framework.ServiceReference,java.lang.Object) -> removedService
org.apache.tika.config.TikaConfig -> org.apache.tika.config.TikaConfig:
    java.util.concurrent.atomic.AtomicInteger TIMES_INSTANTIATED -> TIMES_INSTANTIATED
    org.apache.tika.config.ServiceLoader serviceLoader -> serviceLoader
    org.apache.tika.parser.CompositeParser parser -> parser
    org.apache.tika.detect.CompositeDetector detector -> detector
    org.apache.tika.language.translate.Translator translator -> translator
    org.apache.tika.mime.MimeTypes mimeTypes -> mimeTypes
    java.util.concurrent.ExecutorService executorService -> executorService
    org.apache.tika.detect.EncodingDetector encodingDetector -> encodingDetector
    org.apache.tika.mime.MimeTypes getDefaultMimeTypes(java.lang.ClassLoader) -> getDefaultMimeTypes
    org.apache.tika.detect.CompositeDetector getDefaultDetector(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> getDefaultDetector
    org.apache.tika.detect.CompositeEncodingDetector getDefaultEncodingDetector(org.apache.tika.config.ServiceLoader) -> getDefaultEncodingDetector
    org.apache.tika.parser.CompositeParser getDefaultParser(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader,org.apache.tika.detect.EncodingDetector) -> getDefaultParser
    org.apache.tika.language.translate.Translator getDefaultTranslator(org.apache.tika.config.ServiceLoader) -> getDefaultTranslator
    org.apache.tika.concurrent.ConfigurableThreadPoolExecutor getDefaultExecutorService() -> getDefaultExecutorService
    void <init>(java.lang.String) -> <init>
    void <init>(java.nio.file.Path) -> <init>
    void <init>(java.nio.file.Path,org.apache.tika.config.ServiceLoader) -> <init>
    void <init>(java.io.File) -> <init>
    void <init>(java.io.File,org.apache.tika.config.ServiceLoader) -> <init>
    void <init>(java.net.URL) -> <init>
    void <init>(java.net.URL,java.lang.ClassLoader) -> <init>
    void <init>(java.net.URL,org.apache.tika.config.ServiceLoader) -> <init>
    void <init>(java.io.InputStream) -> <init>
    void <init>(org.w3c.dom.Document) -> <init>
    void <init>(org.w3c.dom.Document,org.apache.tika.config.ServiceLoader) -> <init>
    void <init>(org.w3c.dom.Element) -> <init>
    void <init>(org.w3c.dom.Element,java.lang.ClassLoader) -> <init>
    void <init>(org.w3c.dom.Element,org.apache.tika.config.ServiceLoader) -> <init>
    void <init>(java.lang.ClassLoader) -> <init>
    void <init>() -> <init>
    void updateXMLReaderUtils(org.w3c.dom.Element) -> updateXMLReaderUtils
    java.io.InputStream getConfigInputStream(java.lang.String,org.apache.tika.config.ServiceLoader) -> getConfigInputStream
    java.lang.String getText(org.w3c.dom.Node) -> getText
    org.apache.tika.parser.Parser getParser(org.apache.tika.mime.MediaType) -> getParser
    org.apache.tika.parser.Parser getParser() -> getParser
    org.apache.tika.detect.Detector getDetector() -> getDetector
    org.apache.tika.detect.EncodingDetector getEncodingDetector() -> getEncodingDetector
    org.apache.tika.language.translate.Translator getTranslator() -> getTranslator
    java.util.concurrent.ExecutorService getExecutorService() -> getExecutorService
    org.apache.tika.mime.MimeTypes getMimeRepository() -> getMimeRepository
    org.apache.tika.mime.MediaTypeRegistry getMediaTypeRegistry() -> getMediaTypeRegistry
    org.apache.tika.config.ServiceLoader getServiceLoader() -> getServiceLoader
    org.apache.tika.config.TikaConfig getDefaultConfig() -> getDefaultConfig
    org.w3c.dom.Element getChild(org.w3c.dom.Element,java.lang.String) -> getChild
    java.util.List getTopLevelElementChildren(org.w3c.dom.Element,java.lang.String,java.lang.String) -> getTopLevelElementChildren
    org.apache.tika.mime.MimeTypes typesFromDomElement(org.w3c.dom.Element) -> typesFromDomElement
    java.util.Set mediaTypesListFromDomElement(org.w3c.dom.Element,java.lang.String) -> mediaTypesListFromDomElement
    org.apache.tika.config.ServiceLoader serviceLoaderFromDomElement(org.w3c.dom.Element,java.lang.ClassLoader) -> serviceLoaderFromDomElement
    org.apache.tika.config.InitializableProblemHandler getInitializableProblemHandler(java.lang.String) -> getInitializableProblemHandler
    java.util.List access$500(org.w3c.dom.Element,java.lang.String,java.lang.String) -> access$500
    org.apache.tika.config.InitializableProblemHandler access$600(java.lang.String) -> access$600
    org.apache.tika.parser.CompositeParser access$800(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader,org.apache.tika.detect.EncodingDetector) -> access$800
    java.util.Set access$900(org.w3c.dom.Element,java.lang.String) -> access$900
    org.apache.tika.language.translate.Translator access$1000(org.apache.tika.config.ServiceLoader) -> access$1000
    org.apache.tika.concurrent.ConfigurableThreadPoolExecutor access$1100() -> access$1100
    org.w3c.dom.Element access$1200(org.w3c.dom.Element,java.lang.String) -> access$1200
    java.lang.String access$1300(org.w3c.dom.Node) -> access$1300
    void <clinit>() -> <clinit>
org.apache.tika.config.TikaConfig$1 -> org.apache.tika.config.TikaConfig$1:
org.apache.tika.config.TikaConfig$DetectorXmlLoader -> org.apache.tika.config.TikaConfig$DetectorXmlLoader:
    void <init>() -> <init>
    boolean supportsComposite() -> supportsComposite
    java.lang.String getParentTagName() -> getParentTagName
    java.lang.String getLoaderTagName() -> getLoaderTagName
    java.lang.Class getLoaderClass() -> getLoaderClass
    org.apache.tika.detect.Detector preLoadOne(java.lang.Class,java.lang.String,org.apache.tika.mime.MimeTypes) -> preLoadOne
    boolean isComposite(org.apache.tika.detect.Detector) -> isComposite
    boolean isComposite(java.lang.Class) -> isComposite
    org.apache.tika.detect.CompositeDetector createDefault(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createDefault
    org.apache.tika.detect.CompositeDetector createComposite(java.util.List,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    org.apache.tika.detect.Detector createComposite(java.lang.Class,java.util.List,java.util.Set,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    org.apache.tika.detect.Detector decorate(org.apache.tika.detect.Detector,org.w3c.dom.Element) -> decorate
    java.lang.Object decorate(java.lang.Object,org.w3c.dom.Element) -> decorate
    java.lang.Object createComposite(java.lang.Class,java.util.List,java.util.Set,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    java.lang.Object createComposite(java.util.List,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    java.lang.Object createDefault(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createDefault
    java.lang.Object preLoadOne(java.lang.Class,java.lang.String,org.apache.tika.mime.MimeTypes) -> preLoadOne
    boolean isComposite(java.lang.Object) -> isComposite
    void <init>(org.apache.tika.config.TikaConfig$1) -> <init>
org.apache.tika.config.TikaConfig$EncodingDetectorXmlLoader -> org.apache.tika.config.TikaConfig$EncodingDetectorXmlLoader:
    void <init>() -> <init>
    boolean supportsComposite() -> supportsComposite
    java.lang.String getParentTagName() -> getParentTagName
    java.lang.String getLoaderTagName() -> getLoaderTagName
    java.lang.Class getLoaderClass() -> getLoaderClass
    boolean isComposite(org.apache.tika.detect.EncodingDetector) -> isComposite
    boolean isComposite(java.lang.Class) -> isComposite
    org.apache.tika.detect.EncodingDetector preLoadOne(java.lang.Class,java.lang.String,org.apache.tika.mime.MimeTypes) -> preLoadOne
    org.apache.tika.detect.EncodingDetector createDefault(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createDefault
    org.apache.tika.detect.CompositeEncodingDetector createComposite(java.util.List,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    org.apache.tika.detect.EncodingDetector createComposite(java.lang.Class,java.util.List,java.util.Set,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    org.apache.tika.detect.EncodingDetector decorate(org.apache.tika.detect.EncodingDetector,org.w3c.dom.Element) -> decorate
    java.lang.Object decorate(java.lang.Object,org.w3c.dom.Element) -> decorate
    java.lang.Object createComposite(java.lang.Class,java.util.List,java.util.Set,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    java.lang.Object createComposite(java.util.List,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    java.lang.Object createDefault(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createDefault
    java.lang.Object preLoadOne(java.lang.Class,java.lang.String,org.apache.tika.mime.MimeTypes) -> preLoadOne
    boolean isComposite(java.lang.Object) -> isComposite
    void <init>(org.apache.tika.config.TikaConfig$1) -> <init>
org.apache.tika.config.TikaConfig$ExecutorServiceXmlLoader -> org.apache.tika.config.TikaConfig$ExecutorServiceXmlLoader:
    void <init>() -> <init>
    org.apache.tika.concurrent.ConfigurableThreadPoolExecutor createComposite(java.lang.Class,java.util.List,java.util.Set,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    org.apache.tika.concurrent.ConfigurableThreadPoolExecutor createComposite(java.util.List,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    org.apache.tika.concurrent.ConfigurableThreadPoolExecutor createDefault(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createDefault
    org.apache.tika.concurrent.ConfigurableThreadPoolExecutor decorate(org.apache.tika.concurrent.ConfigurableThreadPoolExecutor,org.w3c.dom.Element) -> decorate
    java.lang.Class getLoaderClass() -> getLoaderClass
    org.apache.tika.concurrent.ConfigurableThreadPoolExecutor loadOne(org.w3c.dom.Element,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> loadOne
    boolean supportsComposite() -> supportsComposite
    java.lang.String getParentTagName() -> getParentTagName
    java.lang.String getLoaderTagName() -> getLoaderTagName
    boolean isComposite(org.apache.tika.concurrent.ConfigurableThreadPoolExecutor) -> isComposite
    boolean isComposite(java.lang.Class) -> isComposite
    org.apache.tika.concurrent.ConfigurableThreadPoolExecutor preLoadOne(java.lang.Class,java.lang.String,org.apache.tika.mime.MimeTypes) -> preLoadOne
    java.lang.Object loadOne(org.w3c.dom.Element,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> loadOne
    java.lang.Object decorate(java.lang.Object,org.w3c.dom.Element) -> decorate
    java.lang.Object createComposite(java.lang.Class,java.util.List,java.util.Set,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    java.lang.Object createComposite(java.util.List,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    java.lang.Object createDefault(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createDefault
    java.lang.Object preLoadOne(java.lang.Class,java.lang.String,org.apache.tika.mime.MimeTypes) -> preLoadOne
    boolean isComposite(java.lang.Object) -> isComposite
    void <init>(org.apache.tika.config.TikaConfig$1) -> <init>
org.apache.tika.config.TikaConfig$ParserXmlLoader -> org.apache.tika.config.TikaConfig$ParserXmlLoader:
    org.apache.tika.detect.EncodingDetector encodingDetector -> encodingDetector
    boolean supportsComposite() -> supportsComposite
    java.lang.String getParentTagName() -> getParentTagName
    java.lang.String getLoaderTagName() -> getLoaderTagName
    void <init>(org.apache.tika.detect.EncodingDetector) -> <init>
    java.lang.Class getLoaderClass() -> getLoaderClass
    org.apache.tika.parser.Parser preLoadOne(java.lang.Class,java.lang.String,org.apache.tika.mime.MimeTypes) -> preLoadOne
    boolean isComposite(org.apache.tika.parser.Parser) -> isComposite
    boolean isComposite(java.lang.Class) -> isComposite
    org.apache.tika.parser.CompositeParser createDefault(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createDefault
    org.apache.tika.parser.CompositeParser createComposite(java.util.List,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    org.apache.tika.parser.Parser createComposite(java.lang.Class,java.util.List,java.util.Set,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    org.apache.tika.parser.Parser newInstance(java.lang.Class) -> newInstance
    org.apache.tika.parser.Parser decorate(org.apache.tika.parser.Parser,org.w3c.dom.Element) -> decorate
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.Object decorate(java.lang.Object,org.w3c.dom.Element) -> decorate
    java.lang.Object createComposite(java.lang.Class,java.util.List,java.util.Set,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    java.lang.Object createComposite(java.util.List,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    java.lang.Object createDefault(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createDefault
    java.lang.Object preLoadOne(java.lang.Class,java.lang.String,org.apache.tika.mime.MimeTypes) -> preLoadOne
    boolean isComposite(java.lang.Object) -> isComposite
    void <init>(org.apache.tika.detect.EncodingDetector,org.apache.tika.config.TikaConfig$1) -> <init>
org.apache.tika.config.TikaConfig$TranslatorXmlLoader -> org.apache.tika.config.TikaConfig$TranslatorXmlLoader:
    void <init>() -> <init>
    boolean supportsComposite() -> supportsComposite
    java.lang.String getParentTagName() -> getParentTagName
    java.lang.String getLoaderTagName() -> getLoaderTagName
    java.lang.Class getLoaderClass() -> getLoaderClass
    org.apache.tika.language.translate.Translator preLoadOne(java.lang.Class,java.lang.String,org.apache.tika.mime.MimeTypes) -> preLoadOne
    boolean isComposite(org.apache.tika.language.translate.Translator) -> isComposite
    boolean isComposite(java.lang.Class) -> isComposite
    org.apache.tika.language.translate.Translator createDefault(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createDefault
    org.apache.tika.language.translate.Translator createComposite(java.util.List,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    org.apache.tika.language.translate.Translator createComposite(java.lang.Class,java.util.List,java.util.Set,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    org.apache.tika.language.translate.Translator decorate(org.apache.tika.language.translate.Translator,org.w3c.dom.Element) -> decorate
    java.lang.Object decorate(java.lang.Object,org.w3c.dom.Element) -> decorate
    java.lang.Object createComposite(java.lang.Class,java.util.List,java.util.Set,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    java.lang.Object createComposite(java.util.List,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    java.lang.Object createDefault(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createDefault
    java.lang.Object preLoadOne(java.lang.Class,java.lang.String,org.apache.tika.mime.MimeTypes) -> preLoadOne
    boolean isComposite(java.lang.Object) -> isComposite
    void <init>(org.apache.tika.config.TikaConfig$1) -> <init>
org.apache.tika.config.TikaConfig$XmlLoader -> org.apache.tika.config.TikaConfig$XmlLoader:
    java.lang.String PARAMS_TAG_NAME -> PARAMS_TAG_NAME
    void <init>() -> <init>
    boolean supportsComposite() -> supportsComposite
    java.lang.String getParentTagName() -> getParentTagName
    java.lang.String getLoaderTagName() -> getLoaderTagName
    java.lang.Class getLoaderClass() -> getLoaderClass
    boolean isComposite(java.lang.Object) -> isComposite
    boolean isComposite(java.lang.Class) -> isComposite
    java.lang.Object preLoadOne(java.lang.Class,java.lang.String,org.apache.tika.mime.MimeTypes) -> preLoadOne
    java.lang.Object createDefault(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createDefault
    java.lang.Object createComposite(java.util.List,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    java.lang.Object createComposite(java.lang.Class,java.util.List,java.util.Set,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> createComposite
    java.lang.Object decorate(java.lang.Object,org.w3c.dom.Element) -> decorate
    java.lang.Object loadOverall(org.w3c.dom.Element,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> loadOverall
    java.lang.Object loadOne(org.w3c.dom.Element,org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> loadOne
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.util.Map getParams(org.w3c.dom.Element) -> getParams
    void <init>(org.apache.tika.config.TikaConfig$1) -> <init>
org.apache.tika.config.TikaConfigSerializer -> org.apache.tika.config.TikaConfigSerializer:
    void <init>() -> <init>
    void serialize(org.apache.tika.config.TikaConfig,org.apache.tika.config.TikaConfigSerializer$Mode,java.io.Writer,java.nio.charset.Charset) -> serialize
    void addExecutorService(org.apache.tika.config.TikaConfigSerializer$Mode,org.w3c.dom.Element,org.w3c.dom.Document,org.apache.tika.config.TikaConfig) -> addExecutorService
    void addServiceLoader(org.apache.tika.config.TikaConfigSerializer$Mode,org.w3c.dom.Element,org.w3c.dom.Document,org.apache.tika.config.TikaConfig) -> addServiceLoader
    void addTranslator(org.apache.tika.config.TikaConfigSerializer$Mode,org.w3c.dom.Element,org.w3c.dom.Document,org.apache.tika.config.TikaConfig) -> addTranslator
    void addMimeComment(org.apache.tika.config.TikaConfigSerializer$Mode,org.w3c.dom.Element,org.w3c.dom.Document) -> addMimeComment
    void addEncodingDetectors(org.apache.tika.config.TikaConfigSerializer$Mode,org.w3c.dom.Element,org.w3c.dom.Document,org.apache.tika.config.TikaConfig) -> addEncodingDetectors
    void addDetectors(org.apache.tika.config.TikaConfigSerializer$Mode,org.w3c.dom.Element,org.w3c.dom.Document,org.apache.tika.config.TikaConfig) -> addDetectors
    void addParsers(org.apache.tika.config.TikaConfigSerializer$Mode,org.w3c.dom.Element,org.w3c.dom.Document,org.apache.tika.config.TikaConfig) -> addParsers
    void addParser(org.apache.tika.config.TikaConfigSerializer$Mode,org.w3c.dom.Element,org.w3c.dom.Document,org.apache.tika.parser.Parser) -> addParser
    org.w3c.dom.Element addParser(org.apache.tika.config.TikaConfigSerializer$Mode,org.w3c.dom.Element,org.w3c.dom.Document,org.apache.tika.parser.Parser,org.apache.tika.parser.ParserDecorator) -> addParser
org.apache.tika.config.TikaConfigSerializer$Mode -> org.apache.tika.config.TikaConfigSerializer$Mode:
    org.apache.tika.config.TikaConfigSerializer$Mode MINIMAL -> MINIMAL
    org.apache.tika.config.TikaConfigSerializer$Mode CURRENT -> CURRENT
    org.apache.tika.config.TikaConfigSerializer$Mode STATIC -> STATIC
    org.apache.tika.config.TikaConfigSerializer$Mode STATIC_FULL -> STATIC_FULL
    org.apache.tika.config.TikaConfigSerializer$Mode[] $VALUES -> $VALUES
    org.apache.tika.config.TikaConfigSerializer$Mode[] values() -> values
    org.apache.tika.config.TikaConfigSerializer$Mode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
org.apache.tika.config.package-info -> org.apache.tika.config.package-info:
org.apache.tika.detect.AutoDetectReader -> org.apache.tika.detect.AutoDetectReader:
    org.apache.tika.config.ServiceLoader DEFAULT_LOADER -> DEFAULT_LOADER
    org.apache.tika.detect.EncodingDetector DEFAULT_DETECTOR -> DEFAULT_DETECTOR
    java.nio.charset.Charset charset -> charset
    java.nio.charset.Charset detect(java.io.InputStream,org.apache.tika.metadata.Metadata,java.util.List,org.apache.tika.config.LoadErrorHandler) -> detect
    void <init>(java.io.InputStream,java.nio.charset.Charset) -> <init>
    void <init>(java.io.InputStream,org.apache.tika.metadata.Metadata,java.util.List,org.apache.tika.config.LoadErrorHandler) -> <init>
    void <init>(java.io.InputStream,org.apache.tika.metadata.Metadata,org.apache.tika.detect.EncodingDetector) -> <init>
    void <init>(java.io.InputStream,org.apache.tika.metadata.Metadata,org.apache.tika.config.ServiceLoader) -> <init>
    void <init>(java.io.InputStream,org.apache.tika.metadata.Metadata) -> <init>
    void <init>(java.io.InputStream) -> <init>
    java.io.InputStream getBuffered(java.io.InputStream) -> getBuffered
    java.nio.charset.Charset getCharset() -> getCharset
    org.xml.sax.InputSource asInputSource() -> asInputSource
    void <clinit>() -> <clinit>
org.apache.tika.detect.CompositeDetector -> org.apache.tika.detect.CompositeDetector:
    long serialVersionUID -> serialVersionUID
    org.apache.tika.mime.MediaTypeRegistry registry -> registry
    java.util.List detectors -> detectors
    void <init>(org.apache.tika.mime.MediaTypeRegistry,java.util.List,java.util.Collection) -> <init>
    void <init>(org.apache.tika.mime.MediaTypeRegistry,java.util.List) -> <init>
    void <init>(java.util.List) -> <init>
    void <init>(org.apache.tika.detect.Detector[]) -> <init>
    org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
    java.util.List getDetectors() -> getDetectors
    boolean isExcluded(java.util.Collection,java.lang.Class) -> isExcluded
    boolean assignableFrom(java.util.Collection,java.lang.Class) -> assignableFrom
org.apache.tika.detect.CompositeEncodingDetector -> org.apache.tika.detect.CompositeEncodingDetector:
    long serialVersionUID -> serialVersionUID
    java.util.List detectors -> detectors
    void <init>(java.util.List,java.util.Collection) -> <init>
    void <init>(java.util.List) -> <init>
    java.nio.charset.Charset detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
    java.util.List getDetectors() -> getDetectors
    boolean isExcluded(java.util.Collection,java.lang.Class) -> isExcluded
    boolean assignableFrom(java.util.Collection,java.lang.Class) -> assignableFrom
org.apache.tika.detect.DefaultDetector -> org.apache.tika.detect.DefaultDetector:
    long serialVersionUID -> serialVersionUID
    org.apache.tika.config.ServiceLoader loader -> loader
    java.util.List getDefaultDetectors(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> getDefaultDetectors
    void <init>(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader,java.util.Collection) -> <init>
    void <init>(org.apache.tika.mime.MimeTypes,org.apache.tika.config.ServiceLoader) -> <init>
    void <init>(org.apache.tika.mime.MimeTypes,java.lang.ClassLoader) -> <init>
    void <init>(java.lang.ClassLoader) -> <init>
    void <init>(org.apache.tika.mime.MimeTypes) -> <init>
    void <init>() -> <init>
    java.util.List getDetectors() -> getDetectors
org.apache.tika.detect.DefaultEncodingDetector -> org.apache.tika.detect.DefaultEncodingDetector:
    void <init>() -> <init>
    void <init>(org.apache.tika.config.ServiceLoader) -> <init>
    void <init>(org.apache.tika.config.ServiceLoader,java.util.Collection) -> <init>
org.apache.tika.detect.DefaultProbDetector -> org.apache.tika.detect.DefaultProbDetector:
    long serialVersionUID -> serialVersionUID
    org.apache.tika.config.ServiceLoader loader -> loader
    java.util.List getDefaultDetectors(org.apache.tika.mime.ProbabilisticMimeDetectionSelector,org.apache.tika.config.ServiceLoader) -> getDefaultDetectors
    void <init>(org.apache.tika.mime.ProbabilisticMimeDetectionSelector,org.apache.tika.config.ServiceLoader) -> <init>
    void <init>(org.apache.tika.mime.ProbabilisticMimeDetectionSelector,java.lang.ClassLoader) -> <init>
    void <init>(java.lang.ClassLoader) -> <init>
    void <init>(org.apache.tika.mime.MimeTypes) -> <init>
    void <init>() -> <init>
    java.util.List getDetectors() -> getDetectors
org.apache.tika.detect.Detector -> org.apache.tika.detect.Detector:
    org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
org.apache.tika.detect.EmptyDetector -> org.apache.tika.detect.EmptyDetector:
    org.apache.tika.detect.EmptyDetector INSTANCE -> INSTANCE
    void <init>() -> <init>
    org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
    void <clinit>() -> <clinit>
org.apache.tika.detect.EncodingDetector -> org.apache.tika.detect.EncodingDetector:
    java.nio.charset.Charset detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
org.apache.tika.detect.MagicDetector -> org.apache.tika.detect.MagicDetector:
    org.apache.tika.mime.MediaType type -> type
    int length -> length
    byte[] pattern -> pattern
    int patternLength -> patternLength
    boolean isRegex -> isRegex
    boolean isStringIgnoreCase -> isStringIgnoreCase
    byte[] mask -> mask
    int offsetRangeBegin -> offsetRangeBegin
    int offsetRangeEnd -> offsetRangeEnd
    org.apache.tika.detect.MagicDetector parse(org.apache.tika.mime.MediaType,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> parse
    byte[] decodeValue(java.lang.String,java.lang.String) -> decodeValue
    byte[] decodeString(java.lang.String,java.lang.String) -> decodeString
    void <init>(org.apache.tika.mime.MediaType,byte[]) -> <init>
    void <init>(org.apache.tika.mime.MediaType,byte[],int) -> <init>
    void <init>(org.apache.tika.mime.MediaType,byte[],byte[],int,int) -> <init>
    void <init>(org.apache.tika.mime.MediaType,byte[],byte[],boolean,int,int) -> <init>
    void <init>(org.apache.tika.mime.MediaType,byte[],byte[],boolean,boolean,int,int) -> <init>
    org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
    int getLength() -> getLength
    java.lang.String toString() -> toString
org.apache.tika.detect.NNExampleModelDetector -> org.apache.tika.detect.NNExampleModelDetector:
    java.lang.String EXAMPLE_NNMODEL_FILE -> EXAMPLE_NNMODEL_FILE
    long serialVersionUID -> serialVersionUID
    java.util.logging.Logger log -> log
    void <init>() -> <init>
    void <init>(java.nio.file.Path) -> <init>
    void <init>(java.io.File) -> <init>
    void loadDefaultModels(java.io.InputStream) -> loadDefaultModels
    void loadDefaultModels(java.lang.ClassLoader) -> loadDefaultModels
    void readDescription(org.apache.tika.detect.NNTrainedModelBuilder,java.lang.String) -> readDescription
    void readNNParams(org.apache.tika.detect.NNTrainedModelBuilder,java.lang.String) -> readNNParams
    void <clinit>() -> <clinit>
org.apache.tika.detect.NNTrainedModel -> org.apache.tika.detect.NNTrainedModel:
    int numOfInputs -> numOfInputs
    int numOfHidden -> numOfHidden
    int numOfOutputs -> numOfOutputs
    float[][] Theta1 -> Theta1
    float[][] Theta2 -> Theta2
    void <init>(int,int,int,float[]) -> <init>
    void populateThetas(float[]) -> populateThetas
    double predict(double[]) -> predict
    float predict(float[]) -> predict
org.apache.tika.detect.NNTrainedModelBuilder -> org.apache.tika.detect.NNTrainedModelBuilder:
    org.apache.tika.mime.MediaType type -> type
    int numOfInputs -> numOfInputs
    int numOfHidden -> numOfHidden
    int numOfOutputs -> numOfOutputs
    float[] params -> params
    void <init>() -> <init>
    org.apache.tika.mime.MediaType getType() -> getType
    int getNumOfInputs() -> getNumOfInputs
    int getNumOfHidden() -> getNumOfHidden
    int getNumOfOutputs() -> getNumOfOutputs
    float[] getParams() -> getParams
    void setType(org.apache.tika.mime.MediaType) -> setType
    void setNumOfInputs(int) -> setNumOfInputs
    void setNumOfHidden(int) -> setNumOfHidden
    void setNumOfOutputs(int) -> setNumOfOutputs
    void setParams(float[]) -> setParams
    org.apache.tika.detect.NNTrainedModel build() -> build
org.apache.tika.detect.NameDetector -> org.apache.tika.detect.NameDetector:
    java.util.Map patterns -> patterns
    void <init>(java.util.Map) -> <init>
    org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
org.apache.tika.detect.NonDetectingEncodingDetector -> org.apache.tika.detect.NonDetectingEncodingDetector:
    java.nio.charset.Charset charset -> charset
    void <init>() -> <init>
    void <init>(java.nio.charset.Charset) -> <init>
    java.nio.charset.Charset detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
    void setCharset(java.lang.String) -> setCharset
    java.nio.charset.Charset getCharset() -> getCharset
org.apache.tika.detect.OverrideDetector -> org.apache.tika.detect.OverrideDetector:
    void <init>() -> <init>
    org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
org.apache.tika.detect.TextDetector -> org.apache.tika.detect.TextDetector:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_NUMBER_OF_BYTES_TO_TEST -> DEFAULT_NUMBER_OF_BYTES_TO_TEST
    boolean[] IS_CONTROL_BYTE -> IS_CONTROL_BYTE
    int bytesToTest -> bytesToTest
    void <init>() -> <init>
    void <init>(int) -> <init>
    org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
    void <clinit>() -> <clinit>
org.apache.tika.detect.TextStatistics -> org.apache.tika.detect.TextStatistics:
    int[] counts -> counts
    int total -> total
    boolean $assertionsDisabled -> $assertionsDisabled
    void <init>() -> <init>
    void addData(byte[],int,int) -> addData
    boolean isMostlyAscii() -> isMostlyAscii
    boolean looksLikeUTF8() -> looksLikeUTF8
    int count() -> count
    int count(int) -> count
    int countControl() -> countControl
    int countSafeAscii() -> countSafeAscii
    int countEightBit() -> countEightBit
    int count(int,int) -> count
    int countSafeControl() -> countSafeControl
    void <clinit>() -> <clinit>
org.apache.tika.detect.TrainedModel -> org.apache.tika.detect.TrainedModel:
    void <init>() -> <init>
    double predict(double[]) -> predict
    float predict(float[]) -> predict
org.apache.tika.detect.TrainedModelDetector -> org.apache.tika.detect.TrainedModelDetector:
    java.util.Map MODEL_MAP -> MODEL_MAP
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    int getMinLength() -> getMinLength
    org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
    float[] readByteFrequencies(java.io.InputStream) -> readByteFrequencies
    void writeHisto(float[]) -> writeHisto
    void loadDefaultModels(java.nio.file.Path) -> loadDefaultModels
    void loadDefaultModels(java.io.File) -> loadDefaultModels
    void loadDefaultModels(java.io.InputStream) -> loadDefaultModels
    void loadDefaultModels(java.lang.ClassLoader) -> loadDefaultModels
    void registerModels(org.apache.tika.mime.MediaType,org.apache.tika.detect.TrainedModel) -> registerModels
org.apache.tika.detect.TypeDetector -> org.apache.tika.detect.TypeDetector:
    void <init>() -> <init>
    org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
org.apache.tika.detect.XmlRootExtractor -> org.apache.tika.detect.XmlRootExtractor:
    org.apache.tika.parser.ParseContext EMPTY_CONTEXT -> EMPTY_CONTEXT
    void <init>() -> <init>
    javax.xml.namespace.QName extractRootElement(byte[]) -> extractRootElement
    javax.xml.namespace.QName extractRootElement(java.io.InputStream) -> extractRootElement
    void <clinit>() -> <clinit>
org.apache.tika.detect.XmlRootExtractor$1 -> org.apache.tika.detect.XmlRootExtractor$1:
org.apache.tika.detect.XmlRootExtractor$ExtractorHandler -> org.apache.tika.detect.XmlRootExtractor$ExtractorHandler:
    javax.xml.namespace.QName rootElement -> rootElement
    void <init>() -> <init>
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void <init>(org.apache.tika.detect.XmlRootExtractor$1) -> <init>
    javax.xml.namespace.QName access$100(org.apache.tika.detect.XmlRootExtractor$ExtractorHandler) -> access$100
org.apache.tika.detect.ZeroSizeFileDetector -> org.apache.tika.detect.ZeroSizeFileDetector:
    void <init>() -> <init>
    org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
org.apache.tika.detect.package-info -> org.apache.tika.detect.package-info:
org.apache.tika.embedder.Embedder -> org.apache.tika.embedder.Embedder:
    java.util.Set getSupportedEmbedTypes(org.apache.tika.parser.ParseContext) -> getSupportedEmbedTypes
    void embed(org.apache.tika.metadata.Metadata,java.io.InputStream,java.io.OutputStream,org.apache.tika.parser.ParseContext) -> embed
org.apache.tika.embedder.ExternalEmbedder -> org.apache.tika.embedder.ExternalEmbedder:
    long serialVersionUID -> serialVersionUID
    java.lang.String METADATA_COMMAND_ARGUMENTS_TOKEN -> METADATA_COMMAND_ARGUMENTS_TOKEN
    java.lang.String METADATA_COMMAND_ARGUMENTS_SERIALIZED_TOKEN -> METADATA_COMMAND_ARGUMENTS_SERIALIZED_TOKEN
    java.util.Set supportedEmbedTypes -> supportedEmbedTypes
    java.util.Map metadataCommandArguments -> metadataCommandArguments
    java.lang.String[] command -> command
    java.lang.String commandAssignmentOperator -> commandAssignmentOperator
    java.lang.String commandAssignmentDelimeter -> commandAssignmentDelimeter
    java.lang.String commandAppendOperator -> commandAppendOperator
    boolean quoteAssignmentValues -> quoteAssignmentValues
    org.apache.tika.io.TemporaryResources tmp -> tmp
    void <init>() -> <init>
    java.util.Set getSupportedEmbedTypes(org.apache.tika.parser.ParseContext) -> getSupportedEmbedTypes
    java.util.Set getSupportedEmbedTypes() -> getSupportedEmbedTypes
    void setSupportedEmbedTypes(java.util.Set) -> setSupportedEmbedTypes
    java.lang.String[] getCommand() -> getCommand
    void setCommand(java.lang.String[]) -> setCommand
    java.lang.String getCommandAssignmentOperator() -> getCommandAssignmentOperator
    void setCommandAssignmentOperator(java.lang.String) -> setCommandAssignmentOperator
    java.lang.String getCommandAssignmentDelimeter() -> getCommandAssignmentDelimeter
    void setCommandAssignmentDelimeter(java.lang.String) -> setCommandAssignmentDelimeter
    java.lang.String getCommandAppendOperator() -> getCommandAppendOperator
    void setCommandAppendOperator(java.lang.String) -> setCommandAppendOperator
    boolean isQuoteAssignmentValues() -> isQuoteAssignmentValues
    void setQuoteAssignmentValues(boolean) -> setQuoteAssignmentValues
    java.util.Map getMetadataCommandArguments() -> getMetadataCommandArguments
    void setMetadataCommandArguments(java.util.Map) -> setMetadataCommandArguments
    java.util.List getCommandMetadataSegments(org.apache.tika.metadata.Metadata) -> getCommandMetadataSegments
    java.lang.String serializeMetadata(java.util.List) -> serializeMetadata
    void embed(org.apache.tika.metadata.Metadata,java.io.InputStream,java.io.OutputStream,org.apache.tika.parser.ParseContext) -> embed
    void multiThreadedStreamCopy(java.io.InputStream,java.io.OutputStream) -> multiThreadedStreamCopy
    void sendInputStreamToStdIn(java.io.InputStream,java.lang.Process) -> sendInputStreamToStdIn
    void sendStdOutToOutputStream(java.lang.Process,java.io.OutputStream) -> sendStdOutToOutputStream
    void sendStdErrToOutputStream(java.lang.Process,java.io.OutputStream) -> sendStdErrToOutputStream
    boolean check(java.lang.String,int[]) -> check
    boolean check(java.lang.String[],int[]) -> check
org.apache.tika.embedder.ExternalEmbedder$1 -> org.apache.tika.embedder.ExternalEmbedder$1:
    java.io.InputStream val$inputStream -> val$inputStream
    java.io.OutputStream val$outputStream -> val$outputStream
    org.apache.tika.embedder.ExternalEmbedder this$0 -> this$0
    void <init>(org.apache.tika.embedder.ExternalEmbedder,java.io.InputStream,java.io.OutputStream) -> <init>
    void run() -> run
org.apache.tika.exception.AccessPermissionException -> org.apache.tika.exception.AccessPermissionException:
    void <init>() -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.tika.exception.CorruptedFileException -> org.apache.tika.exception.CorruptedFileException:
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.tika.exception.EncryptedDocumentException -> org.apache.tika.exception.EncryptedDocumentException:
    void <init>() -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.tika.exception.TikaConfigException -> org.apache.tika.exception.TikaConfigException:
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.tika.exception.TikaException -> org.apache.tika.exception.TikaException:
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.tika.exception.TikaMemoryLimitException -> org.apache.tika.exception.TikaMemoryLimitException:
    void <init>(java.lang.String) -> <init>
org.apache.tika.exception.UnsupportedFormatException -> org.apache.tika.exception.UnsupportedFormatException:
    void <init>(java.lang.String) -> <init>
org.apache.tika.exception.ZeroByteFileException -> org.apache.tika.exception.ZeroByteFileException:
    void <init>(java.lang.String) -> <init>
org.apache.tika.exception.package-info -> org.apache.tika.exception.package-info:
org.apache.tika.extractor.ContainerExtractor -> org.apache.tika.extractor.ContainerExtractor:
    boolean isSupported(org.apache.tika.io.TikaInputStream) -> isSupported
    void extract(org.apache.tika.io.TikaInputStream,org.apache.tika.extractor.ContainerExtractor,org.apache.tika.extractor.EmbeddedResourceHandler) -> extract
org.apache.tika.extractor.DocumentSelector -> org.apache.tika.extractor.DocumentSelector:
    boolean select(org.apache.tika.metadata.Metadata) -> select
org.apache.tika.extractor.EmbeddedDocumentExtractor -> org.apache.tika.extractor.EmbeddedDocumentExtractor:
    boolean shouldParseEmbedded(org.apache.tika.metadata.Metadata) -> shouldParseEmbedded
    void parseEmbedded(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,boolean) -> parseEmbedded
org.apache.tika.extractor.EmbeddedDocumentUtil -> org.apache.tika.extractor.EmbeddedDocumentUtil:
    org.apache.tika.parser.ParseContext context -> context
    org.apache.tika.extractor.EmbeddedDocumentExtractor embeddedDocumentExtractor -> embeddedDocumentExtractor
    org.apache.tika.config.TikaConfig tikaConfig -> tikaConfig
    org.apache.tika.mime.MimeTypes mimeTypes -> mimeTypes
    org.apache.tika.detect.Detector detector -> detector
    void <init>(org.apache.tika.parser.ParseContext) -> <init>
    org.apache.tika.extractor.EmbeddedDocumentExtractor getEmbeddedDocumentExtractor(org.apache.tika.parser.ParseContext) -> getEmbeddedDocumentExtractor
    org.apache.tika.parser.PasswordProvider getPasswordProvider() -> getPasswordProvider
    org.apache.tika.detect.Detector getDetector() -> getDetector
    org.apache.tika.mime.MimeTypes getMimeTypes() -> getMimeTypes
    org.apache.tika.config.TikaConfig getTikaConfig() -> getTikaConfig
    java.lang.String getExtension(org.apache.tika.io.TikaInputStream,org.apache.tika.metadata.Metadata) -> getExtension
    org.apache.tika.config.TikaConfig getConfig() -> getConfig
    void recordException(java.lang.Throwable,org.apache.tika.metadata.Metadata) -> recordException
    void recordEmbeddedStreamException(java.lang.Throwable,org.apache.tika.metadata.Metadata) -> recordEmbeddedStreamException
    boolean shouldParseEmbedded(org.apache.tika.metadata.Metadata) -> shouldParseEmbedded
    org.apache.tika.extractor.EmbeddedDocumentExtractor getEmbeddedDocumentExtractor() -> getEmbeddedDocumentExtractor
    void parseEmbedded(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,boolean) -> parseEmbedded
    org.apache.tika.parser.Parser tryToFindExistingLeafParser(java.lang.Class,org.apache.tika.parser.ParseContext) -> tryToFindExistingLeafParser
    org.apache.tika.parser.Parser findInDecorated(org.apache.tika.parser.ParserDecorator,java.lang.Class) -> findInDecorated
    org.apache.tika.parser.Parser findInComposite(org.apache.tika.parser.CompositeParser,java.lang.Class,org.apache.tika.parser.ParseContext) -> findInComposite
    boolean equals(org.apache.tika.parser.Parser,java.lang.Class) -> equals
org.apache.tika.extractor.EmbeddedResourceHandler -> org.apache.tika.extractor.EmbeddedResourceHandler:
    void handle(java.lang.String,org.apache.tika.mime.MediaType,java.io.InputStream) -> handle
org.apache.tika.extractor.ParserContainerExtractor -> org.apache.tika.extractor.ParserContainerExtractor:
    long serialVersionUID -> serialVersionUID
    org.apache.tika.parser.Parser parser -> parser
    org.apache.tika.detect.Detector detector -> detector
    void <init>() -> <init>
    void <init>(org.apache.tika.config.TikaConfig) -> <init>
    void <init>(org.apache.tika.parser.Parser,org.apache.tika.detect.Detector) -> <init>
    boolean isSupported(org.apache.tika.io.TikaInputStream) -> isSupported
    void extract(org.apache.tika.io.TikaInputStream,org.apache.tika.extractor.ContainerExtractor,org.apache.tika.extractor.EmbeddedResourceHandler) -> extract
    org.apache.tika.parser.Parser access$100(org.apache.tika.extractor.ParserContainerExtractor) -> access$100
    org.apache.tika.detect.Detector access$200(org.apache.tika.extractor.ParserContainerExtractor) -> access$200
org.apache.tika.extractor.ParserContainerExtractor$1 -> org.apache.tika.extractor.ParserContainerExtractor$1:
org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser -> org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser:
    org.apache.tika.extractor.ContainerExtractor extractor -> extractor
    org.apache.tika.extractor.EmbeddedResourceHandler handler -> handler
    org.apache.tika.extractor.ParserContainerExtractor this$0 -> this$0
    void <init>(org.apache.tika.extractor.ParserContainerExtractor,org.apache.tika.extractor.ContainerExtractor,org.apache.tika.extractor.EmbeddedResourceHandler) -> <init>
    java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext) -> getSupportedTypes
    void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext) -> parse
    void <init>(org.apache.tika.extractor.ParserContainerExtractor,org.apache.tika.extractor.ContainerExtractor,org.apache.tika.extractor.EmbeddedResourceHandler,org.apache.tika.extractor.ParserContainerExtractor$1) -> <init>
org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor -> org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor:
    java.io.File ABSTRACT_PATH -> ABSTRACT_PATH
    org.apache.tika.parser.Parser DELEGATING_PARSER -> DELEGATING_PARSER
    org.apache.tika.parser.ParseContext context -> context
    void <init>(org.apache.tika.parser.ParseContext) -> <init>
    boolean shouldParseEmbedded(org.apache.tika.metadata.Metadata) -> shouldParseEmbedded
    void parseEmbedded(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,boolean) -> parseEmbedded
    void <clinit>() -> <clinit>
org.apache.tika.extractor.package-info -> org.apache.tika.extractor.package-info:
org.apache.tika.fork.ClassLoaderProxy -> org.apache.tika.fork.ClassLoaderProxy:
    long serialVersionUID -> serialVersionUID
    java.util.Set notFound -> notFound
    int resource -> resource
    java.io.DataInputStream input -> input
    java.io.DataOutputStream output -> output
    void <init>(int) -> <init>
    void init(java.io.DataInputStream,java.io.DataOutputStream) -> init
    java.net.URL findResource(java.lang.String) -> findResource
    java.util.Enumeration findResources(java.lang.String) -> findResources
    java.lang.Class findClass(java.lang.String) -> findClass
    void definePackageIfNecessary(java.lang.String,java.lang.Class) -> definePackageIfNecessary
    java.lang.String toPackageName(java.lang.String) -> toPackageName
    byte[] readStream() -> readStream
org.apache.tika.fork.ClassLoaderResource -> org.apache.tika.fork.ClassLoaderResource:
    java.lang.ClassLoader loader -> loader
    void <init>(java.lang.ClassLoader) -> <init>
    java.lang.Throwable process(java.io.DataInputStream,java.io.DataOutputStream) -> process
    void writeAndCloseStream(java.io.DataOutputStream,java.io.InputStream) -> writeAndCloseStream
org.apache.tika.fork.ContentHandlerProxy -> org.apache.tika.fork.ContentHandlerProxy:
    int START_DOCUMENT -> START_DOCUMENT
    int END_DOCUMENT -> END_DOCUMENT
    int START_PREFIX_MAPPING -> START_PREFIX_MAPPING
    int END_PREFIX_MAPPING -> END_PREFIX_MAPPING
    int START_ELEMENT -> START_ELEMENT
    int END_ELEMENT -> END_ELEMENT
    int CHARACTERS -> CHARACTERS
    int IGNORABLE_WHITESPACE -> IGNORABLE_WHITESPACE
    int PROCESSING_INSTRUCTION -> PROCESSING_INSTRUCTION
    int SKIPPED_ENTITY -> SKIPPED_ENTITY
    long serialVersionUID -> serialVersionUID
    int resource -> resource
    java.io.DataOutputStream output -> output
    void <init>(int) -> <init>
    void init(java.io.DataInputStream,java.io.DataOutputStream) -> init
    void sendRequest(int) -> sendRequest
    void sendString(java.lang.String) -> sendString
    void sendCharacters(char[],int,int) -> sendCharacters
    void doneSending() -> doneSending
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void skippedEntity(java.lang.String) -> skippedEntity
org.apache.tika.fork.ContentHandlerResource -> org.apache.tika.fork.ContentHandlerResource:
    org.xml.sax.ContentHandler handler -> handler
    void <init>(org.xml.sax.ContentHandler) -> <init>
    java.lang.Throwable process(java.io.DataInputStream,java.io.DataOutputStream) -> process
    void internalProcess(java.io.DataInputStream) -> internalProcess
    java.lang.String readString(java.io.DataInputStream) -> readString
    char[] readCharacters(java.io.DataInputStream) -> readCharacters
org.apache.tika.fork.ForkClient -> org.apache.tika.fork.ForkClient:
    java.util.concurrent.atomic.AtomicInteger CLIENT_COUNTER -> CLIENT_COUNTER
    java.util.List resources -> resources
    java.lang.ClassLoader loader -> loader
    java.io.File jar -> jar
    java.lang.Process process -> process
    java.io.DataOutputStream output -> output
    java.io.DataInputStream input -> input
    int id -> id
    int filesProcessed -> filesProcessed
    void <init>(java.nio.file.Path,org.apache.tika.fork.ParserFactoryFactory,java.util.List,org.apache.tika.fork.TimeoutLimits) -> <init>
    void <init>(java.nio.file.Path,org.apache.tika.fork.ParserFactoryFactory,java.lang.ClassLoader,java.util.List,org.apache.tika.fork.TimeoutLimits) -> <init>
    void <init>(java.lang.ClassLoader,java.lang.Object,java.util.List,org.apache.tika.fork.TimeoutLimits) -> <init>
    void waitForStartBeacon() -> waitForStartBeacon
    boolean ping() -> ping
    java.lang.Throwable call(java.lang.String,java.lang.Object[]) -> call
    int getFilesProcessed() -> getFilesProcessed
    void sendObject(java.lang.Object,java.util.List) -> sendObject
    void close() -> close
    java.lang.Throwable waitForResponse(java.util.List) -> waitForResponse
    java.io.File createBootstrapJar() -> createBootstrapJar
    void fillBootstrapJar(java.io.File) -> fillBootstrapJar
    int getId() -> getId
    void <clinit>() -> <clinit>
org.apache.tika.fork.ForkObjectInputStream -> org.apache.tika.fork.ForkObjectInputStream:
    java.lang.ClassLoader loader -> loader
    void <init>(java.io.InputStream,java.lang.ClassLoader) -> <init>
    java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
    void sendObject(java.lang.Object,java.io.DataOutputStream) -> sendObject
    java.lang.Object readObject(java.io.DataInputStream,java.lang.ClassLoader) -> readObject
org.apache.tika.fork.ForkParser -> org.apache.tika.fork.ForkParser:
    long serialVersionUID -> serialVersionUID
    java.lang.ClassLoader loader -> loader
    org.apache.tika.parser.Parser parser -> parser
    java.nio.file.Path tikaBin -> tikaBin
    org.apache.tika.fork.ParserFactoryFactory parserFactoryFactory -> parserFactoryFactory
    java.util.List java -> java
    int poolSize -> poolSize
    int currentlyInUse -> currentlyInUse
    java.util.Queue pool -> pool
    long serverPulseMillis -> serverPulseMillis
    long serverParseTimeoutMillis -> serverParseTimeoutMillis
    long serverWaitTimeoutMillis -> serverWaitTimeoutMillis
    int maxFilesProcessedPerClient -> maxFilesProcessedPerClient
    void <init>(java.nio.file.Path,org.apache.tika.fork.ParserFactoryFactory) -> <init>
    void <init>(java.nio.file.Path,org.apache.tika.fork.ParserFactoryFactory,java.lang.ClassLoader) -> <init>
    void <init>(java.lang.ClassLoader,org.apache.tika.parser.Parser) -> <init>
    void <init>(java.lang.ClassLoader) -> <init>
    void <init>() -> <init>
    int getPoolSize() -> getPoolSize
    void setPoolSize(int) -> setPoolSize
    java.lang.String getJavaCommand() -> getJavaCommand
    java.util.List getJavaCommandAsList() -> getJavaCommandAsList
    void setJavaCommand(java.util.List) -> setJavaCommand
    void setJavaCommand(java.lang.String) -> setJavaCommand
    java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext) -> getSupportedTypes
    void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext) -> parse
    void close() -> close
    org.apache.tika.fork.ForkClient acquireClient() -> acquireClient
    org.apache.tika.fork.ForkClient newClient() -> newClient
    void releaseClient(org.apache.tika.fork.ForkClient,boolean) -> releaseClient
    void setServerPulseMillis(long) -> setServerPulseMillis
    void setServerParseTimeoutMillis(long) -> setServerParseTimeoutMillis
    void setServerWaitTimeoutMillis(long) -> setServerWaitTimeoutMillis
    void setMaxFilesProcessedPerServer(int) -> setMaxFilesProcessedPerServer
org.apache.tika.fork.ForkProxy -> org.apache.tika.fork.ForkProxy:
    void init(java.io.DataInputStream,java.io.DataOutputStream) -> init
org.apache.tika.fork.ForkResource -> org.apache.tika.fork.ForkResource:
    java.lang.Throwable process(java.io.DataInputStream,java.io.DataOutputStream) -> process
org.apache.tika.fork.ForkServer -> org.apache.tika.fork.ForkServer:
    byte ERROR -> ERROR
    byte DONE -> DONE
    byte CALL -> CALL
    byte PING -> PING
    byte RESOURCE -> RESOURCE
    byte READY -> READY
    byte FAILED_TO_START -> FAILED_TO_START
    byte INIT_PARSER_FACTORY_FACTORY -> INIT_PARSER_FACTORY_FACTORY
    byte INIT_LOADER_PARSER -> INIT_LOADER_PARSER
    byte INIT_PARSER_FACTORY_FACTORY_LOADER -> INIT_PARSER_FACTORY_FACTORY_LOADER
    long serverPulseMillis -> serverPulseMillis
    long serverParserTimeoutMillis -> serverParserTimeoutMillis
    long serverWaitTimeoutMillis -> serverWaitTimeoutMillis
    java.lang.Object[] lock -> lock
    java.io.DataInputStream input -> input
    java.io.DataOutputStream output -> output
    boolean active -> active
    java.lang.Object parser -> parser
    java.lang.ClassLoader classLoader -> classLoader
    boolean parsing -> parsing
    long since -> since
    void main(java.lang.String[]) -> main
    void <init>(java.io.InputStream,java.io.OutputStream,long,long,long) -> <init>
    void run() -> run
    void processRequests() -> processRequests
    void initializeParserAndLoader() -> initializeParserAndLoader
    void call(java.lang.ClassLoader,java.lang.Object) -> call
    java.lang.reflect.Method getMethod(java.lang.Object,java.lang.String) -> getMethod
    java.lang.Object readObject(java.lang.ClassLoader) -> readObject
org.apache.tika.fork.InputStreamProxy -> org.apache.tika.fork.InputStreamProxy:
    long serialVersionUID -> serialVersionUID
    int resource -> resource
    java.io.DataInputStream input -> input
    java.io.DataOutputStream output -> output
    void <init>(int) -> <init>
    void init(java.io.DataInputStream,java.io.DataOutputStream) -> init
    int read() -> read
    int read(byte[],int,int) -> read
org.apache.tika.fork.InputStreamResource -> org.apache.tika.fork.InputStreamResource:
    java.io.InputStream stream -> stream
    void <init>(java.io.InputStream) -> <init>
    java.lang.Throwable process(java.io.DataInputStream,java.io.DataOutputStream) -> process
org.apache.tika.fork.MemoryURLConnection -> org.apache.tika.fork.MemoryURLConnection:
    byte[] data -> data
    void <init>(java.net.URL,byte[]) -> <init>
    void connect() -> connect
    java.io.InputStream getInputStream() -> getInputStream
org.apache.tika.fork.MemoryURLStreamHandler -> org.apache.tika.fork.MemoryURLStreamHandler:
    java.util.concurrent.atomic.AtomicInteger counter -> counter
    java.util.List records -> records
    void <init>() -> <init>
    java.net.URL createURL(byte[]) -> createURL
    java.net.URLConnection openConnection(java.net.URL) -> openConnection
    void <clinit>() -> <clinit>
org.apache.tika.fork.MemoryURLStreamHandlerFactory -> org.apache.tika.fork.MemoryURLStreamHandlerFactory:
    void <init>() -> <init>
    java.net.URLStreamHandler createURLStreamHandler(java.lang.String) -> createURLStreamHandler
org.apache.tika.fork.MemoryURLStreamRecord -> org.apache.tika.fork.MemoryURLStreamRecord:
    java.lang.ref.WeakReference url -> url
    byte[] data -> data
    void <init>() -> <init>
org.apache.tika.fork.MetadataContentHandler -> org.apache.tika.fork.MetadataContentHandler:
    org.apache.tika.metadata.Metadata metadata -> metadata
    void <init>(org.apache.tika.metadata.Metadata) -> <init>
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
org.apache.tika.fork.ParserFactoryFactory -> org.apache.tika.fork.ParserFactoryFactory:
    long serialVersionUID -> serialVersionUID
    java.lang.String className -> className
    java.util.Map args -> args
    void <init>(java.lang.String,java.util.Map) -> <init>
    org.apache.tika.parser.ParserFactory build() -> build
org.apache.tika.fork.RecursiveMetadataContentHandlerProxy -> org.apache.tika.fork.RecursiveMetadataContentHandlerProxy:
    byte EMBEDDED_DOCUMENT -> EMBEDDED_DOCUMENT
    byte MAIN_DOCUMENT -> MAIN_DOCUMENT
    byte HANDLER_AND_METADATA -> HANDLER_AND_METADATA
    byte METADATA_ONLY -> METADATA_ONLY
    byte COMPLETE -> COMPLETE
    long serialVersionUID -> serialVersionUID
    int resource -> resource
    java.io.DataOutputStream output -> output
    void <init>(int,org.apache.tika.sax.ContentHandlerFactory) -> <init>
    void init(java.io.DataInputStream,java.io.DataOutputStream) -> init
    void endEmbeddedDocument(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata) -> endEmbeddedDocument
    void endDocument(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata) -> endDocument
    void proxyBackToClient(int,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata) -> proxyBackToClient
    void send(java.lang.Object) -> send
    void sendBytes(byte[]) -> sendBytes
    byte[] serialize(java.lang.Object) -> serialize
    void doneSending() -> doneSending
org.apache.tika.fork.RecursiveMetadataContentHandlerResource -> org.apache.tika.fork.RecursiveMetadataContentHandlerResource:
    org.xml.sax.ContentHandler DEFAULT_HANDLER -> DEFAULT_HANDLER
    org.apache.tika.sax.AbstractRecursiveParserWrapperHandler handler -> handler
    void <init>(org.apache.tika.sax.RecursiveParserWrapperHandler) -> <init>
    java.lang.Throwable process(java.io.DataInputStream,java.io.DataOutputStream) -> process
    void internalProcess(java.io.DataInputStream) -> internalProcess
    java.lang.Object readObject(java.io.DataInputStream) -> readObject
    void <clinit>() -> <clinit>
org.apache.tika.fork.TimeoutLimits -> org.apache.tika.fork.TimeoutLimits:
    long pulseMS -> pulseMS
    long parseTimeoutMS -> parseTimeoutMS
    long waitTimeoutMS -> waitTimeoutMS
    void <init>(long,long,long) -> <init>
    long getPulseMS() -> getPulseMS
    long getParseTimeoutMS() -> getParseTimeoutMS
    long getWaitTimeoutMS() -> getWaitTimeoutMS
org.apache.tika.fork.package-info -> org.apache.tika.fork.package-info:
org.apache.tika.io.BoundedInputStream -> org.apache.tika.io.BoundedInputStream:
    int EOF -> EOF
    long max -> max
    java.io.InputStream in -> in
    long pos -> pos
    void <init>(long,java.io.InputStream) -> <init>
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    void reset() -> reset
    void mark(int) -> mark
    boolean hasHitBound() -> hasHitBound
org.apache.tika.io.CloseShieldInputStream -> org.apache.tika.io.CloseShieldInputStream:
    void <init>(java.io.InputStream) -> <init>
    void close() -> close
org.apache.tika.io.ClosedInputStream -> org.apache.tika.io.ClosedInputStream:
    void <init>() -> <init>
    int read() -> read
org.apache.tika.io.CountingInputStream -> org.apache.tika.io.CountingInputStream:
    long count -> count
    void <init>(java.io.InputStream) -> <init>
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    int read() -> read
    long skip(long) -> skip
    int getCount() -> getCount
    int resetCount() -> resetCount
    long getByteCount() -> getByteCount
    long resetByteCount() -> resetByteCount
    java.lang.String toString() -> toString
org.apache.tika.io.EndianUtils -> org.apache.tika.io.EndianUtils:
    int LONG_SIZE -> LONG_SIZE
    void <init>() -> <init>
    short readShortLE(java.io.InputStream) -> readShortLE
    short readShortBE(java.io.InputStream) -> readShortBE
    int readUShortLE(java.io.InputStream) -> readUShortLE
    int readUShortBE(java.io.InputStream) -> readUShortBE
    long readUIntLE(java.io.InputStream) -> readUIntLE
    long readUIntBE(java.io.InputStream) -> readUIntBE
    int readIntLE(java.io.InputStream) -> readIntLE
    int readIntBE(java.io.InputStream) -> readIntBE
    long readLongLE(java.io.InputStream) -> readLongLE
    long readLongBE(java.io.InputStream) -> readLongBE
    long readUE7(java.io.InputStream) -> readUE7
    short getShortLE(byte[]) -> getShortLE
    short getShortLE(byte[],int) -> getShortLE
    int getUShortLE(byte[]) -> getUShortLE
    int getUShortLE(byte[],int) -> getUShortLE
    short getShortBE(byte[]) -> getShortBE
    short getShortBE(byte[],int) -> getShortBE
    int getUShortBE(byte[]) -> getUShortBE
    int getUShortBE(byte[],int) -> getUShortBE
    int getIntLE(byte[]) -> getIntLE
    int getIntLE(byte[],int) -> getIntLE
    int getIntBE(byte[]) -> getIntBE
    int getIntBE(byte[],int) -> getIntBE
    long getUIntLE(byte[]) -> getUIntLE
    long getUIntLE(byte[],int) -> getUIntLE
    long getUIntBE(byte[]) -> getUIntBE
    long getUIntBE(byte[],int) -> getUIntBE
    long getLongLE(byte[],int) -> getLongLE
    int ubyteToInt(byte) -> ubyteToInt
    short getUByte(byte[],int) -> getUByte
org.apache.tika.io.EndianUtils$BufferUnderrunException -> org.apache.tika.io.EndianUtils$BufferUnderrunException:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
org.apache.tika.io.FilenameUtils -> org.apache.tika.io.FilenameUtils:
    char[] RESERVED_FILENAME_CHARACTERS -> RESERVED_FILENAME_CHARACTERS
    java.util.HashSet RESERVED -> RESERVED
    void <init>() -> <init>
    java.lang.String normalize(java.lang.String) -> normalize
    java.lang.String getName(java.lang.String) -> getName
    void <clinit>() -> <clinit>
org.apache.tika.io.IOExceptionWithCause -> org.apache.tika.io.IOExceptionWithCause:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.lang.Throwable) -> <init>
org.apache.tika.io.IOUtils -> org.apache.tika.io.IOUtils:
    java.nio.charset.Charset UTF_8 -> UTF_8
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    void <init>() -> <init>
    void closeQuietly(java.io.Reader) -> closeQuietly
    void closeQuietly(java.nio.channels.Channel) -> closeQuietly
    void closeQuietly(java.io.Writer) -> closeQuietly
    void closeQuietly(java.io.InputStream) -> closeQuietly
    void closeQuietly(java.io.OutputStream) -> closeQuietly
    byte[] toByteArray(java.io.InputStream) -> toByteArray
    byte[] toByteArray(java.io.Reader) -> toByteArray
    byte[] toByteArray(java.io.Reader,java.lang.String) -> toByteArray
    byte[] toByteArray(java.lang.String) -> toByteArray
    char[] toCharArray(java.io.InputStream) -> toCharArray
    char[] toCharArray(java.io.InputStream,java.lang.String) -> toCharArray
    char[] toCharArray(java.io.Reader) -> toCharArray
    java.lang.String toString(java.io.InputStream) -> toString
    java.lang.String toString(java.io.InputStream,java.lang.String) -> toString
    java.lang.String toString(java.io.Reader) -> toString
    java.lang.String toString(byte[]) -> toString
    java.lang.String toString(byte[],java.lang.String) -> toString
    java.util.List readLines(java.io.InputStream) -> readLines
    java.util.List readLines(java.io.InputStream,java.lang.String) -> readLines
    java.util.List readLines(java.io.Reader) -> readLines
    java.io.InputStream toInputStream(java.lang.CharSequence) -> toInputStream
    java.io.InputStream toInputStream(java.lang.CharSequence,java.lang.String) -> toInputStream
    java.io.InputStream toInputStream(java.lang.String) -> toInputStream
    java.io.InputStream toInputStream(java.lang.String,java.lang.String) -> toInputStream
    void write(byte[],java.io.OutputStream) -> write
    void write(byte[],java.io.Writer) -> write
    void write(byte[],java.io.Writer,java.lang.String) -> write
    void write(char[],java.io.Writer) -> write
    void write(char[],java.io.OutputStream) -> write
    void write(char[],java.io.OutputStream,java.lang.String) -> write
    void write(java.lang.CharSequence,java.io.Writer) -> write
    void write(java.lang.CharSequence,java.io.OutputStream) -> write
    void write(java.lang.CharSequence,java.io.OutputStream,java.lang.String) -> write
    void write(java.lang.String,java.io.Writer) -> write
    void write(java.lang.String,java.io.OutputStream) -> write
    void write(java.lang.String,java.io.OutputStream,java.lang.String) -> write
    void write(java.lang.StringBuffer,java.io.Writer) -> write
    void write(java.lang.StringBuffer,java.io.OutputStream) -> write
    void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String) -> write
    int copy(java.io.InputStream,java.io.OutputStream) -> copy
    long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    void copy(java.io.InputStream,java.io.Writer) -> copy
    void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    int copy(java.io.Reader,java.io.Writer) -> copy
    long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    void copy(java.io.Reader,java.io.OutputStream) -> copy
    void copy(java.io.Reader,java.io.OutputStream,java.lang.String) -> copy
    boolean contentEquals(java.io.InputStream,java.io.InputStream) -> contentEquals
    boolean contentEquals(java.io.Reader,java.io.Reader) -> contentEquals
    int read(java.io.InputStream,byte[],int,int) -> read
    void <clinit>() -> <clinit>
org.apache.tika.io.LookaheadInputStream -> org.apache.tika.io.LookaheadInputStream:
    java.io.InputStream stream -> stream
    byte[] buffer -> buffer
    int buffered -> buffered
    int position -> position
    int mark -> mark
    void <init>(java.io.InputStream,int) -> <init>
    void close() -> close
    void fill() -> fill
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
org.apache.tika.io.MappedBufferCleaner -> org.apache.tika.io.MappedBufferCleaner:
    org.apache.tika.io.MappedBufferCleaner$BufferCleaner CLEANER -> CLEANER
    boolean UNMAP_SUPPORTED -> UNMAP_SUPPORTED
    java.lang.String UNMAP_NOT_SUPPORTED_REASON -> UNMAP_NOT_SUPPORTED_REASON
    boolean $assertionsDisabled -> $assertionsDisabled
    void <init>() -> <init>
    void freeBuffer(java.nio.ByteBuffer) -> freeBuffer
    java.lang.Object unmapHackImpl() -> unmapHackImpl
    org.apache.tika.io.MappedBufferCleaner$BufferCleaner newBufferCleaner(java.lang.Class,java.lang.invoke.MethodHandle) -> newBufferCleaner
    void lambda$newBufferCleaner$1(java.lang.Class,java.lang.invoke.MethodHandle,java.lang.String,java.nio.ByteBuffer) -> lambda$newBufferCleaner$1
    java.lang.Throwable lambda$null$0(java.lang.invoke.MethodHandle,java.nio.ByteBuffer) -> lambda$null$0
    void <clinit>() -> <clinit>
org.apache.tika.io.MappedBufferCleaner$BufferCleaner -> org.apache.tika.io.MappedBufferCleaner$BufferCleaner:
    void freeBuffer(java.lang.String,java.nio.ByteBuffer) -> freeBuffer
org.apache.tika.io.NullInputStream -> org.apache.tika.io.NullInputStream:
    long size -> size
    long position -> position
    long mark -> mark
    long readlimit -> readlimit
    boolean eof -> eof
    boolean throwEofException -> throwEofException
    boolean markSupported -> markSupported
    void <init>(long) -> <init>
    void <init>(long,boolean,boolean) -> <init>
    long getPosition() -> getPosition
    long getSize() -> getSize
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    int processByte() -> processByte
    void processBytes(byte[],int,int) -> processBytes
    int doEndOfFile() -> doEndOfFile
org.apache.tika.io.NullOutputStream -> org.apache.tika.io.NullOutputStream:
    org.apache.tika.io.NullOutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    void <init>() -> <init>
    void write(byte[],int,int) -> write
    void write(int) -> write
    void write(byte[]) -> write
    void <clinit>() -> <clinit>
org.apache.tika.io.ProxyInputStream -> org.apache.tika.io.ProxyInputStream:
    void <init>(java.io.InputStream) -> <init>
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
    void beforeRead(int) -> beforeRead
    void afterRead(int) -> afterRead
    void handleIOException(java.io.IOException) -> handleIOException
org.apache.tika.io.TaggedIOException -> org.apache.tika.io.TaggedIOException:
    java.lang.Object tag -> tag
    void <init>(java.io.IOException,java.lang.Object) -> <init>
    java.lang.Object getTag() -> getTag
    java.io.IOException getCause() -> getCause
    java.lang.Throwable getCause() -> getCause
org.apache.tika.io.TaggedInputStream -> org.apache.tika.io.TaggedInputStream:
    java.io.Serializable tag -> tag
    void <init>(java.io.InputStream) -> <init>
    org.apache.tika.io.TaggedInputStream get(java.io.InputStream) -> get
    boolean isCauseOf(java.io.IOException) -> isCauseOf
    void throwIfCauseOf(java.lang.Exception) -> throwIfCauseOf
    void handleIOException(java.io.IOException) -> handleIOException
    java.lang.String toString() -> toString
org.apache.tika.io.TailStream -> org.apache.tika.io.TailStream:
    int SKIP_SIZE -> SKIP_SIZE
    byte[] tailBuffer -> tailBuffer
    int tailSize -> tailSize
    byte[] markBuffer -> markBuffer
    long bytesRead -> bytesRead
    long markBytesRead -> markBytesRead
    int currentIndex -> currentIndex
    int markIndex -> markIndex
    void <init>(java.io.InputStream,int) -> <init>
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    void mark(int) -> mark
    void reset() -> reset
    byte[] getTail() -> getTail
    void appendByte(byte) -> appendByte
    void appendBuf(byte[],int,int) -> appendBuf
    void replaceTailBuffer(byte[],int,int) -> replaceTailBuffer
    void copyToTailBuffer(byte[],int,int) -> copyToTailBuffer
org.apache.tika.io.TemporaryResources -> org.apache.tika.io.TemporaryResources:
    java.util.LinkedList resources -> resources
    java.nio.file.Path tempFileDir -> tempFileDir
    void <init>() -> <init>
    void setTemporaryFileDirectory(java.nio.file.Path) -> setTemporaryFileDirectory
    void setTemporaryFileDirectory(java.io.File) -> setTemporaryFileDirectory
    java.nio.file.Path createTempFile() -> createTempFile
    java.io.File createTemporaryFile() -> createTemporaryFile
    void addResource(java.io.Closeable) -> addResource
    java.io.Closeable getResource(java.lang.Class) -> getResource
    void close() -> close
    void dispose() -> dispose
org.apache.tika.io.TemporaryResources$1 -> org.apache.tika.io.TemporaryResources$1:
    java.nio.file.Path val$path -> val$path
    org.apache.tika.io.TemporaryResources this$0 -> this$0
    void <init>(org.apache.tika.io.TemporaryResources,java.nio.file.Path) -> <init>
    void close() -> close
org.apache.tika.io.TikaInputStream -> org.apache.tika.io.TikaInputStream:
    int BLOB_SIZE_THRESHOLD -> BLOB_SIZE_THRESHOLD
    java.nio.file.Path path -> path
    org.apache.tika.io.TemporaryResources tmp -> tmp
    long length -> length
    long position -> position
    long mark -> mark
    java.lang.Object openContainer -> openContainer
    int consecutiveEOFs -> consecutiveEOFs
    boolean isTikaInputStream(java.io.InputStream) -> isTikaInputStream
    org.apache.tika.io.TikaInputStream get(java.io.InputStream,org.apache.tika.io.TemporaryResources) -> get
    org.apache.tika.io.TikaInputStream get(java.io.InputStream) -> get
    org.apache.tika.io.TikaInputStream cast(java.io.InputStream) -> cast
    org.apache.tika.io.TikaInputStream get(byte[]) -> get
    org.apache.tika.io.TikaInputStream get(byte[],org.apache.tika.metadata.Metadata) -> get
    org.apache.tika.io.TikaInputStream get(java.nio.file.Path) -> get
    org.apache.tika.io.TikaInputStream get(java.nio.file.Path,org.apache.tika.metadata.Metadata) -> get
    org.apache.tika.io.TikaInputStream get(java.io.File) -> get
    org.apache.tika.io.TikaInputStream get(java.io.File,org.apache.tika.metadata.Metadata) -> get
    org.apache.tika.io.TikaInputStream get(java.sql.Blob) -> get
    org.apache.tika.io.TikaInputStream get(java.sql.Blob,org.apache.tika.metadata.Metadata) -> get
    org.apache.tika.io.TikaInputStream get(java.net.URI) -> get
    org.apache.tika.io.TikaInputStream get(java.net.URI,org.apache.tika.metadata.Metadata) -> get
    org.apache.tika.io.TikaInputStream get(java.net.URL) -> get
    org.apache.tika.io.TikaInputStream get(java.net.URL,org.apache.tika.metadata.Metadata) -> get
    void <init>(java.nio.file.Path) -> <init>
    void <init>(java.io.File) -> <init>
    void <init>(java.io.InputStream,org.apache.tika.io.TemporaryResources,long) -> <init>
    int peek(byte[]) -> peek
    java.lang.Object getOpenContainer() -> getOpenContainer
    void setOpenContainer(java.lang.Object) -> setOpenContainer
    boolean hasFile() -> hasFile
    java.nio.file.Path getPath() -> getPath
    java.nio.file.Path getPath(int) -> getPath
    java.io.File getFile() -> getFile
    java.nio.channels.FileChannel getFileChannel() -> getFileChannel
    boolean hasLength() -> hasLength
    long getLength() -> getLength
    long getPosition() -> getPosition
    long skip(long) -> skip
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    void reset() -> reset
    void close() -> close
    void afterRead(int) -> afterRead
    java.lang.String toString() -> toString
org.apache.tika.io.TikaInputStream$1 -> org.apache.tika.io.TikaInputStream$1:
    java.io.InputStream val$oldStream -> val$oldStream
    org.apache.tika.io.TikaInputStream this$0 -> this$0
    void <init>(org.apache.tika.io.TikaInputStream,java.io.InputStream,java.io.InputStream) -> <init>
    void close() -> close
org.apache.tika.io.package-info -> org.apache.tika.io.package-info:
org.apache.tika.language.LanguageIdentifier -> org.apache.tika.language.LanguageIdentifier:
    java.util.Map PROFILES -> PROFILES
    java.lang.String PROFILE_SUFFIX -> PROFILE_SUFFIX
    java.util.Properties props -> props
    java.lang.String errors -> errors
    java.lang.String PROPERTIES_OVERRIDE_FILE -> PROPERTIES_OVERRIDE_FILE
    java.lang.String PROPERTIES_FILE -> PROPERTIES_FILE
    java.lang.String LANGUAGES_KEY -> LANGUAGES_KEY
    double CERTAINTY_LIMIT -> CERTAINTY_LIMIT
    java.lang.String language -> language
    double distance -> distance
    void addProfile(java.lang.String) -> addProfile
    void addProfile(java.lang.String,org.apache.tika.language.LanguageProfile) -> addProfile
    void <init>(org.apache.tika.language.LanguageProfile) -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String getLanguage() -> getLanguage
    boolean isReasonablyCertain() -> isReasonablyCertain
    void initProfiles() -> initProfiles
    void initProfiles(java.util.Map) -> initProfiles
    void clearProfiles() -> clearProfiles
    boolean hasErrors() -> hasErrors
    java.lang.String getErrors() -> getErrors
    java.util.Set getSupportedLanguages() -> getSupportedLanguages
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
org.apache.tika.language.LanguageProfile -> org.apache.tika.language.LanguageProfile:
    int DEFAULT_NGRAM_LENGTH -> DEFAULT_NGRAM_LENGTH
    int length -> length
    java.util.Map ngrams -> ngrams
    org.apache.tika.language.LanguageProfile$Interleaved interleaved -> interleaved
    boolean useInterleaved -> useInterleaved
    long count -> count
    void <init>(int) -> <init>
    void <init>() -> <init>
    void <init>(java.lang.String,int) -> <init>
    void <init>(java.lang.String) -> <init>
    long getCount() -> getCount
    long getCount(java.lang.String) -> getCount
    void add(java.lang.String) -> add
    void add(java.lang.String,long) -> add
    double distance(org.apache.tika.language.LanguageProfile) -> distance
    double distanceStandard(org.apache.tika.language.LanguageProfile) -> distanceStandard
    java.lang.String toString() -> toString
    double distanceInterleaved(org.apache.tika.language.LanguageProfile) -> distanceInterleaved
    double square(double) -> square
    org.apache.tika.language.LanguageProfile$Interleaved updateInterleaved() -> updateInterleaved
    long access$300(org.apache.tika.language.LanguageProfile) -> access$300
    java.util.Map access$400(org.apache.tika.language.LanguageProfile) -> access$400
    int access$500(org.apache.tika.language.LanguageProfile) -> access$500
    void <clinit>() -> <clinit>
org.apache.tika.language.LanguageProfile$1 -> org.apache.tika.language.LanguageProfile$1:
org.apache.tika.language.LanguageProfile$Counter -> org.apache.tika.language.LanguageProfile$Counter:
    long count -> count
    void <init>() -> <init>
    java.lang.String toString() -> toString
    long access$100(org.apache.tika.language.LanguageProfile$Counter) -> access$100
    void <init>(org.apache.tika.language.LanguageProfile$1) -> <init>
    long access$102(org.apache.tika.language.LanguageProfile$Counter,long) -> access$102
org.apache.tika.language.LanguageProfile$Interleaved -> org.apache.tika.language.LanguageProfile$Interleaved:
    char[] entries -> entries
    int size -> size
    long entriesGeneratedAtCount -> entriesGeneratedAtCount
    org.apache.tika.language.LanguageProfile this$0 -> this$0
    void <init>(org.apache.tika.language.LanguageProfile) -> <init>
    void update() -> update
    org.apache.tika.language.LanguageProfile$Interleaved$Entry firstEntry() -> firstEntry
    java.util.List getSortedNgrams() -> getSortedNgrams
    void <init>(org.apache.tika.language.LanguageProfile,org.apache.tika.language.LanguageProfile$1) -> <init>
    int access$800(org.apache.tika.language.LanguageProfile$Interleaved) -> access$800
    char[] access$900(org.apache.tika.language.LanguageProfile$Interleaved) -> access$900
org.apache.tika.language.LanguageProfile$Interleaved$1 -> org.apache.tika.language.LanguageProfile$Interleaved$1:
    org.apache.tika.language.LanguageProfile$Interleaved this$1 -> this$1
    void <init>(org.apache.tika.language.LanguageProfile$Interleaved) -> <init>
    int compare(java.util.Map$Entry,java.util.Map$Entry) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.tika.language.LanguageProfile$Interleaved$Entry -> org.apache.tika.language.LanguageProfile$Interleaved$Entry:
    char[] ngram -> ngram
    int count -> count
    int pos -> pos
    org.apache.tika.language.LanguageProfile$Interleaved this$1 -> this$1
    void <init>(org.apache.tika.language.LanguageProfile$Interleaved) -> <init>
    void update(int) -> update
    int compareTo(org.apache.tika.language.LanguageProfile$Interleaved$Entry) -> compareTo
    boolean hasNext() -> hasNext
    boolean hasNgram() -> hasNgram
    void next() -> next
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    void <init>(org.apache.tika.language.LanguageProfile$Interleaved,org.apache.tika.language.LanguageProfile$1) -> <init>
    void access$700(org.apache.tika.language.LanguageProfile$Interleaved$Entry,int) -> access$700
org.apache.tika.language.LanguageProfilerBuilder -> org.apache.tika.language.LanguageProfilerBuilder:
    int ABSOLUTE_MIN_NGRAM_LENGTH -> ABSOLUTE_MIN_NGRAM_LENGTH
    int ABSOLUTE_MAX_NGRAM_LENGTH -> ABSOLUTE_MAX_NGRAM_LENGTH
    int DEFAULT_MIN_NGRAM_LENGTH -> DEFAULT_MIN_NGRAM_LENGTH
    int DEFAULT_MAX_NGRAM_LENGTH -> DEFAULT_MAX_NGRAM_LENGTH
    java.lang.String FILE_EXTENSION -> FILE_EXTENSION
    int MAX_SIZE -> MAX_SIZE
    char SEPARATOR -> SEPARATOR
    java.lang.String SEP_CHARSEQ -> SEP_CHARSEQ
    java.lang.String name -> name
    java.util.List sorted -> sorted
    int minLength -> minLength
    int maxLength -> maxLength
    int[] ngramcounts -> ngramcounts
    java.util.Map ngrams -> ngrams
    org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer word -> word
    void <init>(java.lang.String,int,int) -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String getName() -> getName
    void add(java.lang.StringBuffer) -> add
    void add(org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer) -> add
    void add(java.lang.CharSequence) -> add
    void analyze(java.lang.StringBuilder) -> analyze
    void add(java.lang.StringBuffer,int) -> add
    void normalize() -> normalize
    java.util.List getSorted() -> getSorted
    java.lang.String toString() -> toString
    float getSimilarity(org.apache.tika.language.LanguageProfilerBuilder) -> getSimilarity
    void load(java.io.InputStream) -> load
    org.apache.tika.language.LanguageProfilerBuilder create(java.lang.String,java.io.InputStream,java.lang.String) -> create
    void save(java.io.OutputStream) -> save
    void main(java.lang.String[]) -> main
    void <clinit>() -> <clinit>
org.apache.tika.language.LanguageProfilerBuilder$NGramEntry -> org.apache.tika.language.LanguageProfilerBuilder$NGramEntry:
    org.apache.tika.language.LanguageProfilerBuilder profile -> profile
    java.lang.CharSequence seq -> seq
    int count -> count
    float frequency -> frequency
    void <init>(java.lang.CharSequence) -> <init>
    void <init>(java.lang.String,int) -> <init>
    int getCount() -> getCount
    float getFrequency() -> getFrequency
    java.lang.CharSequence getSeq() -> getSeq
    int size() -> size
    int compareTo(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry) -> compareTo
    void inc() -> inc
    void setProfile(org.apache.tika.language.LanguageProfilerBuilder) -> setProfile
    org.apache.tika.language.LanguageProfilerBuilder getProfile() -> getProfile
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(java.lang.Object) -> compareTo
    int access$000(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry) -> access$000
    float access$102(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry,float) -> access$102
    float access$100(org.apache.tika.language.LanguageProfilerBuilder$NGramEntry) -> access$100
org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer -> org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer:
    char[] value -> value
    int count -> count
    void <init>() -> <init>
    void <init>(char[]) -> <init>
    void <init>(int) -> <init>
    void <init>(java.lang.String) -> <init>
    int length() -> length
    void expandCapacity(int) -> expandCapacity
    org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer clear() -> clear
    char charAt(int) -> charAt
    org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer append(java.lang.String) -> append
    org.apache.tika.language.LanguageProfilerBuilder$QuickStringBuffer append(char) -> append
    java.lang.CharSequence subSequence(int,int) -> subSequence
    java.lang.String toString() -> toString
org.apache.tika.language.ProfilingHandler -> org.apache.tika.language.ProfilingHandler:
    org.apache.tika.language.ProfilingWriter writer -> writer
    void <init>(org.apache.tika.language.ProfilingWriter) -> <init>
    void <init>(org.apache.tika.language.LanguageProfile) -> <init>
    void <init>() -> <init>
    org.apache.tika.language.LanguageProfile getProfile() -> getProfile
    org.apache.tika.language.LanguageIdentifier getLanguage() -> getLanguage
org.apache.tika.language.ProfilingWriter -> org.apache.tika.language.ProfilingWriter:
    org.apache.tika.language.LanguageProfile profile -> profile
    char[] buffer -> buffer
    int n -> n
    void <init>(org.apache.tika.language.LanguageProfile) -> <init>
    void <init>() -> <init>
    org.apache.tika.language.LanguageProfile getProfile() -> getProfile
    org.apache.tika.language.LanguageIdentifier getLanguage() -> getLanguage
    void write(char[],int,int) -> write
    void addLetter(char) -> addLetter
    void addSeparator() -> addSeparator
    void close() -> close
    void flush() -> flush
org.apache.tika.language.detect.LanguageConfidence -> org.apache.tika.language.detect.LanguageConfidence:
    org.apache.tika.language.detect.LanguageConfidence HIGH -> HIGH
    org.apache.tika.language.detect.LanguageConfidence MEDIUM -> MEDIUM
    org.apache.tika.language.detect.LanguageConfidence LOW -> LOW
    org.apache.tika.language.detect.LanguageConfidence NONE -> NONE
    org.apache.tika.language.detect.LanguageConfidence[] $VALUES -> $VALUES
    org.apache.tika.language.detect.LanguageConfidence[] values() -> values
    org.apache.tika.language.detect.LanguageConfidence valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
org.apache.tika.language.detect.LanguageDetector -> org.apache.tika.language.detect.LanguageDetector:
    org.apache.tika.config.ServiceLoader DEFAULT_SERVICE_LOADER -> DEFAULT_SERVICE_LOADER
    boolean mixedLanguages -> mixedLanguages
    boolean shortText -> shortText
    void <init>() -> <init>
    org.apache.tika.language.detect.LanguageDetector getDefaultLanguageDetector() -> getDefaultLanguageDetector
    java.util.List getLanguageDetectors() -> getLanguageDetectors
    java.util.List getLanguageDetectors(org.apache.tika.config.ServiceLoader) -> getLanguageDetectors
    boolean isMixedLanguages() -> isMixedLanguages
    org.apache.tika.language.detect.LanguageDetector setMixedLanguages(boolean) -> setMixedLanguages
    boolean isShortText() -> isShortText
    org.apache.tika.language.detect.LanguageDetector setShortText(boolean) -> setShortText
    org.apache.tika.language.detect.LanguageDetector loadModels() -> loadModels
    org.apache.tika.language.detect.LanguageDetector loadModels(java.util.Set) -> loadModels
    boolean hasModel(java.lang.String) -> hasModel
    org.apache.tika.language.detect.LanguageDetector setPriors(java.util.Map) -> setPriors
    void reset() -> reset
    void addText(char[],int,int) -> addText
    void addText(java.lang.CharSequence) -> addText
    boolean hasEnoughText() -> hasEnoughText
    java.util.List detectAll() -> detectAll
    org.apache.tika.language.detect.LanguageResult detect() -> detect
    java.util.List detectAll(java.lang.String) -> detectAll
    org.apache.tika.language.detect.LanguageResult detect(java.lang.CharSequence) -> detect
    void <clinit>() -> <clinit>
org.apache.tika.language.detect.LanguageDetector$1 -> org.apache.tika.language.detect.LanguageDetector$1:
    void <init>() -> <init>
    int compare(org.apache.tika.language.detect.LanguageDetector,org.apache.tika.language.detect.LanguageDetector) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.tika.language.detect.LanguageHandler -> org.apache.tika.language.detect.LanguageHandler:
    org.apache.tika.language.detect.LanguageWriter writer -> writer
    void <init>() -> <init>
    void <init>(org.apache.tika.language.detect.LanguageWriter) -> <init>
    void <init>(org.apache.tika.language.detect.LanguageDetector) -> <init>
    org.apache.tika.language.detect.LanguageDetector getDetector() -> getDetector
    org.apache.tika.language.detect.LanguageResult getLanguage() -> getLanguage
org.apache.tika.language.detect.LanguageNames -> org.apache.tika.language.detect.LanguageNames:
    void <init>() -> <init>
    java.lang.String makeName(java.lang.String,java.lang.String,java.lang.String) -> makeName
    java.lang.String normalizeName(java.lang.String) -> normalizeName
    boolean isMacroLanguage(java.lang.String) -> isMacroLanguage
    boolean hasMacroLanguage(java.lang.String) -> hasMacroLanguage
    java.lang.String getMacroLanguage(java.lang.String) -> getMacroLanguage
    boolean equals(java.lang.String,java.lang.String) -> equals
org.apache.tika.language.detect.LanguageResult -> org.apache.tika.language.detect.LanguageResult:
    org.apache.tika.language.detect.LanguageResult NULL -> NULL
    java.lang.String language -> language
    org.apache.tika.language.detect.LanguageConfidence confidence -> confidence
    float rawScore -> rawScore
    void <init>(java.lang.String,org.apache.tika.language.detect.LanguageConfidence,float) -> <init>
    java.lang.String getLanguage() -> getLanguage
    float getRawScore() -> getRawScore
    org.apache.tika.language.detect.LanguageConfidence getConfidence() -> getConfidence
    boolean isReasonablyCertain() -> isReasonablyCertain
    boolean isUnknown() -> isUnknown
    boolean isLanguage(java.lang.String) -> isLanguage
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
org.apache.tika.language.detect.LanguageWriter -> org.apache.tika.language.detect.LanguageWriter:
    org.apache.tika.language.detect.LanguageDetector detector -> detector
    void <init>(org.apache.tika.language.detect.LanguageDetector) -> <init>
    org.apache.tika.language.detect.LanguageDetector getDetector() -> getDetector
    org.apache.tika.language.detect.LanguageResult getLanguage() -> getLanguage
    void write(char[],int,int) -> write
    void close() -> close
    void flush() -> flush
    void reset() -> reset
org.apache.tika.language.translate.DefaultTranslator -> org.apache.tika.language.translate.DefaultTranslator:
    org.apache.tika.config.ServiceLoader loader -> loader
    void <init>(org.apache.tika.config.ServiceLoader) -> <init>
    void <init>() -> <init>
    java.util.List getDefaultTranslators(org.apache.tika.config.ServiceLoader) -> getDefaultTranslators
    org.apache.tika.language.translate.Translator getFirstAvailable(org.apache.tika.config.ServiceLoader) -> getFirstAvailable
    java.lang.String translate(java.lang.String,java.lang.String,java.lang.String) -> translate
    java.lang.String translate(java.lang.String,java.lang.String) -> translate
    java.util.List getTranslators() -> getTranslators
    org.apache.tika.language.translate.Translator getTranslator() -> getTranslator
    boolean isAvailable() -> isAvailable
org.apache.tika.language.translate.DefaultTranslator$1 -> org.apache.tika.language.translate.DefaultTranslator$1:
    void <init>() -> <init>
    int compare(org.apache.tika.language.translate.Translator,org.apache.tika.language.translate.Translator) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.tika.language.translate.EmptyTranslator -> org.apache.tika.language.translate.EmptyTranslator:
    void <init>() -> <init>
    java.lang.String translate(java.lang.String,java.lang.String,java.lang.String) -> translate
    java.lang.String translate(java.lang.String,java.lang.String) -> translate
    boolean isAvailable() -> isAvailable
org.apache.tika.language.translate.Translator -> org.apache.tika.language.translate.Translator:
    java.lang.String translate(java.lang.String,java.lang.String,java.lang.String) -> translate
    java.lang.String translate(java.lang.String,java.lang.String) -> translate
    boolean isAvailable() -> isAvailable
org.apache.tika.metadata.AccessPermissions -> org.apache.tika.metadata.AccessPermissions:
    java.lang.String PREFIX -> PREFIX
    org.apache.tika.metadata.Property CAN_MODIFY -> CAN_MODIFY
    org.apache.tika.metadata.Property EXTRACT_CONTENT -> EXTRACT_CONTENT
    org.apache.tika.metadata.Property EXTRACT_FOR_ACCESSIBILITY -> EXTRACT_FOR_ACCESSIBILITY
    org.apache.tika.metadata.Property ASSEMBLE_DOCUMENT -> ASSEMBLE_DOCUMENT
    org.apache.tika.metadata.Property FILL_IN_FORM -> FILL_IN_FORM
    org.apache.tika.metadata.Property CAN_MODIFY_ANNOTATIONS -> CAN_MODIFY_ANNOTATIONS
    org.apache.tika.metadata.Property CAN_PRINT -> CAN_PRINT
    org.apache.tika.metadata.Property CAN_PRINT_DEGRADED -> CAN_PRINT_DEGRADED
    void <clinit>() -> <clinit>
org.apache.tika.metadata.ClimateForcast -> org.apache.tika.metadata.ClimateForcast:
    java.lang.String PROGRAM_ID -> PROGRAM_ID
    java.lang.String COMMAND_LINE -> COMMAND_LINE
    java.lang.String HISTORY -> HISTORY
    java.lang.String TABLE_ID -> TABLE_ID
    java.lang.String INSTITUTION -> INSTITUTION
    java.lang.String SOURCE -> SOURCE
    java.lang.String CONTACT -> CONTACT
    java.lang.String PROJECT_ID -> PROJECT_ID
    java.lang.String CONVENTIONS -> CONVENTIONS
    java.lang.String REFERENCES -> REFERENCES
    java.lang.String ACKNOWLEDGEMENT -> ACKNOWLEDGEMENT
    java.lang.String REALIZATION -> REALIZATION
    java.lang.String EXPERIMENT_ID -> EXPERIMENT_ID
    java.lang.String COMMENT -> COMMENT
    java.lang.String MODEL_NAME_ENGLISH -> MODEL_NAME_ENGLISH
org.apache.tika.metadata.CreativeCommons -> org.apache.tika.metadata.CreativeCommons:
    java.lang.String LICENSE_URL -> LICENSE_URL
    java.lang.String LICENSE_LOCATION -> LICENSE_LOCATION
    java.lang.String WORK_TYPE -> WORK_TYPE
org.apache.tika.metadata.Database -> org.apache.tika.metadata.Database:
    java.lang.String PREFIX -> PREFIX
    org.apache.tika.metadata.Property TABLE_NAME -> TABLE_NAME
    org.apache.tika.metadata.Property ROW_COUNT -> ROW_COUNT
    org.apache.tika.metadata.Property COLUMN_COUNT -> COLUMN_COUNT
    org.apache.tika.metadata.Property COLUMN_NAME -> COLUMN_NAME
    void <clinit>() -> <clinit>
org.apache.tika.metadata.DublinCore -> org.apache.tika.metadata.DublinCore:
    java.lang.String NAMESPACE_URI_DC -> NAMESPACE_URI_DC
    java.lang.String NAMESPACE_URI_DC_TERMS -> NAMESPACE_URI_DC_TERMS
    java.lang.String PREFIX_DC -> PREFIX_DC
    java.lang.String PREFIX_DC_TERMS -> PREFIX_DC_TERMS
    org.apache.tika.metadata.Property FORMAT -> FORMAT
    org.apache.tika.metadata.Property IDENTIFIER -> IDENTIFIER
    org.apache.tika.metadata.Property MODIFIED -> MODIFIED
    org.apache.tika.metadata.Property CONTRIBUTOR -> CONTRIBUTOR
    org.apache.tika.metadata.Property COVERAGE -> COVERAGE
    org.apache.tika.metadata.Property CREATOR -> CREATOR
    org.apache.tika.metadata.Property CREATED -> CREATED
    org.apache.tika.metadata.Property DATE -> DATE
    org.apache.tika.metadata.Property DESCRIPTION -> DESCRIPTION
    org.apache.tika.metadata.Property LANGUAGE -> LANGUAGE
    org.apache.tika.metadata.Property PUBLISHER -> PUBLISHER
    org.apache.tika.metadata.Property RELATION -> RELATION
    org.apache.tika.metadata.Property RIGHTS -> RIGHTS
    org.apache.tika.metadata.Property SOURCE -> SOURCE
    org.apache.tika.metadata.Property SUBJECT -> SUBJECT
    org.apache.tika.metadata.Property TITLE -> TITLE
    org.apache.tika.metadata.Property TYPE -> TYPE
    void <clinit>() -> <clinit>
org.apache.tika.metadata.Geographic -> org.apache.tika.metadata.Geographic:
    org.apache.tika.metadata.Property LATITUDE -> LATITUDE
    org.apache.tika.metadata.Property LONGITUDE -> LONGITUDE
    org.apache.tika.metadata.Property ALTITUDE -> ALTITUDE
    void <clinit>() -> <clinit>
org.apache.tika.metadata.HTML -> org.apache.tika.metadata.HTML:
    java.lang.String PREFIX_HTML_META -> PREFIX_HTML_META
    org.apache.tika.metadata.Property SCRIPT_SOURCE -> SCRIPT_SOURCE
    void <clinit>() -> <clinit>
org.apache.tika.metadata.HttpHeaders -> org.apache.tika.metadata.HttpHeaders:
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String CONTENT_MD5 -> CONTENT_MD5
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    org.apache.tika.metadata.Property LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String LOCATION -> LOCATION
    void <clinit>() -> <clinit>
org.apache.tika.metadata.IPTC -> org.apache.tika.metadata.IPTC:
    java.lang.String NAMESPACE_URI_IPTC_CORE -> NAMESPACE_URI_IPTC_CORE
    java.lang.String NAMESPACE_URI_IPTC_EXT -> NAMESPACE_URI_IPTC_EXT
    java.lang.String NAMESPACE_URI_PLUS -> NAMESPACE_URI_PLUS
    java.lang.String PREFIX_IPTC_CORE -> PREFIX_IPTC_CORE
    java.lang.String PREFIX_IPTC_EXT -> PREFIX_IPTC_EXT
    java.lang.String PREFIX_PLUS -> PREFIX_PLUS
    org.apache.tika.metadata.Property CITY -> CITY
    org.apache.tika.metadata.Property COUNTRY -> COUNTRY
    org.apache.tika.metadata.Property COUNTRY_CODE -> COUNTRY_CODE
    org.apache.tika.metadata.Property DESCRIPTION -> DESCRIPTION
    org.apache.tika.metadata.Property HEADLINE -> HEADLINE
    org.apache.tika.metadata.Property INTELLECTUAL_GENRE -> INTELLECTUAL_GENRE
    org.apache.tika.metadata.Property KEYWORDS -> KEYWORDS
    org.apache.tika.metadata.Property PROVINCE_OR_STATE -> PROVINCE_OR_STATE
    org.apache.tika.metadata.Property SCENE_CODE -> SCENE_CODE
    org.apache.tika.metadata.Property SUBJECT_CODE -> SUBJECT_CODE
    org.apache.tika.metadata.Property SUBLOCATION -> SUBLOCATION
    org.apache.tika.metadata.Property DATE_CREATED -> DATE_CREATED
    org.apache.tika.metadata.Property DESCRIPTION_WRITER -> DESCRIPTION_WRITER
    org.apache.tika.metadata.Property INSTRUCTIONS -> INSTRUCTIONS
    org.apache.tika.metadata.Property JOB_ID -> JOB_ID
    org.apache.tika.metadata.Property TITLE -> TITLE
    org.apache.tika.metadata.Property COPYRIGHT_NOTICE -> COPYRIGHT_NOTICE
    org.apache.tika.metadata.Property CREATOR -> CREATOR
    org.apache.tika.metadata.Property CREATORS_CONTACT_INFO -> CREATORS_CONTACT_INFO
    org.apache.tika.metadata.Property CREATORS_JOB_TITLE -> CREATORS_JOB_TITLE
    org.apache.tika.metadata.Property CREDIT_LINE -> CREDIT_LINE
    org.apache.tika.metadata.Property RIGHTS_USAGE_TERMS -> RIGHTS_USAGE_TERMS
    org.apache.tika.metadata.Property SOURCE -> SOURCE
    org.apache.tika.metadata.Property CONTACT_INFO_ADDRESS -> CONTACT_INFO_ADDRESS
    org.apache.tika.metadata.Property CONTACT_INFO_CITY -> CONTACT_INFO_CITY
    org.apache.tika.metadata.Property CONTACT_INFO_COUNTRY -> CONTACT_INFO_COUNTRY
    org.apache.tika.metadata.Property CONTACT_INFO_EMAIL -> CONTACT_INFO_EMAIL
    org.apache.tika.metadata.Property CONTACT_INFO_PHONE -> CONTACT_INFO_PHONE
    org.apache.tika.metadata.Property CONTACT_INFO_POSTAL_CODE -> CONTACT_INFO_POSTAL_CODE
    org.apache.tika.metadata.Property CONTACT_INFO_STATE_PROVINCE -> CONTACT_INFO_STATE_PROVINCE
    org.apache.tika.metadata.Property CONTACT_INFO_WEB_URL -> CONTACT_INFO_WEB_URL
    org.apache.tika.metadata.Property URGENCY -> URGENCY
    org.apache.tika.metadata.Property CATEGORY -> CATEGORY
    org.apache.tika.metadata.Property SUPPLEMENTAL_CATEGORIES -> SUPPLEMENTAL_CATEGORIES
    org.apache.tika.metadata.Property ADDITIONAL_MODEL_INFO -> ADDITIONAL_MODEL_INFO
    org.apache.tika.metadata.Property ARTWORK_OR_OBJECT -> ARTWORK_OR_OBJECT
    org.apache.tika.metadata.Property ORGANISATION_CODE -> ORGANISATION_CODE
    org.apache.tika.metadata.Property CONTROLLED_VOCABULARY_TERM -> CONTROLLED_VOCABULARY_TERM
    org.apache.tika.metadata.Property LOCATION_SHOWN -> LOCATION_SHOWN
    org.apache.tika.metadata.Property MODEL_AGE -> MODEL_AGE
    org.apache.tika.metadata.Property ORGANISATION_NAME -> ORGANISATION_NAME
    org.apache.tika.metadata.Property PERSON -> PERSON
    org.apache.tika.metadata.Property DIGITAL_IMAGE_GUID -> DIGITAL_IMAGE_GUID
    org.apache.tika.metadata.Property DIGITAL_SOURCE_FILE_TYPE -> DIGITAL_SOURCE_FILE_TYPE
    org.apache.tika.metadata.Property DIGITAL_SOURCE_TYPE -> DIGITAL_SOURCE_TYPE
    org.apache.tika.metadata.Property EVENT -> EVENT
    org.apache.tika.metadata.Property IMAGE_REGISTRY_ENTRY -> IMAGE_REGISTRY_ENTRY
    org.apache.tika.metadata.Property IMAGE_SUPPLIER -> IMAGE_SUPPLIER
    org.apache.tika.metadata.Property IMAGE_SUPPLIER_ID -> IMAGE_SUPPLIER_ID
    java.lang.String IMAGE_SUPPLIER_ID_WRONG_CASE -> IMAGE_SUPPLIER_ID_WRONG_CASE
    org.apache.tika.metadata.Property IMAGE_SUPPLIER_NAME -> IMAGE_SUPPLIER_NAME
    org.apache.tika.metadata.Property IMAGE_SUPPLIER_IMAGE_ID -> IMAGE_SUPPLIER_IMAGE_ID
    org.apache.tika.metadata.Property IPTC_LAST_EDITED -> IPTC_LAST_EDITED
    org.apache.tika.metadata.Property LOCATION_CREATED -> LOCATION_CREATED
    org.apache.tika.metadata.Property MAX_AVAIL_HEIGHT -> MAX_AVAIL_HEIGHT
    org.apache.tika.metadata.Property MAX_AVAIL_WIDTH -> MAX_AVAIL_WIDTH
    org.apache.tika.metadata.Property PLUS_VERSION -> PLUS_VERSION
    org.apache.tika.metadata.Property COPYRIGHT_OWNER -> COPYRIGHT_OWNER
    org.apache.tika.metadata.Property COPYRIGHT_OWNER_ID -> COPYRIGHT_OWNER_ID
    java.lang.String COPYRIGHT_OWNER_ID_WRONG_CASE -> COPYRIGHT_OWNER_ID_WRONG_CASE
    org.apache.tika.metadata.Property COPYRIGHT_OWNER_NAME -> COPYRIGHT_OWNER_NAME
    org.apache.tika.metadata.Property IMAGE_CREATOR -> IMAGE_CREATOR
    org.apache.tika.metadata.Property IMAGE_CREATOR_ID -> IMAGE_CREATOR_ID
    java.lang.String IMAGE_CREATOR_ID_WRONG_CASE -> IMAGE_CREATOR_ID_WRONG_CASE
    org.apache.tika.metadata.Property IMAGE_CREATOR_NAME -> IMAGE_CREATOR_NAME
    org.apache.tika.metadata.Property LICENSOR -> LICENSOR
    org.apache.tika.metadata.Property LICENSOR_ID -> LICENSOR_ID
    java.lang.String LICENSOR_ID_WRONG_CASE -> LICENSOR_ID_WRONG_CASE
    org.apache.tika.metadata.Property LICENSOR_NAME -> LICENSOR_NAME
    org.apache.tika.metadata.Property LICENSOR_CITY -> LICENSOR_CITY
    org.apache.tika.metadata.Property LICENSOR_COUNTRY -> LICENSOR_COUNTRY
    org.apache.tika.metadata.Property LICENSOR_EMAIL -> LICENSOR_EMAIL
    org.apache.tika.metadata.Property LICENSOR_EXTENDED_ADDRESS -> LICENSOR_EXTENDED_ADDRESS
    org.apache.tika.metadata.Property LICENSOR_POSTAL_CODE -> LICENSOR_POSTAL_CODE
    org.apache.tika.metadata.Property LICENSOR_REGION -> LICENSOR_REGION
    org.apache.tika.metadata.Property LICENSOR_STREET_ADDRESS -> LICENSOR_STREET_ADDRESS
    org.apache.tika.metadata.Property LICENSOR_TELEPHONE_1 -> LICENSOR_TELEPHONE_1
    org.apache.tika.metadata.Property LICENSOR_TELEPHONE_2 -> LICENSOR_TELEPHONE_2
    org.apache.tika.metadata.Property LICENSOR_URL -> LICENSOR_URL
    org.apache.tika.metadata.Property MINOR_MODEL_AGE_DISCLOSURE -> MINOR_MODEL_AGE_DISCLOSURE
    org.apache.tika.metadata.Property MODEL_RELEASE_ID -> MODEL_RELEASE_ID
    org.apache.tika.metadata.Property MODEL_RELEASE_STATUS -> MODEL_RELEASE_STATUS
    org.apache.tika.metadata.Property PROPERTY_RELEASE_ID -> PROPERTY_RELEASE_ID
    org.apache.tika.metadata.Property PROPERTY_RELEASE_STATUS -> PROPERTY_RELEASE_STATUS
    org.apache.tika.metadata.Property ARTWORK_OR_OBJECT_DETAIL_COPYRIGHT_NOTICE -> ARTWORK_OR_OBJECT_DETAIL_COPYRIGHT_NOTICE
    org.apache.tika.metadata.Property ARTWORK_OR_OBJECT_DETAIL_CREATOR -> ARTWORK_OR_OBJECT_DETAIL_CREATOR
    org.apache.tika.metadata.Property ARTWORK_OR_OBJECT_DETAIL_DATE_CREATED -> ARTWORK_OR_OBJECT_DETAIL_DATE_CREATED
    org.apache.tika.metadata.Property ARTWORK_OR_OBJECT_DETAIL_SOURCE -> ARTWORK_OR_OBJECT_DETAIL_SOURCE
    org.apache.tika.metadata.Property ARTWORK_OR_OBJECT_DETAIL_SOURCE_INVENTORY_NUMBER -> ARTWORK_OR_OBJECT_DETAIL_SOURCE_INVENTORY_NUMBER
    org.apache.tika.metadata.Property ARTWORK_OR_OBJECT_DETAIL_TITLE -> ARTWORK_OR_OBJECT_DETAIL_TITLE
    org.apache.tika.metadata.Property LOCATION_SHOWN_CITY -> LOCATION_SHOWN_CITY
    org.apache.tika.metadata.Property LOCATION_SHOWN_COUNTRY_CODE -> LOCATION_SHOWN_COUNTRY_CODE
    org.apache.tika.metadata.Property LOCATION_SHOWN_COUNTRY_NAME -> LOCATION_SHOWN_COUNTRY_NAME
    org.apache.tika.metadata.Property LOCATION_SHOWN_PROVINCE_OR_STATE -> LOCATION_SHOWN_PROVINCE_OR_STATE
    org.apache.tika.metadata.Property LOCATION_SHOWN_SUBLOCATION -> LOCATION_SHOWN_SUBLOCATION
    org.apache.tika.metadata.Property LOCATION_SHOWN_WORLD_REGION -> LOCATION_SHOWN_WORLD_REGION
    org.apache.tika.metadata.Property LOCATION_CREATED_CITY -> LOCATION_CREATED_CITY
    org.apache.tika.metadata.Property LOCATION_CREATED_COUNTRY_CODE -> LOCATION_CREATED_COUNTRY_CODE
    org.apache.tika.metadata.Property LOCATION_CREATED_COUNTRY_NAME -> LOCATION_CREATED_COUNTRY_NAME
    org.apache.tika.metadata.Property LOCATION_CREATED_PROVINCE_OR_STATE -> LOCATION_CREATED_PROVINCE_OR_STATE
    org.apache.tika.metadata.Property LOCATION_CREATED_SUBLOCATION -> LOCATION_CREATED_SUBLOCATION
    org.apache.tika.metadata.Property LOCATION_CREATED_WORLD_REGION -> LOCATION_CREATED_WORLD_REGION
    org.apache.tika.metadata.Property REGISTRY_ENTRY_CREATED_ITEM_ID -> REGISTRY_ENTRY_CREATED_ITEM_ID
    org.apache.tika.metadata.Property REGISTRY_ENTRY_CREATED_ORGANISATION_ID -> REGISTRY_ENTRY_CREATED_ORGANISATION_ID
    org.apache.tika.metadata.Property[] PROPERTY_GROUP_IPTC_CORE -> PROPERTY_GROUP_IPTC_CORE
    org.apache.tika.metadata.Property[] PROPERTY_GROUP_IPTC_EXT -> PROPERTY_GROUP_IPTC_EXT
    void <clinit>() -> <clinit>
org.apache.tika.metadata.MSOffice -> org.apache.tika.metadata.MSOffice:
    java.lang.String KEYWORDS -> KEYWORDS
    java.lang.String COMMENTS -> COMMENTS
    java.lang.String LAST_AUTHOR -> LAST_AUTHOR
    java.lang.String AUTHOR -> AUTHOR
    java.lang.String APPLICATION_NAME -> APPLICATION_NAME
    java.lang.String REVISION_NUMBER -> REVISION_NUMBER
    java.lang.String TEMPLATE -> TEMPLATE
    java.lang.String TOTAL_TIME -> TOTAL_TIME
    java.lang.String PRESENTATION_FORMAT -> PRESENTATION_FORMAT
    java.lang.String NOTES -> NOTES
    java.lang.String MANAGER -> MANAGER
    java.lang.String APPLICATION_VERSION -> APPLICATION_VERSION
    java.lang.String VERSION -> VERSION
    java.lang.String CONTENT_STATUS -> CONTENT_STATUS
    java.lang.String CATEGORY -> CATEGORY
    java.lang.String COMPANY -> COMPANY
    java.lang.String SECURITY -> SECURITY
    org.apache.tika.metadata.Property SLIDE_COUNT -> SLIDE_COUNT
    org.apache.tika.metadata.Property PAGE_COUNT -> PAGE_COUNT
    org.apache.tika.metadata.Property PARAGRAPH_COUNT -> PARAGRAPH_COUNT
    org.apache.tika.metadata.Property LINE_COUNT -> LINE_COUNT
    org.apache.tika.metadata.Property WORD_COUNT -> WORD_COUNT
    org.apache.tika.metadata.Property CHARACTER_COUNT -> CHARACTER_COUNT
    org.apache.tika.metadata.Property CHARACTER_COUNT_WITH_SPACES -> CHARACTER_COUNT_WITH_SPACES
    org.apache.tika.metadata.Property TABLE_COUNT -> TABLE_COUNT
    org.apache.tika.metadata.Property IMAGE_COUNT -> IMAGE_COUNT
    org.apache.tika.metadata.Property OBJECT_COUNT -> OBJECT_COUNT
    java.lang.String EDIT_TIME -> EDIT_TIME
    org.apache.tika.metadata.Property CREATION_DATE -> CREATION_DATE
    org.apache.tika.metadata.Property LAST_SAVED -> LAST_SAVED
    org.apache.tika.metadata.Property LAST_PRINTED -> LAST_PRINTED
    java.lang.String USER_DEFINED_METADATA_NAME_PREFIX -> USER_DEFINED_METADATA_NAME_PREFIX
    void <clinit>() -> <clinit>
org.apache.tika.metadata.Message -> org.apache.tika.metadata.Message:
    java.lang.String MESSAGE_PREFIX -> MESSAGE_PREFIX
    java.lang.String MESSAGE_RAW_HEADER_PREFIX -> MESSAGE_RAW_HEADER_PREFIX
    java.lang.String MESSAGE_RECIPIENT_ADDRESS -> MESSAGE_RECIPIENT_ADDRESS
    java.lang.String MESSAGE_FROM -> MESSAGE_FROM
    java.lang.String MESSAGE_TO -> MESSAGE_TO
    java.lang.String MESSAGE_CC -> MESSAGE_CC
    java.lang.String MESSAGE_BCC -> MESSAGE_BCC
    java.lang.String MULTIPART_SUBTYPE -> MULTIPART_SUBTYPE
    java.lang.String MULTIPART_BOUNDARY -> MULTIPART_BOUNDARY
    org.apache.tika.metadata.Property MESSAGE_FROM_NAME -> MESSAGE_FROM_NAME
    org.apache.tika.metadata.Property MESSAGE_FROM_EMAIL -> MESSAGE_FROM_EMAIL
    org.apache.tika.metadata.Property MESSAGE_TO_NAME -> MESSAGE_TO_NAME
    org.apache.tika.metadata.Property MESSAGE_TO_DISPLAY_NAME -> MESSAGE_TO_DISPLAY_NAME
    org.apache.tika.metadata.Property MESSAGE_TO_EMAIL -> MESSAGE_TO_EMAIL
    org.apache.tika.metadata.Property MESSAGE_CC_NAME -> MESSAGE_CC_NAME
    org.apache.tika.metadata.Property MESSAGE_CC_DISPLAY_NAME -> MESSAGE_CC_DISPLAY_NAME
    org.apache.tika.metadata.Property MESSAGE_CC_EMAIL -> MESSAGE_CC_EMAIL
    org.apache.tika.metadata.Property MESSAGE_BCC_NAME -> MESSAGE_BCC_NAME
    org.apache.tika.metadata.Property MESSAGE_BCC_DISPLAY_NAME -> MESSAGE_BCC_DISPLAY_NAME
    org.apache.tika.metadata.Property MESSAGE_BCC_EMAIL -> MESSAGE_BCC_EMAIL
    void <clinit>() -> <clinit>
org.apache.tika.metadata.Metadata -> org.apache.tika.metadata.Metadata:
    long serialVersionUID -> serialVersionUID
    java.util.Map metadata -> metadata
    java.lang.String NAMESPACE_PREFIX_DELIMITER -> NAMESPACE_PREFIX_DELIMITER
    java.lang.String FORMAT -> FORMAT
    java.lang.String IDENTIFIER -> IDENTIFIER
    java.lang.String MODIFIED -> MODIFIED
    java.lang.String CONTRIBUTOR -> CONTRIBUTOR
    java.lang.String COVERAGE -> COVERAGE
    java.lang.String CREATOR -> CREATOR
    org.apache.tika.metadata.Property DATE -> DATE
    java.lang.String DESCRIPTION -> DESCRIPTION
    java.lang.String LANGUAGE -> LANGUAGE
    java.lang.String PUBLISHER -> PUBLISHER
    java.lang.String RELATION -> RELATION
    java.lang.String RIGHTS -> RIGHTS
    java.lang.String SOURCE -> SOURCE
    java.lang.String SUBJECT -> SUBJECT
    java.lang.String TITLE -> TITLE
    java.lang.String TYPE -> TYPE
    org.apache.tika.utils.DateUtils DATE_UTILS -> DATE_UTILS
    java.text.DateFormat createDateFormat(java.lang.String,java.util.TimeZone) -> createDateFormat
    java.util.Date parseDate(java.lang.String) -> parseDate
    void <init>() -> <init>
    boolean isMultiValued(org.apache.tika.metadata.Property) -> isMultiValued
    boolean isMultiValued(java.lang.String) -> isMultiValued
    java.lang.String[] names() -> names
    java.lang.String get(java.lang.String) -> get
    java.lang.String get(org.apache.tika.metadata.Property) -> get
    java.lang.Integer getInt(org.apache.tika.metadata.Property) -> getInt
    java.util.Date getDate(org.apache.tika.metadata.Property) -> getDate
    java.lang.String[] getValues(org.apache.tika.metadata.Property) -> getValues
    java.lang.String[] getValues(java.lang.String) -> getValues
    java.lang.String[] _getValues(java.lang.String) -> _getValues
    java.lang.String[] appendedValues(java.lang.String[],java.lang.String) -> appendedValues
    void add(java.lang.String,java.lang.String) -> add
    void add(org.apache.tika.metadata.Property,java.lang.String) -> add
    void setAll(java.util.Properties) -> setAll
    void set(java.lang.String,java.lang.String) -> set
    void set(org.apache.tika.metadata.Property,java.lang.String) -> set
    void set(org.apache.tika.metadata.Property,java.lang.String[]) -> set
    void set(org.apache.tika.metadata.Property,int) -> set
    void add(org.apache.tika.metadata.Property,int) -> add
    int[] getIntValues(org.apache.tika.metadata.Property) -> getIntValues
    void set(org.apache.tika.metadata.Property,double) -> set
    void set(org.apache.tika.metadata.Property,java.util.Date) -> set
    void set(org.apache.tika.metadata.Property,java.util.Calendar) -> set
    void remove(java.lang.String) -> remove
    int size() -> size
    int hashCode() -> hashCode
    int getMetadataEntryHashCode(java.util.Map$Entry) -> getMetadataEntryHashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
org.apache.tika.metadata.Office -> org.apache.tika.metadata.Office:
    java.lang.String NAMESPACE_URI_DOC_META -> NAMESPACE_URI_DOC_META
    java.lang.String PREFIX_DOC_META -> PREFIX_DOC_META
    java.lang.String USER_DEFINED_METADATA_NAME_PREFIX -> USER_DEFINED_METADATA_NAME_PREFIX
    org.apache.tika.metadata.Property KEYWORDS -> KEYWORDS
    org.apache.tika.metadata.Property INITIAL_AUTHOR -> INITIAL_AUTHOR
    org.apache.tika.metadata.Property LAST_AUTHOR -> LAST_AUTHOR
    org.apache.tika.metadata.Property AUTHOR -> AUTHOR
    org.apache.tika.metadata.Property CREATION_DATE -> CREATION_DATE
    org.apache.tika.metadata.Property SAVE_DATE -> SAVE_DATE
    org.apache.tika.metadata.Property PRINT_DATE -> PRINT_DATE
    org.apache.tika.metadata.Property SLIDE_COUNT -> SLIDE_COUNT
    org.apache.tika.metadata.Property PAGE_COUNT -> PAGE_COUNT
    org.apache.tika.metadata.Property PARAGRAPH_COUNT -> PARAGRAPH_COUNT
    org.apache.tika.metadata.Property LINE_COUNT -> LINE_COUNT
    org.apache.tika.metadata.Property WORD_COUNT -> WORD_COUNT
    org.apache.tika.metadata.Property CHARACTER_COUNT -> CHARACTER_COUNT
    org.apache.tika.metadata.Property CHARACTER_COUNT_WITH_SPACES -> CHARACTER_COUNT_WITH_SPACES
    org.apache.tika.metadata.Property TABLE_COUNT -> TABLE_COUNT
    org.apache.tika.metadata.Property IMAGE_COUNT -> IMAGE_COUNT
    org.apache.tika.metadata.Property OBJECT_COUNT -> OBJECT_COUNT
    org.apache.tika.metadata.Property MAPI_MESSAGE_CLASS -> MAPI_MESSAGE_CLASS
    org.apache.tika.metadata.Property MAPI_SENT_BY_SERVER_TYPE -> MAPI_SENT_BY_SERVER_TYPE
    org.apache.tika.metadata.Property MAPI_FROM_REPRESENTING_NAME -> MAPI_FROM_REPRESENTING_NAME
    org.apache.tika.metadata.Property MAPI_FROM_REPRESENTING_EMAIL -> MAPI_FROM_REPRESENTING_EMAIL
    org.apache.tika.metadata.Property MAPI_MESSAGE_CLIENT_SUBMIT_TIME -> MAPI_MESSAGE_CLIENT_SUBMIT_TIME
    void <clinit>() -> <clinit>
org.apache.tika.metadata.OfficeOpenXMLCore -> org.apache.tika.metadata.OfficeOpenXMLCore:
    java.lang.String NAMESPACE_URI -> NAMESPACE_URI
    java.lang.String PREFIX -> PREFIX
    org.apache.tika.metadata.Property CATEGORY -> CATEGORY
    org.apache.tika.metadata.Property CONTENT_STATUS -> CONTENT_STATUS
    org.apache.tika.metadata.Property LAST_MODIFIED_BY -> LAST_MODIFIED_BY
    org.apache.tika.metadata.Property LAST_PRINTED -> LAST_PRINTED
    org.apache.tika.metadata.Property REVISION -> REVISION
    org.apache.tika.metadata.Property VERSION -> VERSION
    org.apache.tika.metadata.Property SUBJECT -> SUBJECT
    void <clinit>() -> <clinit>
org.apache.tika.metadata.OfficeOpenXMLExtended -> org.apache.tika.metadata.OfficeOpenXMLExtended:
    java.lang.String NAMESPACE_URI -> NAMESPACE_URI
    java.lang.String WORD_PROCESSING_NAMESPACE_URI -> WORD_PROCESSING_NAMESPACE_URI
    java.lang.String PREFIX -> PREFIX
    java.lang.String WORD_PROCESSING_PREFIX -> WORD_PROCESSING_PREFIX
    org.apache.tika.metadata.Property TEMPLATE -> TEMPLATE
    org.apache.tika.metadata.Property MANAGER -> MANAGER
    org.apache.tika.metadata.Property COMPANY -> COMPANY
    org.apache.tika.metadata.Property PRESENTATION_FORMAT -> PRESENTATION_FORMAT
    org.apache.tika.metadata.Property NOTES -> NOTES
    org.apache.tika.metadata.Property TOTAL_TIME -> TOTAL_TIME
    org.apache.tika.metadata.Property HIDDEN_SLIDES -> HIDDEN_SLIDES
    org.apache.tika.metadata.Property APPLICATION -> APPLICATION
    org.apache.tika.metadata.Property APP_VERSION -> APP_VERSION
    org.apache.tika.metadata.Property DOC_SECURITY -> DOC_SECURITY
    org.apache.tika.metadata.Property COMMENTS -> COMMENTS
    void <clinit>() -> <clinit>
org.apache.tika.metadata.PDF -> org.apache.tika.metadata.PDF:
    java.lang.String PDF_PREFIX -> PDF_PREFIX
    java.lang.String PDFA_PREFIX -> PDFA_PREFIX
    java.lang.String PDFAID_PREFIX -> PDFAID_PREFIX
    java.lang.String PDF_DOC_INFO_PREFIX -> PDF_DOC_INFO_PREFIX
    java.lang.String PDF_DOC_INFO_CUSTOM_PREFIX -> PDF_DOC_INFO_CUSTOM_PREFIX
    org.apache.tika.metadata.Property DOC_INFO_CREATED -> DOC_INFO_CREATED
    org.apache.tika.metadata.Property DOC_INFO_CREATOR -> DOC_INFO_CREATOR
    org.apache.tika.metadata.Property DOC_INFO_CREATOR_TOOL -> DOC_INFO_CREATOR_TOOL
    org.apache.tika.metadata.Property DOC_INFO_MODIFICATION_DATE -> DOC_INFO_MODIFICATION_DATE
    org.apache.tika.metadata.Property DOC_INFO_KEY_WORDS -> DOC_INFO_KEY_WORDS
    org.apache.tika.metadata.Property DOC_INFO_PRODUCER -> DOC_INFO_PRODUCER
    org.apache.tika.metadata.Property DOC_INFO_SUBJECT -> DOC_INFO_SUBJECT
    org.apache.tika.metadata.Property DOC_INFO_TITLE -> DOC_INFO_TITLE
    org.apache.tika.metadata.Property DOC_INFO_TRAPPED -> DOC_INFO_TRAPPED
    org.apache.tika.metadata.Property PDF_VERSION -> PDF_VERSION
    org.apache.tika.metadata.Property PDFA_VERSION -> PDFA_VERSION
    org.apache.tika.metadata.Property PDF_EXTENSION_VERSION -> PDF_EXTENSION_VERSION
    org.apache.tika.metadata.Property PDFAID_CONFORMANCE -> PDFAID_CONFORMANCE
    org.apache.tika.metadata.Property PDFAID_PART -> PDFAID_PART
    org.apache.tika.metadata.Property IS_ENCRYPTED -> IS_ENCRYPTED
    org.apache.tika.metadata.Property ACTION_TRIGGER -> ACTION_TRIGGER
    org.apache.tika.metadata.Property CHARACTERS_PER_PAGE -> CHARACTERS_PER_PAGE
    org.apache.tika.metadata.Property UNMAPPED_UNICODE_CHARS_PER_PAGE -> UNMAPPED_UNICODE_CHARS_PER_PAGE
    void <clinit>() -> <clinit>
org.apache.tika.metadata.PagedText -> org.apache.tika.metadata.PagedText:
    org.apache.tika.metadata.Property N_PAGES -> N_PAGES
    void <clinit>() -> <clinit>
org.apache.tika.metadata.Photoshop -> org.apache.tika.metadata.Photoshop:
    java.lang.String NAMESPACE_URI_PHOTOSHOP -> NAMESPACE_URI_PHOTOSHOP
    java.lang.String PREFIX_PHOTOSHOP -> PREFIX_PHOTOSHOP
    org.apache.tika.metadata.Property AUTHORS_POSITION -> AUTHORS_POSITION
    java.lang.String[] _COLOR_MODE_CHOICES_INDEXED -> _COLOR_MODE_CHOICES_INDEXED
    org.apache.tika.metadata.Property COLOR_MODE -> COLOR_MODE
    org.apache.tika.metadata.Property CAPTION_WRITER -> CAPTION_WRITER
    org.apache.tika.metadata.Property CATEGORY -> CATEGORY
    org.apache.tika.metadata.Property CITY -> CITY
    org.apache.tika.metadata.Property COUNTRY -> COUNTRY
    org.apache.tika.metadata.Property CREDIT -> CREDIT
    org.apache.tika.metadata.Property DATE_CREATED -> DATE_CREATED
    org.apache.tika.metadata.Property HEADLINE -> HEADLINE
    org.apache.tika.metadata.Property INSTRUCTIONS -> INSTRUCTIONS
    org.apache.tika.metadata.Property SOURCE -> SOURCE
    org.apache.tika.metadata.Property STATE -> STATE
    org.apache.tika.metadata.Property SUPPLEMENTAL_CATEGORIES -> SUPPLEMENTAL_CATEGORIES
    org.apache.tika.metadata.Property TRANSMISSION_REFERENCE -> TRANSMISSION_REFERENCE
    org.apache.tika.metadata.Property URGENCY -> URGENCY
    void <clinit>() -> <clinit>
org.apache.tika.metadata.Property -> org.apache.tika.metadata.Property:
    java.util.Map properties -> properties
    java.lang.String name -> name
    boolean internal -> internal
    org.apache.tika.metadata.Property$PropertyType propertyType -> propertyType
    org.apache.tika.metadata.Property$ValueType valueType -> valueType
    org.apache.tika.metadata.Property primaryProperty -> primaryProperty
    org.apache.tika.metadata.Property[] secondaryExtractProperties -> secondaryExtractProperties
    java.util.Set choices -> choices
    void <init>(java.lang.String,boolean,org.apache.tika.metadata.Property$PropertyType,org.apache.tika.metadata.Property$ValueType,java.lang.String[],org.apache.tika.metadata.Property,org.apache.tika.metadata.Property[]) -> <init>
    void <init>(java.lang.String,boolean,org.apache.tika.metadata.Property$PropertyType,org.apache.tika.metadata.Property$ValueType,java.lang.String[]) -> <init>
    void <init>(java.lang.String,boolean,org.apache.tika.metadata.Property$ValueType,java.lang.String[]) -> <init>
    void <init>(java.lang.String,boolean,org.apache.tika.metadata.Property$ValueType) -> <init>
    void <init>(java.lang.String,boolean,org.apache.tika.metadata.Property$PropertyType,org.apache.tika.metadata.Property$ValueType) -> <init>
    java.lang.String getName() -> getName
    boolean isInternal() -> isInternal
    boolean isExternal() -> isExternal
    boolean isMultiValuePermitted() -> isMultiValuePermitted
    org.apache.tika.metadata.Property$PropertyType getPropertyType(java.lang.String) -> getPropertyType
    org.apache.tika.metadata.Property get(java.lang.String) -> get
    org.apache.tika.metadata.Property$PropertyType getPropertyType() -> getPropertyType
    org.apache.tika.metadata.Property$ValueType getValueType() -> getValueType
    java.util.Set getChoices() -> getChoices
    org.apache.tika.metadata.Property getPrimaryProperty() -> getPrimaryProperty
    org.apache.tika.metadata.Property[] getSecondaryExtractProperties() -> getSecondaryExtractProperties
    java.util.SortedSet getProperties(java.lang.String) -> getProperties
    org.apache.tika.metadata.Property internalBoolean(java.lang.String) -> internalBoolean
    org.apache.tika.metadata.Property internalClosedChoise(java.lang.String,java.lang.String[]) -> internalClosedChoise
    org.apache.tika.metadata.Property internalDate(java.lang.String) -> internalDate
    org.apache.tika.metadata.Property internalInteger(java.lang.String) -> internalInteger
    org.apache.tika.metadata.Property internalIntegerSequence(java.lang.String) -> internalIntegerSequence
    org.apache.tika.metadata.Property internalRational(java.lang.String) -> internalRational
    org.apache.tika.metadata.Property internalOpenChoise(java.lang.String,java.lang.String[]) -> internalOpenChoise
    org.apache.tika.metadata.Property internalReal(java.lang.String) -> internalReal
    org.apache.tika.metadata.Property internalText(java.lang.String) -> internalText
    org.apache.tika.metadata.Property internalTextBag(java.lang.String) -> internalTextBag
    org.apache.tika.metadata.Property internalURI(java.lang.String) -> internalURI
    org.apache.tika.metadata.Property externalClosedChoise(java.lang.String,java.lang.String[]) -> externalClosedChoise
    org.apache.tika.metadata.Property externalOpenChoise(java.lang.String,java.lang.String[]) -> externalOpenChoise
    org.apache.tika.metadata.Property externalDate(java.lang.String) -> externalDate
    org.apache.tika.metadata.Property externalReal(java.lang.String) -> externalReal
    org.apache.tika.metadata.Property externalInteger(java.lang.String) -> externalInteger
    org.apache.tika.metadata.Property externalBoolean(java.lang.String) -> externalBoolean
    org.apache.tika.metadata.Property externalText(java.lang.String) -> externalText
    org.apache.tika.metadata.Property externalTextBag(java.lang.String) -> externalTextBag
    org.apache.tika.metadata.Property composite(org.apache.tika.metadata.Property,org.apache.tika.metadata.Property[]) -> composite
    int compareTo(org.apache.tika.metadata.Property) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    void <clinit>() -> <clinit>
org.apache.tika.metadata.Property$PropertyType -> org.apache.tika.metadata.Property$PropertyType:
    org.apache.tika.metadata.Property$PropertyType SIMPLE -> SIMPLE
    org.apache.tika.metadata.Property$PropertyType STRUCTURE -> STRUCTURE
    org.apache.tika.metadata.Property$PropertyType BAG -> BAG
    org.apache.tika.metadata.Property$PropertyType SEQ -> SEQ
    org.apache.tika.metadata.Property$PropertyType ALT -> ALT
    org.apache.tika.metadata.Property$PropertyType COMPOSITE -> COMPOSITE
    org.apache.tika.metadata.Property$PropertyType[] $VALUES -> $VALUES
    org.apache.tika.metadata.Property$PropertyType[] values() -> values
    org.apache.tika.metadata.Property$PropertyType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
org.apache.tika.metadata.Property$ValueType -> org.apache.tika.metadata.Property$ValueType:
    org.apache.tika.metadata.Property$ValueType BOOLEAN -> BOOLEAN
    org.apache.tika.metadata.Property$ValueType OPEN_CHOICE -> OPEN_CHOICE
    org.apache.tika.metadata.Property$ValueType CLOSED_CHOICE -> CLOSED_CHOICE
    org.apache.tika.metadata.Property$ValueType DATE -> DATE
    org.apache.tika.metadata.Property$ValueType INTEGER -> INTEGER
    org.apache.tika.metadata.Property$ValueType LOCALE -> LOCALE
    org.apache.tika.metadata.Property$ValueType MIME_TYPE -> MIME_TYPE
    org.apache.tika.metadata.Property$ValueType PROPER_NAME -> PROPER_NAME
    org.apache.tika.metadata.Property$ValueType RATIONAL -> RATIONAL
    org.apache.tika.metadata.Property$ValueType REAL -> REAL
    org.apache.tika.metadata.Property$ValueType TEXT -> TEXT
    org.apache.tika.metadata.Property$ValueType URI -> URI
    org.apache.tika.metadata.Property$ValueType URL -> URL
    org.apache.tika.metadata.Property$ValueType XPATH -> XPATH
    org.apache.tika.metadata.Property$ValueType PROPERTY -> PROPERTY
    org.apache.tika.metadata.Property$ValueType[] $VALUES -> $VALUES
    org.apache.tika.metadata.Property$ValueType[] values() -> values
    org.apache.tika.metadata.Property$ValueType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
org.apache.tika.metadata.PropertyTypeException -> org.apache.tika.metadata.PropertyTypeException:
    void <init>(java.lang.String) -> <init>
    void <init>(org.apache.tika.metadata.Property$PropertyType,org.apache.tika.metadata.Property$PropertyType) -> <init>
    void <init>(org.apache.tika.metadata.Property$ValueType,org.apache.tika.metadata.Property$ValueType) -> <init>
    void <init>(org.apache.tika.metadata.Property$PropertyType) -> <init>
org.apache.tika.metadata.QuattroPro -> org.apache.tika.metadata.QuattroPro:
    java.lang.String QUATTROPRO_METADATA_NAME_PREFIX -> QUATTROPRO_METADATA_NAME_PREFIX
    org.apache.tika.metadata.Property ID -> ID
    org.apache.tika.metadata.Property VERSION -> VERSION
    org.apache.tika.metadata.Property BUILD -> BUILD
    org.apache.tika.metadata.Property LOWEST_VERSION -> LOWEST_VERSION
    void <clinit>() -> <clinit>
org.apache.tika.metadata.RTFMetadata -> org.apache.tika.metadata.RTFMetadata:
    java.lang.String PREFIX_RTF_META -> PREFIX_RTF_META
    java.lang.String RTF_PICT_META_PREFIX -> RTF_PICT_META_PREFIX
    org.apache.tika.metadata.Property THUMBNAIL -> THUMBNAIL
    org.apache.tika.metadata.Property EMB_APP_VERSION -> EMB_APP_VERSION
    org.apache.tika.metadata.Property EMB_CLASS -> EMB_CLASS
    org.apache.tika.metadata.Property EMB_TOPIC -> EMB_TOPIC
    org.apache.tika.metadata.Property EMB_ITEM -> EMB_ITEM
    void <clinit>() -> <clinit>
org.apache.tika.metadata.TIFF -> org.apache.tika.metadata.TIFF:
    org.apache.tika.metadata.Property BITS_PER_SAMPLE -> BITS_PER_SAMPLE
    org.apache.tika.metadata.Property IMAGE_LENGTH -> IMAGE_LENGTH
    org.apache.tika.metadata.Property IMAGE_WIDTH -> IMAGE_WIDTH
    org.apache.tika.metadata.Property SAMPLES_PER_PIXEL -> SAMPLES_PER_PIXEL
    org.apache.tika.metadata.Property FLASH_FIRED -> FLASH_FIRED
    org.apache.tika.metadata.Property EXPOSURE_TIME -> EXPOSURE_TIME
    org.apache.tika.metadata.Property F_NUMBER -> F_NUMBER
    org.apache.tika.metadata.Property FOCAL_LENGTH -> FOCAL_LENGTH
    org.apache.tika.metadata.Property ISO_SPEED_RATINGS -> ISO_SPEED_RATINGS
    org.apache.tika.metadata.Property EQUIPMENT_MAKE -> EQUIPMENT_MAKE
    org.apache.tika.metadata.Property EQUIPMENT_MODEL -> EQUIPMENT_MODEL
    org.apache.tika.metadata.Property SOFTWARE -> SOFTWARE
    org.apache.tika.metadata.Property ORIENTATION -> ORIENTATION
    org.apache.tika.metadata.Property RESOLUTION_HORIZONTAL -> RESOLUTION_HORIZONTAL
    org.apache.tika.metadata.Property RESOLUTION_VERTICAL -> RESOLUTION_VERTICAL
    org.apache.tika.metadata.Property RESOLUTION_UNIT -> RESOLUTION_UNIT
    org.apache.tika.metadata.Property ORIGINAL_DATE -> ORIGINAL_DATE
    org.apache.tika.metadata.Property EXIF_PAGE_COUNT -> EXIF_PAGE_COUNT
    void <clinit>() -> <clinit>
org.apache.tika.metadata.TikaCoreProperties -> org.apache.tika.metadata.TikaCoreProperties:
    java.lang.String TIKA_META_PREFIX -> TIKA_META_PREFIX
    java.lang.String TIKA_META_EXCEPTION_PREFIX -> TIKA_META_EXCEPTION_PREFIX
    org.apache.tika.metadata.Property TIKA_META_EXCEPTION_WARNING -> TIKA_META_EXCEPTION_WARNING
    org.apache.tika.metadata.Property TIKA_META_EXCEPTION_EMBEDDED_STREAM -> TIKA_META_EXCEPTION_EMBEDDED_STREAM
    java.lang.String EMBEDDED_RESOURCE_TYPE_KEY -> EMBEDDED_RESOURCE_TYPE_KEY
    org.apache.tika.metadata.Property ORIGINAL_RESOURCE_NAME -> ORIGINAL_RESOURCE_NAME
    org.apache.tika.metadata.Property CONTENT_TYPE_HINT -> CONTENT_TYPE_HINT
    org.apache.tika.metadata.Property CONTENT_TYPE_OVERRIDE -> CONTENT_TYPE_OVERRIDE
    org.apache.tika.metadata.Property FORMAT -> FORMAT
    org.apache.tika.metadata.Property IDENTIFIER -> IDENTIFIER
    org.apache.tika.metadata.Property CONTRIBUTOR -> CONTRIBUTOR
    org.apache.tika.metadata.Property COVERAGE -> COVERAGE
    org.apache.tika.metadata.Property CREATOR -> CREATOR
    org.apache.tika.metadata.Property MODIFIER -> MODIFIER
    org.apache.tika.metadata.Property CREATOR_TOOL -> CREATOR_TOOL
    org.apache.tika.metadata.Property LANGUAGE -> LANGUAGE
    org.apache.tika.metadata.Property PUBLISHER -> PUBLISHER
    org.apache.tika.metadata.Property RELATION -> RELATION
    org.apache.tika.metadata.Property RIGHTS -> RIGHTS
    org.apache.tika.metadata.Property SOURCE -> SOURCE
    org.apache.tika.metadata.Property TYPE -> TYPE
    org.apache.tika.metadata.Property TITLE -> TITLE
    org.apache.tika.metadata.Property DESCRIPTION -> DESCRIPTION
    org.apache.tika.metadata.Property KEYWORDS -> KEYWORDS
    org.apache.tika.metadata.Property CREATED -> CREATED
    org.apache.tika.metadata.Property MODIFIED -> MODIFIED
    org.apache.tika.metadata.Property PRINT_DATE -> PRINT_DATE
    org.apache.tika.metadata.Property METADATA_DATE -> METADATA_DATE
    org.apache.tika.metadata.Property LATITUDE -> LATITUDE
    org.apache.tika.metadata.Property LONGITUDE -> LONGITUDE
    org.apache.tika.metadata.Property ALTITUDE -> ALTITUDE
    org.apache.tika.metadata.Property RATING -> RATING
    org.apache.tika.metadata.Property COMMENTS -> COMMENTS
    org.apache.tika.metadata.Property TRANSITION_KEYWORDS_TO_DC_SUBJECT -> TRANSITION_KEYWORDS_TO_DC_SUBJECT
    org.apache.tika.metadata.Property TRANSITION_SUBJECT_TO_DC_DESCRIPTION -> TRANSITION_SUBJECT_TO_DC_DESCRIPTION
    org.apache.tika.metadata.Property TRANSITION_SUBJECT_TO_DC_TITLE -> TRANSITION_SUBJECT_TO_DC_TITLE
    org.apache.tika.metadata.Property TRANSITION_SUBJECT_TO_OO_SUBJECT -> TRANSITION_SUBJECT_TO_OO_SUBJECT
    org.apache.tika.metadata.Property EMBEDDED_RESOURCE_TYPE -> EMBEDDED_RESOURCE_TYPE
    void <clinit>() -> <clinit>
org.apache.tika.metadata.TikaCoreProperties$EmbeddedResourceType -> org.apache.tika.metadata.TikaCoreProperties$EmbeddedResourceType:
    org.apache.tika.metadata.TikaCoreProperties$EmbeddedResourceType INLINE -> INLINE
    org.apache.tika.metadata.TikaCoreProperties$EmbeddedResourceType ATTACHMENT -> ATTACHMENT
    org.apache.tika.metadata.TikaCoreProperties$EmbeddedResourceType MACRO -> MACRO
    org.apache.tika.metadata.TikaCoreProperties$EmbeddedResourceType[] $VALUES -> $VALUES
    org.apache.tika.metadata.TikaCoreProperties$EmbeddedResourceType[] values() -> values
    org.apache.tika.metadata.TikaCoreProperties$EmbeddedResourceType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
org.apache.tika.metadata.TikaMetadataKeys -> org.apache.tika.metadata.TikaMetadataKeys:
    java.lang.String RESOURCE_NAME_KEY -> RESOURCE_NAME_KEY
    java.lang.String PROTECTED -> PROTECTED
    java.lang.String EMBEDDED_RELATIONSHIP_ID -> EMBEDDED_RELATIONSHIP_ID
    java.lang.String EMBEDDED_STORAGE_CLASS_ID -> EMBEDDED_STORAGE_CLASS_ID
    java.lang.String EMBEDDED_RESOURCE_TYPE -> EMBEDDED_RESOURCE_TYPE
org.apache.tika.metadata.TikaMimeKeys -> org.apache.tika.metadata.TikaMimeKeys:
    java.lang.String TIKA_MIME_FILE -> TIKA_MIME_FILE
    java.lang.String MIME_TYPE_MAGIC -> MIME_TYPE_MAGIC
org.apache.tika.metadata.WordPerfect -> org.apache.tika.metadata.WordPerfect:
    java.lang.String WORDPERFECT_METADATA_NAME_PREFIX -> WORDPERFECT_METADATA_NAME_PREFIX
    org.apache.tika.metadata.Property FILE_SIZE -> FILE_SIZE
    org.apache.tika.metadata.Property FILE_ID -> FILE_ID
    org.apache.tika.metadata.Property PRODUCT_TYPE -> PRODUCT_TYPE
    org.apache.tika.metadata.Property FILE_TYPE -> FILE_TYPE
    org.apache.tika.metadata.Property MAJOR_VERSION -> MAJOR_VERSION
    org.apache.tika.metadata.Property MINOR_VERSION -> MINOR_VERSION
    org.apache.tika.metadata.Property ENCRYPTED -> ENCRYPTED
    void <clinit>() -> <clinit>
org.apache.tika.metadata.XMP -> org.apache.tika.metadata.XMP:
    java.lang.String NAMESPACE_URI -> NAMESPACE_URI
    java.lang.String PREFIX -> PREFIX
    java.lang.String PREFIX_ -> PREFIX_
    org.apache.tika.metadata.Property CREATE_DATE -> CREATE_DATE
    org.apache.tika.metadata.Property CREATOR_TOOL -> CREATOR_TOOL
    org.apache.tika.metadata.Property IDENTIFIER -> IDENTIFIER
    org.apache.tika.metadata.Property LABEL -> LABEL
    org.apache.tika.metadata.Property METADATA_DATE -> METADATA_DATE
    org.apache.tika.metadata.Property MODIFY_DATE -> MODIFY_DATE
    org.apache.tika.metadata.Property RATING -> RATING
    void <clinit>() -> <clinit>
org.apache.tika.metadata.XMPDM -> org.apache.tika.metadata.XMPDM:
    org.apache.tika.metadata.Property ABS_PEAK_AUDIO_FILE_PATH -> ABS_PEAK_AUDIO_FILE_PATH
    org.apache.tika.metadata.Property ALBUM -> ALBUM
    org.apache.tika.metadata.Property ALT_TAPE_NAME -> ALT_TAPE_NAME
    org.apache.tika.metadata.Property ARTIST -> ARTIST
    org.apache.tika.metadata.Property ALBUM_ARTIST -> ALBUM_ARTIST
    org.apache.tika.metadata.Property AUDIO_MOD_DATE -> AUDIO_MOD_DATE
    org.apache.tika.metadata.Property AUDIO_SAMPLE_RATE -> AUDIO_SAMPLE_RATE
    org.apache.tika.metadata.Property AUDIO_SAMPLE_TYPE -> AUDIO_SAMPLE_TYPE
    org.apache.tika.metadata.Property AUDIO_CHANNEL_TYPE -> AUDIO_CHANNEL_TYPE
    org.apache.tika.metadata.Property AUDIO_COMPRESSOR -> AUDIO_COMPRESSOR
    org.apache.tika.metadata.Property COMPILATION -> COMPILATION
    org.apache.tika.metadata.Property COMPOSER -> COMPOSER
    org.apache.tika.metadata.Property COPYRIGHT -> COPYRIGHT
    org.apache.tika.metadata.Property DISC_NUMBER -> DISC_NUMBER
    org.apache.tika.metadata.Property DURATION -> DURATION
    org.apache.tika.metadata.Property ENGINEER -> ENGINEER
    org.apache.tika.metadata.Property FILE_DATA_RATE -> FILE_DATA_RATE
    org.apache.tika.metadata.Property GENRE -> GENRE
    org.apache.tika.metadata.Property INSTRUMENT -> INSTRUMENT
    org.apache.tika.metadata.Property KEY -> KEY
    org.apache.tika.metadata.Property LOG_COMMENT -> LOG_COMMENT
    org.apache.tika.metadata.Property LOOP -> LOOP
    org.apache.tika.metadata.Property NUMBER_OF_BEATS -> NUMBER_OF_BEATS
    org.apache.tika.metadata.Property METADATA_MOD_DATE -> METADATA_MOD_DATE
    org.apache.tika.metadata.Property PULL_DOWN -> PULL_DOWN
    org.apache.tika.metadata.Property RELATIVE_PEAK_AUDIO_FILE_PATH -> RELATIVE_PEAK_AUDIO_FILE_PATH
    org.apache.tika.metadata.Property RELEASE_DATE -> RELEASE_DATE
    org.apache.tika.metadata.Property SCALE_TYPE -> SCALE_TYPE
    org.apache.tika.metadata.Property SCENE -> SCENE
    org.apache.tika.metadata.Property SHOT_DATE -> SHOT_DATE
    org.apache.tika.metadata.Property SHOT_LOCATION -> SHOT_LOCATION
    org.apache.tika.metadata.Property SHOT_NAME -> SHOT_NAME
    org.apache.tika.metadata.Property SPEAKER_PLACEMENT -> SPEAKER_PLACEMENT
    org.apache.tika.metadata.Property STRETCH_MODE -> STRETCH_MODE
    org.apache.tika.metadata.Property TAPE_NAME -> TAPE_NAME
    org.apache.tika.metadata.Property TEMPO -> TEMPO
    org.apache.tika.metadata.Property TIME_SIGNATURE -> TIME_SIGNATURE
    org.apache.tika.metadata.Property TRACK_NUMBER -> TRACK_NUMBER
    org.apache.tika.metadata.Property VIDEO_ALPHA_MODE -> VIDEO_ALPHA_MODE
    org.apache.tika.metadata.Property VIDEO_ALPHA_UNITY_IS_TRANSPARENT -> VIDEO_ALPHA_UNITY_IS_TRANSPARENT
    org.apache.tika.metadata.Property VIDEO_COLOR_SPACE -> VIDEO_COLOR_SPACE
    org.apache.tika.metadata.Property VIDEO_COMPRESSOR -> VIDEO_COMPRESSOR
    org.apache.tika.metadata.Property VIDEO_FIELD_ORDER -> VIDEO_FIELD_ORDER
    org.apache.tika.metadata.Property VIDEO_FRAME_RATE -> VIDEO_FRAME_RATE
    org.apache.tika.metadata.Property VIDEO_MOD_DATE -> VIDEO_MOD_DATE
    org.apache.tika.metadata.Property VIDEO_PIXEL_DEPTH -> VIDEO_PIXEL_DEPTH
    org.apache.tika.metadata.Property VIDEO_PIXEL_ASPECT_RATIO -> VIDEO_PIXEL_ASPECT_RATIO
    void <clinit>() -> <clinit>
org.apache.tika.metadata.XMPDM$ChannelTypePropertyConverter -> org.apache.tika.metadata.XMPDM$ChannelTypePropertyConverter:
    org.apache.tika.metadata.Property property -> property
    void <init>() -> <init>
    java.lang.String convert(java.lang.Object) -> convert
    void convertAndSet(org.apache.tika.metadata.Metadata,java.lang.Object) -> convertAndSet
    void <clinit>() -> <clinit>
org.apache.tika.metadata.XMPIdq -> org.apache.tika.metadata.XMPIdq:
    java.lang.String NAMESPACE_URI -> NAMESPACE_URI
    java.lang.String PREFIX -> PREFIX
    java.lang.String PREFIX_ -> PREFIX_
    org.apache.tika.metadata.Property SCHEME -> SCHEME
    void <clinit>() -> <clinit>
org.apache.tika.metadata.XMPMM -> org.apache.tika.metadata.XMPMM:
    java.lang.String NAMESPACE_URI -> NAMESPACE_URI
    java.lang.String PREFIX -> PREFIX
    java.lang.String PREFIX_ -> PREFIX_
    org.apache.tika.metadata.Property DOCUMENTID -> DOCUMENTID
    org.apache.tika.metadata.Property INSTANCEID -> INSTANCEID
    org.apache.tika.metadata.Property ORIGINAL_DOCUMENTID -> ORIGINAL_DOCUMENTID
    org.apache.tika.metadata.Property RENDITION_CLASS -> RENDITION_CLASS
    org.apache.tika.metadata.Property RENDITION_PARAMS -> RENDITION_PARAMS
    org.apache.tika.metadata.Property HISTORY_EVENT_INSTANCEID -> HISTORY_EVENT_INSTANCEID
    org.apache.tika.metadata.Property HISTORY_ACTION -> HISTORY_ACTION
    org.apache.tika.metadata.Property HISTORY_WHEN -> HISTORY_WHEN
    org.apache.tika.metadata.Property HISTORY_SOFTWARE_AGENT -> HISTORY_SOFTWARE_AGENT
    org.apache.tika.metadata.Property DERIVED_FROM_DOCUMENTID -> DERIVED_FROM_DOCUMENTID
    org.apache.tika.metadata.Property DERIVED_FROM_INSTANCEID -> DERIVED_FROM_INSTANCEID
    void <clinit>() -> <clinit>
org.apache.tika.metadata.XMPRights -> org.apache.tika.metadata.XMPRights:
    java.lang.String NAMESPACE_URI_XMP_RIGHTS -> NAMESPACE_URI_XMP_RIGHTS
    java.lang.String PREFIX_XMP_RIGHTS -> PREFIX_XMP_RIGHTS
    java.lang.String PREFIX_ -> PREFIX_
    org.apache.tika.metadata.Property CERTIFICATE -> CERTIFICATE
    org.apache.tika.metadata.Property MARKED -> MARKED
    org.apache.tika.metadata.Property OWNER -> OWNER
    org.apache.tika.metadata.Property USAGE_TERMS -> USAGE_TERMS
    org.apache.tika.metadata.Property WEB_STATEMENT -> WEB_STATEMENT
    void <clinit>() -> <clinit>
org.apache.tika.metadata.package-info -> org.apache.tika.metadata.package-info:
org.apache.tika.mime.AndClause -> org.apache.tika.mime.AndClause:
    org.apache.tika.mime.Clause[] clauses -> clauses
    void <init>(org.apache.tika.mime.Clause[]) -> <init>
    boolean eval(byte[]) -> eval
    int size() -> size
    java.lang.String toString() -> toString
org.apache.tika.mime.Clause -> org.apache.tika.mime.Clause:
    boolean eval(byte[]) -> eval
    int size() -> size
org.apache.tika.mime.HexCoDec -> org.apache.tika.mime.HexCoDec:
    char[] HEX_CHARS -> HEX_CHARS
    void <init>() -> <init>
    byte[] decode(java.lang.String) -> decode
    byte[] decode(char[]) -> decode
    byte[] decode(char[],int,int) -> decode
    char[] encode(byte[]) -> encode
    char[] encode(byte[],int,int) -> encode
    int hexCharToNibble(char) -> hexCharToNibble
    void <clinit>() -> <clinit>
org.apache.tika.mime.Magic -> org.apache.tika.mime.Magic:
    org.apache.tika.mime.MimeType type -> type
    int priority -> priority
    org.apache.tika.mime.Clause clause -> clause
    java.lang.String string -> string
    void <init>(org.apache.tika.mime.MimeType,int,org.apache.tika.mime.Clause) -> <init>
    org.apache.tika.mime.MimeType getType() -> getType
    int getPriority() -> getPriority
    boolean eval(byte[]) -> eval
    int size() -> size
    java.lang.String toString() -> toString
    int compareTo(org.apache.tika.mime.Magic) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
org.apache.tika.mime.MagicMatch -> org.apache.tika.mime.MagicMatch:
    org.apache.tika.mime.MediaType mediaType -> mediaType
    java.lang.String type -> type
    java.lang.String offset -> offset
    java.lang.String value -> value
    java.lang.String mask -> mask
    org.apache.tika.detect.MagicDetector detector -> detector
    void <init>(org.apache.tika.mime.MediaType,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    org.apache.tika.detect.MagicDetector getDetector() -> getDetector
    boolean eval(byte[]) -> eval
    int size() -> size
    java.lang.String toString() -> toString
org.apache.tika.mime.MediaType -> org.apache.tika.mime.MediaType:
    long serialVersionUID -> serialVersionUID
    java.util.regex.Pattern SPECIAL -> SPECIAL
    java.util.regex.Pattern SPECIAL_OR_WHITESPACE -> SPECIAL_OR_WHITESPACE
    java.lang.String VALID_CHARS -> VALID_CHARS
    java.util.regex.Pattern TYPE_PATTERN -> TYPE_PATTERN
    java.util.regex.Pattern CHARSET_FIRST_PATTERN -> CHARSET_FIRST_PATTERN
    java.util.Map SIMPLE_TYPES -> SIMPLE_TYPES
    org.apache.tika.mime.MediaType OCTET_STREAM -> OCTET_STREAM
    org.apache.tika.mime.MediaType EMPTY -> EMPTY
    org.apache.tika.mime.MediaType TEXT_PLAIN -> TEXT_PLAIN
    org.apache.tika.mime.MediaType TEXT_HTML -> TEXT_HTML
    org.apache.tika.mime.MediaType APPLICATION_XML -> APPLICATION_XML
    org.apache.tika.mime.MediaType APPLICATION_ZIP -> APPLICATION_ZIP
    java.lang.String string -> string
    int slash -> slash
    int semicolon -> semicolon
    java.util.Map parameters -> parameters
    boolean $assertionsDisabled -> $assertionsDisabled
    org.apache.tika.mime.MediaType application(java.lang.String) -> application
    org.apache.tika.mime.MediaType audio(java.lang.String) -> audio
    org.apache.tika.mime.MediaType image(java.lang.String) -> image
    org.apache.tika.mime.MediaType text(java.lang.String) -> text
    org.apache.tika.mime.MediaType video(java.lang.String) -> video
    java.util.Set set(org.apache.tika.mime.MediaType[]) -> set
    java.util.Set set(java.lang.String[]) -> set
    org.apache.tika.mime.MediaType parse(java.lang.String) -> parse
    boolean isSimpleName(java.lang.String) -> isSimpleName
    java.util.Map parseParameters(java.lang.String) -> parseParameters
    java.lang.String unquote(java.lang.String) -> unquote
    void <init>(java.lang.String,java.lang.String,java.util.Map) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,int) -> <init>
    java.util.Map union(java.util.Map,java.util.Map) -> union
    void <init>(org.apache.tika.mime.MediaType,java.util.Map) -> <init>
    void <init>(org.apache.tika.mime.MediaType,java.lang.String,java.lang.String) -> <init>
    void <init>(org.apache.tika.mime.MediaType,java.nio.charset.Charset) -> <init>
    org.apache.tika.mime.MediaType getBaseType() -> getBaseType
    java.lang.String getType() -> getType
    java.lang.String getSubtype() -> getSubtype
    boolean hasParameters() -> hasParameters
    java.util.Map getParameters() -> getParameters
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.apache.tika.mime.MediaType) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
    void <clinit>() -> <clinit>
org.apache.tika.mime.MediaTypeRegistry -> org.apache.tika.mime.MediaTypeRegistry:
    long serialVersionUID -> serialVersionUID
    java.util.Map registry -> registry
    java.util.Map inheritance -> inheritance
    void <init>() -> <init>
    org.apache.tika.mime.MediaTypeRegistry getDefaultRegistry() -> getDefaultRegistry
    java.util.SortedSet getTypes() -> getTypes
    java.util.SortedSet getAliases(org.apache.tika.mime.MediaType) -> getAliases
    java.util.SortedSet getChildTypes(org.apache.tika.mime.MediaType) -> getChildTypes
    void addType(org.apache.tika.mime.MediaType) -> addType
    void addAlias(org.apache.tika.mime.MediaType,org.apache.tika.mime.MediaType) -> addAlias
    void addSuperType(org.apache.tika.mime.MediaType,org.apache.tika.mime.MediaType) -> addSuperType
    org.apache.tika.mime.MediaType normalize(org.apache.tika.mime.MediaType) -> normalize
    boolean isSpecializationOf(org.apache.tika.mime.MediaType,org.apache.tika.mime.MediaType) -> isSpecializationOf
    boolean isInstanceOf(org.apache.tika.mime.MediaType,org.apache.tika.mime.MediaType) -> isInstanceOf
    boolean isInstanceOf(java.lang.String,org.apache.tika.mime.MediaType) -> isInstanceOf
    org.apache.tika.mime.MediaType getSupertype(org.apache.tika.mime.MediaType) -> getSupertype
org.apache.tika.mime.MimeType -> org.apache.tika.mime.MimeType:
    long serialVersionUID -> serialVersionUID
    org.apache.tika.mime.MediaType type -> type
    java.lang.String acronym -> acronym
    java.lang.String uti -> uti
    java.util.List links -> links
    java.lang.String description -> description
    java.util.List magics -> magics
    java.util.List rootXML -> rootXML
    int minLength -> minLength
    java.util.List extensions -> extensions
    boolean isInterpreted -> isInterpreted
    boolean isValid(java.lang.String) -> isValid
    void <init>(org.apache.tika.mime.MediaType) -> <init>
    org.apache.tika.mime.MediaType getType() -> getType
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getAcronym() -> getAcronym
    void setAcronym(java.lang.String) -> setAcronym
    java.lang.String getUniformTypeIdentifier() -> getUniformTypeIdentifier
    void setUniformTypeIdentifier(java.lang.String) -> setUniformTypeIdentifier
    java.util.List getLinks() -> getLinks
    void addLink(java.net.URI) -> addLink
    void addRootXML(java.lang.String,java.lang.String) -> addRootXML
    boolean matchesXML(java.lang.String,java.lang.String) -> matchesXML
    boolean hasRootXML() -> hasRootXML
    java.util.List getMagics() -> getMagics
    void addMagic(org.apache.tika.mime.Magic) -> addMagic
    int getMinLength() -> getMinLength
    boolean hasMagic() -> hasMagic
    boolean matchesMagic(byte[]) -> matchesMagic
    boolean matches(byte[]) -> matches
    boolean isInterpreted() -> isInterpreted
    void setInterpreted(boolean) -> setInterpreted
    int compareTo(org.apache.tika.mime.MimeType) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String getExtension() -> getExtension
    java.util.List getExtensions() -> getExtensions
    void addExtension(java.lang.String) -> addExtension
    int compareTo(java.lang.Object) -> compareTo
org.apache.tika.mime.MimeType$RootXML -> org.apache.tika.mime.MimeType$RootXML:
    long serialVersionUID -> serialVersionUID
    org.apache.tika.mime.MimeType type -> type
    java.lang.String namespaceURI -> namespaceURI
    java.lang.String localName -> localName
    void <init>(org.apache.tika.mime.MimeType,java.lang.String,java.lang.String) -> <init>
    boolean matches(java.lang.String,java.lang.String) -> matches
    boolean isEmpty(java.lang.String) -> isEmpty
    org.apache.tika.mime.MimeType getType() -> getType
    java.lang.String getNameSpaceURI() -> getNameSpaceURI
    java.lang.String getLocalName() -> getLocalName
    java.lang.String toString() -> toString
org.apache.tika.mime.MimeTypeException -> org.apache.tika.mime.MimeTypeException:
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.tika.mime.MimeTypes -> org.apache.tika.mime.MimeTypes:
    long serialVersionUID -> serialVersionUID
    java.lang.String OCTET_STREAM -> OCTET_STREAM
    java.lang.String PLAIN_TEXT -> PLAIN_TEXT
    java.lang.String XML -> XML
    org.apache.tika.mime.MimeType rootMimeType -> rootMimeType
    java.util.List rootMimeTypeL -> rootMimeTypeL
    org.apache.tika.mime.MimeType textMimeType -> textMimeType
    org.apache.tika.mime.MimeType htmlMimeType -> htmlMimeType
    org.apache.tika.mime.MimeType xmlMimeType -> xmlMimeType
    org.apache.tika.mime.MediaTypeRegistry registry -> registry
    java.util.Map types -> types
    org.apache.tika.mime.Patterns patterns -> patterns
    java.util.List magics -> magics
    java.util.List xmls -> xmls
    org.apache.tika.mime.MimeTypes DEFAULT_TYPES -> DEFAULT_TYPES
    java.util.Map CLASSLOADER_SPECIFIC_DEFAULT_TYPES -> CLASSLOADER_SPECIFIC_DEFAULT_TYPES
    void <init>() -> <init>
    org.apache.tika.mime.MimeType getMimeType(java.lang.String) -> getMimeType
    org.apache.tika.mime.MimeType getMimeType(java.io.File) -> getMimeType
    java.util.List getMimeType(byte[]) -> getMimeType
    byte[] readMagicHeader(java.io.InputStream) -> readMagicHeader
    org.apache.tika.mime.MimeType forName(java.lang.String) -> forName
    org.apache.tika.mime.MimeType getRegisteredMimeType(java.lang.String) -> getRegisteredMimeType
    void setSuperType(org.apache.tika.mime.MimeType,org.apache.tika.mime.MediaType) -> setSuperType
    void addAlias(org.apache.tika.mime.MimeType,org.apache.tika.mime.MediaType) -> addAlias
    void addPattern(org.apache.tika.mime.MimeType,java.lang.String) -> addPattern
    void addPattern(org.apache.tika.mime.MimeType,java.lang.String,boolean) -> addPattern
    org.apache.tika.mime.MediaTypeRegistry getMediaTypeRegistry() -> getMediaTypeRegistry
    int getMinLength() -> getMinLength
    void add(org.apache.tika.mime.MimeType) -> add
    void init() -> init
    org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
    java.util.List applyHint(java.util.List,org.apache.tika.mime.MimeType) -> applyHint
    org.apache.tika.mime.MimeTypes getDefaultMimeTypes() -> getDefaultMimeTypes
    org.apache.tika.mime.MimeTypes getDefaultMimeTypes(java.lang.ClassLoader) -> getDefaultMimeTypes
    void <clinit>() -> <clinit>
org.apache.tika.mime.MimeTypesFactory -> org.apache.tika.mime.MimeTypesFactory:
    java.lang.String CUSTOM_MIMES_SYS_PROP -> CUSTOM_MIMES_SYS_PROP
    void <init>() -> <init>
    org.apache.tika.mime.MimeTypes create() -> create
    org.apache.tika.mime.MimeTypes create(org.w3c.dom.Document) -> create
    org.apache.tika.mime.MimeTypes create(java.io.InputStream[]) -> create
    org.apache.tika.mime.MimeTypes create(java.io.InputStream) -> create
    org.apache.tika.mime.MimeTypes create(java.net.URL[]) -> create
    org.apache.tika.mime.MimeTypes create(java.net.URL) -> create
    org.apache.tika.mime.MimeTypes create(java.lang.String) -> create
    org.apache.tika.mime.MimeTypes create(java.lang.String,java.lang.String) -> create
    org.apache.tika.mime.MimeTypes create(java.lang.String,java.lang.String,java.lang.ClassLoader) -> create
org.apache.tika.mime.MimeTypesReader -> org.apache.tika.mime.MimeTypesReader:
    int POOL_SIZE -> POOL_SIZE
    java.util.concurrent.locks.ReentrantReadWriteLock READ_WRITE_LOCK -> READ_WRITE_LOCK
    java.util.concurrent.ArrayBlockingQueue SAX_PARSERS -> SAX_PARSERS
    org.apache.tika.mime.MimeTypes types -> types
    org.apache.tika.mime.MimeType type -> type
    int priority -> priority
    java.lang.StringBuilder characters -> characters
    org.apache.tika.mime.MimeTypesReader$ClauseRecord current -> current
    void <init>(org.apache.tika.mime.MimeTypes) -> <init>
    void read(java.io.InputStream) -> read
    void read(org.w3c.dom.Document) -> read
    org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String) -> resolveEntity
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void handleMimeError(java.lang.String,org.apache.tika.mime.MimeTypeException,java.lang.String,org.xml.sax.Attributes) -> handleMimeError
    void handleGlobError(org.apache.tika.mime.MimeType,java.lang.String,org.apache.tika.mime.MimeTypeException,java.lang.String,org.xml.sax.Attributes) -> handleGlobError
    javax.xml.parsers.SAXParser acquireSAXParser() -> acquireSAXParser
    void releaseParser(javax.xml.parsers.SAXParser) -> releaseParser
    void setPoolSize(int) -> setPoolSize
    javax.xml.parsers.SAXParser newSAXParser() -> newSAXParser
    org.apache.tika.mime.MimeTypesReader$ClauseRecord access$000(org.apache.tika.mime.MimeTypesReader) -> access$000
    org.apache.tika.mime.MimeTypesReader$ClauseRecord access$002(org.apache.tika.mime.MimeTypesReader,org.apache.tika.mime.MimeTypesReader$ClauseRecord) -> access$002
    void <clinit>() -> <clinit>
org.apache.tika.mime.MimeTypesReader$ClauseRecord -> org.apache.tika.mime.MimeTypesReader$ClauseRecord:
    org.apache.tika.mime.MimeTypesReader$ClauseRecord parent -> parent
    org.apache.tika.mime.Clause clause -> clause
    java.util.List subclauses -> subclauses
    org.apache.tika.mime.MimeTypesReader this$0 -> this$0
    void <init>(org.apache.tika.mime.MimeTypesReader,org.apache.tika.mime.Clause) -> <init>
    void stop() -> stop
    java.util.List getClauses() -> getClauses
org.apache.tika.mime.MimeTypesReaderMetKeys -> org.apache.tika.mime.MimeTypesReaderMetKeys:
    java.lang.String MIME_INFO_TAG -> MIME_INFO_TAG
    java.lang.String MIME_TYPE_TAG -> MIME_TYPE_TAG
    java.lang.String MIME_TYPE_TYPE_ATTR -> MIME_TYPE_TYPE_ATTR
    java.lang.String INTERPRETED_ATTR -> INTERPRETED_ATTR
    java.lang.String ACRONYM_TAG -> ACRONYM_TAG
    java.lang.String COMMENT_TAG -> COMMENT_TAG
    java.lang.String GLOB_TAG -> GLOB_TAG
    java.lang.String ISREGEX_ATTR -> ISREGEX_ATTR
    java.lang.String PATTERN_ATTR -> PATTERN_ATTR
    java.lang.String MAGIC_TAG -> MAGIC_TAG
    java.lang.String ALIAS_TAG -> ALIAS_TAG
    java.lang.String ALIAS_TYPE_ATTR -> ALIAS_TYPE_ATTR
    java.lang.String ROOT_XML_TAG -> ROOT_XML_TAG
    java.lang.String SUB_CLASS_OF_TAG -> SUB_CLASS_OF_TAG
    java.lang.String SUB_CLASS_TYPE_ATTR -> SUB_CLASS_TYPE_ATTR
    java.lang.String MAGIC_PRIORITY_ATTR -> MAGIC_PRIORITY_ATTR
    java.lang.String MATCH_TAG -> MATCH_TAG
    java.lang.String MATCH_OFFSET_ATTR -> MATCH_OFFSET_ATTR
    java.lang.String MATCH_TYPE_ATTR -> MATCH_TYPE_ATTR
    java.lang.String MATCH_VALUE_ATTR -> MATCH_VALUE_ATTR
    java.lang.String MATCH_MASK_ATTR -> MATCH_MASK_ATTR
    java.lang.String NS_URI_ATTR -> NS_URI_ATTR
    java.lang.String LOCAL_NAME_ATTR -> LOCAL_NAME_ATTR
    java.lang.String TIKA_LINK_TAG -> TIKA_LINK_TAG
    java.lang.String TIKA_UTI_TAG -> TIKA_UTI_TAG
org.apache.tika.mime.OrClause -> org.apache.tika.mime.OrClause:
    java.util.List clauses -> clauses
    void <init>(java.util.List) -> <init>
    boolean eval(byte[]) -> eval
    int size() -> size
    java.lang.String toString() -> toString
org.apache.tika.mime.Patterns -> org.apache.tika.mime.Patterns:
    long serialVersionUID -> serialVersionUID
    org.apache.tika.mime.MediaTypeRegistry registry -> registry
    java.util.Map names -> names
    java.util.Map extensions -> extensions
    int minExtensionLength -> minExtensionLength
    int maxExtensionLength -> maxExtensionLength
    java.util.SortedMap globs -> globs
    void <init>(org.apache.tika.mime.MediaTypeRegistry) -> <init>
    void add(java.lang.String,org.apache.tika.mime.MimeType) -> add
    void add(java.lang.String,boolean,org.apache.tika.mime.MimeType) -> add
    void addName(java.lang.String,org.apache.tika.mime.MimeType) -> addName
    void addExtension(java.lang.String,org.apache.tika.mime.MimeType) -> addExtension
    void addGlob(java.lang.String,org.apache.tika.mime.MimeType) -> addGlob
    org.apache.tika.mime.MimeType matches(java.lang.String) -> matches
    java.lang.String compile(java.lang.String) -> compile
org.apache.tika.mime.Patterns$1 -> org.apache.tika.mime.Patterns$1:
org.apache.tika.mime.Patterns$LengthComparator -> org.apache.tika.mime.Patterns$LengthComparator:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
    void <init>(org.apache.tika.mime.Patterns$1) -> <init>
org.apache.tika.mime.ProbabilisticMimeDetectionSelector -> org.apache.tika.mime.ProbabilisticMimeDetectionSelector:
    long serialVersionUID -> serialVersionUID
    org.apache.tika.mime.MimeTypes mimeTypes -> mimeTypes
    org.apache.tika.mime.MediaType rootMediaType -> rootMediaType
    float DEFAULT_MAGIC_TRUST -> DEFAULT_MAGIC_TRUST
    float DEFAULT_META_TRUST -> DEFAULT_META_TRUST
    float DEFAULT_EXTENSION_TRUST -> DEFAULT_EXTENSION_TRUST
    float priorMagicFileType -> priorMagicFileType
    float priorExtensionFileType -> priorExtensionFileType
    float priorMetaFileType -> priorMetaFileType
    float magic_trust -> magic_trust
    float extension_trust -> extension_trust
    float meta_trust -> meta_trust
    float magic_neg -> magic_neg
    float extension_neg -> extension_neg
    float meta_neg -> meta_neg
    float threshold -> threshold
    float changeRate -> changeRate
    void <init>() -> <init>
    void <init>(org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder) -> <init>
    void <init>(org.apache.tika.mime.MimeTypes) -> <init>
    void <init>(org.apache.tika.mime.MimeTypes,org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder) -> <init>
    void initializeDefaultProbabilityParameters() -> initializeDefaultProbabilityParameters
    org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata) -> detect
    org.apache.tika.mime.MediaType applyProbilities(java.util.List,org.apache.tika.mime.MimeType,org.apache.tika.mime.MimeType) -> applyProbilities
    org.apache.tika.mime.MediaTypeRegistry getMediaTypeRegistry() -> getMediaTypeRegistry
org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder -> org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder:
    float priorMagicFileType -> priorMagicFileType
    float priorExtensionFileType -> priorExtensionFileType
    float priorMetaFileType -> priorMetaFileType
    float magic_trust -> magic_trust
    float extension_trust -> extension_trust
    float meta_trust -> meta_trust
    float magic_neg -> magic_neg
    float extension_neg -> extension_neg
    float meta_neg -> meta_neg
    float threshold -> threshold
    void <init>() -> <init>
    org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder priorMagicFileType(float) -> priorMagicFileType
    org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder priorExtensionFileType(float) -> priorExtensionFileType
    org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder priorMetaFileType(float) -> priorMetaFileType
    org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder magic_trust(float) -> magic_trust
    org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder extension_trust(float) -> extension_trust
    org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder meta_trust(float) -> meta_trust
    org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder magic_neg(float) -> magic_neg
    org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder extension_neg(float) -> extension_neg
    org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder meta_neg(float) -> meta_neg
    org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder threshold(float) -> threshold
    org.apache.tika.mime.ProbabilisticMimeDetectionSelector build2() -> build2
    float access$000(org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder) -> access$000
    float access$100(org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder) -> access$100
    float access$200(org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder) -> access$200
    float access$300(org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder) -> access$300
    float access$400(org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder) -> access$400
    float access$500(org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder) -> access$500
    float access$600(org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder) -> access$600
    float access$700(org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder) -> access$700
    float access$800(org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder) -> access$800
    float access$900(org.apache.tika.mime.ProbabilisticMimeDetectionSelector$Builder) -> access$900
org.apache.tika.mime.package-info -> org.apache.tika.mime.package-info:
org.apache.tika.package-info -> org.apache.tika.package-info:
org.apache.tika.sax.AbstractRecursiveParserWrapperHandler -> org.apache.tika.sax.AbstractRecursiveParserWrapperHandler:
    org.apache.tika.metadata.Property TIKA_CONTENT -> TIKA_CONTENT
    org.apache.tika.metadata.Property TIKA_CONTENT_HANDLER -> TIKA_CONTENT_HANDLER
    org.apache.tika.metadata.Property PARSE_TIME_MILLIS -> PARSE_TIME_MILLIS
    org.apache.tika.metadata.Property WRITE_LIMIT_REACHED -> WRITE_LIMIT_REACHED
    org.apache.tika.metadata.Property EMBEDDED_RESOURCE_LIMIT_REACHED -> EMBEDDED_RESOURCE_LIMIT_REACHED
    org.apache.tika.metadata.Property EMBEDDED_EXCEPTION -> EMBEDDED_EXCEPTION
    org.apache.tika.metadata.Property EMBEDDED_RESOURCE_PATH -> EMBEDDED_RESOURCE_PATH
    org.apache.tika.sax.ContentHandlerFactory contentHandlerFactory -> contentHandlerFactory
    int MAX_DEPTH -> MAX_DEPTH
    int maxEmbeddedResources -> maxEmbeddedResources
    int embeddedResources -> embeddedResources
    int embeddedDepth -> embeddedDepth
    void <init>(org.apache.tika.sax.ContentHandlerFactory) -> <init>
    void <init>(org.apache.tika.sax.ContentHandlerFactory,int) -> <init>
    org.xml.sax.ContentHandler getNewContentHandler() -> getNewContentHandler
    org.xml.sax.ContentHandler getNewContentHandler(java.io.OutputStream,java.nio.charset.Charset) -> getNewContentHandler
    void startEmbeddedDocument(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata) -> startEmbeddedDocument
    void endEmbeddedDocument(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata) -> endEmbeddedDocument
    void endDocument(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata) -> endDocument
    boolean hasHitMaximumEmbeddedResources() -> hasHitMaximumEmbeddedResources
    org.apache.tika.sax.ContentHandlerFactory getContentHandlerFactory() -> getContentHandlerFactory
    void <clinit>() -> <clinit>
org.apache.tika.sax.BasicContentHandlerFactory -> org.apache.tika.sax.BasicContentHandlerFactory:
    org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE type -> type
    int writeLimit -> writeLimit
    org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE parseHandlerType(java.lang.String,org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE) -> parseHandlerType
    void <init>(org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE,int) -> <init>
    org.xml.sax.ContentHandler getNewContentHandler() -> getNewContentHandler
    org.xml.sax.ContentHandler getNewContentHandler(java.io.OutputStream,java.lang.String) -> getNewContentHandler
    org.xml.sax.ContentHandler getNewContentHandler(java.io.OutputStream,java.nio.charset.Charset) -> getNewContentHandler
    org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE getType() -> getType
org.apache.tika.sax.BasicContentHandlerFactory$1 -> org.apache.tika.sax.BasicContentHandlerFactory$1:
    int[] $SwitchMap$org$apache$tika$sax$BasicContentHandlerFactory$HANDLER_TYPE -> $SwitchMap$org$apache$tika$sax$BasicContentHandlerFactory$HANDLER_TYPE
    void <clinit>() -> <clinit>
org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE -> org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE:
    org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE BODY -> BODY
    org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE IGNORE -> IGNORE
    org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE TEXT -> TEXT
    org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE HTML -> HTML
    org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE XML -> XML
    org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE[] $VALUES -> $VALUES
    org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE[] values() -> values
    org.apache.tika.sax.BasicContentHandlerFactory$HANDLER_TYPE valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
org.apache.tika.sax.BodyContentHandler -> org.apache.tika.sax.BodyContentHandler:
    org.apache.tika.sax.xpath.XPathParser PARSER -> PARSER
    org.apache.tika.sax.xpath.Matcher MATCHER -> MATCHER
    void <init>(org.xml.sax.ContentHandler) -> <init>
    void <init>(java.io.Writer) -> <init>
    void <init>(java.io.OutputStream) -> <init>
    void <init>(int) -> <init>
    void <init>() -> <init>
    void <clinit>() -> <clinit>
org.apache.tika.sax.CleanPhoneText -> org.apache.tika.sax.CleanPhoneText:
    java.lang.String cleanPhoneRegex -> cleanPhoneRegex
    java.lang.String phoneRegex -> phoneRegex
    java.lang.String[][][] cleanSubstitutions -> cleanSubstitutions
    void <init>() -> <init>
    java.util.ArrayList extractPhoneNumbers(java.lang.String) -> extractPhoneNumbers
    java.lang.String clean(java.lang.String) -> clean
    void <clinit>() -> <clinit>
org.apache.tika.sax.ContentHandlerDecorator -> org.apache.tika.sax.ContentHandlerDecorator:
    org.xml.sax.ContentHandler handler -> handler
    boolean $assertionsDisabled -> $assertionsDisabled
    void <init>(org.xml.sax.ContentHandler) -> <init>
    void <init>() -> <init>
    void setContentHandler(org.xml.sax.ContentHandler) -> setContentHandler
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void skippedEntity(java.lang.String) -> skippedEntity
    java.lang.String toString() -> toString
    void handleException(org.xml.sax.SAXException) -> handleException
    void <clinit>() -> <clinit>
org.apache.tika.sax.ContentHandlerFactory -> org.apache.tika.sax.ContentHandlerFactory:
    org.xml.sax.ContentHandler getNewContentHandler() -> getNewContentHandler
    org.xml.sax.ContentHandler getNewContentHandler(java.io.OutputStream,java.lang.String) -> getNewContentHandler
    org.xml.sax.ContentHandler getNewContentHandler(java.io.OutputStream,java.nio.charset.Charset) -> getNewContentHandler
org.apache.tika.sax.DIFContentHandler -> org.apache.tika.sax.DIFContentHandler:
    char[] NEWLINE -> NEWLINE
    char[] TABSPACE -> TABSPACE
    org.xml.sax.Attributes EMPTY_ATTRIBUTES -> EMPTY_ATTRIBUTES
    java.util.Stack treeStack -> treeStack
    java.util.Stack dataStack -> dataStack
    org.xml.sax.ContentHandler delegate -> delegate
    boolean isLeaf -> isLeaf
    org.apache.tika.metadata.Metadata metadata -> metadata
    void <init>(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata) -> <init>
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
org.apache.tika.sax.ElementMappingContentHandler -> org.apache.tika.sax.ElementMappingContentHandler:
    java.util.Map mappings -> mappings
    void <init>(org.xml.sax.ContentHandler,java.util.Map) -> <init>
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    java.lang.String getQNameAsString(javax.xml.namespace.QName) -> getQNameAsString
org.apache.tika.sax.ElementMappingContentHandler$TargetElement -> org.apache.tika.sax.ElementMappingContentHandler$TargetElement:
    javax.xml.namespace.QName mappedTagName -> mappedTagName
    java.util.Map attributesMapping -> attributesMapping
    void <init>(javax.xml.namespace.QName,java.util.Map) -> <init>
    void <init>(java.lang.String,java.lang.String,java.util.Map) -> <init>
    void <init>(javax.xml.namespace.QName) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    javax.xml.namespace.QName getMappedTagName() -> getMappedTagName
    java.util.Map getAttributesMapping() -> getAttributesMapping
    org.xml.sax.Attributes mapAttributes(org.xml.sax.Attributes) -> mapAttributes
org.apache.tika.sax.EmbeddedContentHandler -> org.apache.tika.sax.EmbeddedContentHandler:
    void <init>(org.xml.sax.ContentHandler) -> <init>
    void startDocument() -> startDocument
    void endDocument() -> endDocument
org.apache.tika.sax.EndDocumentShieldingContentHandler -> org.apache.tika.sax.EndDocumentShieldingContentHandler:
    boolean endDocumentCalled -> endDocumentCalled
    void <init>(org.xml.sax.ContentHandler) -> <init>
    void endDocument() -> endDocument
    void reallyEndDocument() -> reallyEndDocument
    boolean getEndDocumentWasCalled() -> getEndDocumentWasCalled
org.apache.tika.sax.ExpandedTitleContentHandler -> org.apache.tika.sax.ExpandedTitleContentHandler:
    boolean isTitleTagOpen -> isTitleTagOpen
    java.lang.String TITLE_TAG -> TITLE_TAG
    void <init>() -> <init>
    void <init>(org.xml.sax.ContentHandler) -> <init>
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
org.apache.tika.sax.Link -> org.apache.tika.sax.Link:
    java.lang.String type -> type
    java.lang.String uri -> uri
    java.lang.String title -> title
    java.lang.String text -> text
    java.lang.String rel -> rel
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    boolean isAnchor() -> isAnchor
    boolean isImage() -> isImage
    boolean isLink() -> isLink
    boolean isIframe() -> isIframe
    boolean isScript() -> isScript
    java.lang.String getType() -> getType
    java.lang.String getUri() -> getUri
    java.lang.String getTitle() -> getTitle
    java.lang.String getText() -> getText
    java.lang.String getRel() -> getRel
    java.lang.String toString() -> toString
org.apache.tika.sax.LinkBuilder -> org.apache.tika.sax.LinkBuilder:
    java.lang.String type -> type
    java.lang.String uri -> uri
    java.lang.String title -> title
    java.lang.String rel -> rel
    java.lang.StringBuilder text -> text
    void <init>(java.lang.String) -> <init>
    java.lang.String getType() -> getType
    void setURI(java.lang.String) -> setURI
    void setTitle(java.lang.String) -> setTitle
    void setRel(java.lang.String) -> setRel
    void characters(char[],int,int) -> characters
    org.apache.tika.sax.Link getLink() -> getLink
    org.apache.tika.sax.Link getLink(boolean) -> getLink
org.apache.tika.sax.LinkContentHandler -> org.apache.tika.sax.LinkContentHandler:
    java.util.LinkedList builderStack -> builderStack
    java.util.List links -> links
    boolean collapseWhitespaceInAnchor -> collapseWhitespaceInAnchor
    void <init>() -> <init>
    void <init>(boolean) -> <init>
    java.util.List getLinks() -> getLinks
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
org.apache.tika.sax.OfflineContentHandler -> org.apache.tika.sax.OfflineContentHandler:
    void <init>(org.xml.sax.ContentHandler) -> <init>
    org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String) -> resolveEntity
org.apache.tika.sax.PhoneExtractingContentHandler -> org.apache.tika.sax.PhoneExtractingContentHandler:
    org.apache.tika.metadata.Metadata metadata -> metadata
    java.lang.String PHONE_NUMBERS -> PHONE_NUMBERS
    java.lang.StringBuilder stringBuilder -> stringBuilder
    void <init>(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata) -> <init>
    void <init>() -> <init>
    void characters(char[],int,int) -> characters
    void endDocument() -> endDocument
org.apache.tika.sax.RecursiveParserWrapperHandler -> org.apache.tika.sax.RecursiveParserWrapperHandler:
    java.util.List metadataList -> metadataList
    void <init>(org.apache.tika.sax.ContentHandlerFactory) -> <init>
    void <init>(org.apache.tika.sax.ContentHandlerFactory,int) -> <init>
    void startEmbeddedDocument(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata) -> startEmbeddedDocument
    void endEmbeddedDocument(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata) -> endEmbeddedDocument
    void endDocument(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata) -> endDocument
    java.util.List getMetadataList() -> getMetadataList
    void addContent(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata) -> addContent
org.apache.tika.sax.RichTextContentHandler -> org.apache.tika.sax.RichTextContentHandler:
    void <init>(java.io.Writer) -> <init>
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
org.apache.tika.sax.SafeContentHandler -> org.apache.tika.sax.SafeContentHandler:
    char[] REPLACEMENT -> REPLACEMENT
    org.apache.tika.sax.SafeContentHandler$Output charactersOutput -> charactersOutput
    org.apache.tika.sax.SafeContentHandler$Output ignorableWhitespaceOutput -> ignorableWhitespaceOutput
    void <init>(org.xml.sax.ContentHandler) -> <init>
    void filter(char[],int,int,org.apache.tika.sax.SafeContentHandler$Output) -> filter
    boolean isInvalid(java.lang.String) -> isInvalid
    boolean isInvalid(int) -> isInvalid
    void writeReplacement(org.apache.tika.sax.SafeContentHandler$Output) -> writeReplacement
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void endDocument() -> endDocument
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void access$001(org.apache.tika.sax.SafeContentHandler,char[],int,int) -> access$001
    void access$101(org.apache.tika.sax.SafeContentHandler,char[],int,int) -> access$101
    void <clinit>() -> <clinit>
org.apache.tika.sax.SafeContentHandler$1 -> org.apache.tika.sax.SafeContentHandler$1:
    org.apache.tika.sax.SafeContentHandler this$0 -> this$0
    void <init>(org.apache.tika.sax.SafeContentHandler) -> <init>
    void write(char[],int,int) -> write
org.apache.tika.sax.SafeContentHandler$2 -> org.apache.tika.sax.SafeContentHandler$2:
    org.apache.tika.sax.SafeContentHandler this$0 -> this$0
    void <init>(org.apache.tika.sax.SafeContentHandler) -> <init>
    void write(char[],int,int) -> write
org.apache.tika.sax.SafeContentHandler$Output -> org.apache.tika.sax.SafeContentHandler$Output:
    void write(char[],int,int) -> write
org.apache.tika.sax.SafeContentHandler$StringOutput -> org.apache.tika.sax.SafeContentHandler$StringOutput:
    java.lang.StringBuilder builder -> builder
    void <init>() -> <init>
    void write(char[],int,int) -> write
    java.lang.String toString() -> toString
    void <init>(org.apache.tika.sax.SafeContentHandler$1) -> <init>
org.apache.tika.sax.SecureContentHandler -> org.apache.tika.sax.SecureContentHandler:
    org.apache.tika.io.TikaInputStream stream -> stream
    long characterCount -> characterCount
    int currentDepth -> currentDepth
    java.util.LinkedList packageEntryDepths -> packageEntryDepths
    long threshold -> threshold
    long ratio -> ratio
    int maxDepth -> maxDepth
    int maxPackageEntryDepth -> maxPackageEntryDepth
    void <init>(org.xml.sax.ContentHandler,org.apache.tika.io.TikaInputStream) -> <init>
    long getOutputThreshold() -> getOutputThreshold
    void setOutputThreshold(long) -> setOutputThreshold
    long getMaximumCompressionRatio() -> getMaximumCompressionRatio
    void setMaximumCompressionRatio(long) -> setMaximumCompressionRatio
    int getMaximumDepth() -> getMaximumDepth
    void setMaximumPackageEntryDepth(int) -> setMaximumPackageEntryDepth
    int getMaximumPackageEntryDepth() -> getMaximumPackageEntryDepth
    void setMaximumDepth(int) -> setMaximumDepth
    void throwIfCauseOf(org.xml.sax.SAXException) -> throwIfCauseOf
    long getByteCount() -> getByteCount
    void advance(int) -> advance
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
org.apache.tika.sax.SecureContentHandler$SecureSAXException -> org.apache.tika.sax.SecureContentHandler$SecureSAXException:
    long serialVersionUID -> serialVersionUID
    org.apache.tika.sax.SecureContentHandler this$0 -> this$0
    void <init>(org.apache.tika.sax.SecureContentHandler,java.lang.String) -> <init>
    boolean isCausedBy(org.apache.tika.sax.SecureContentHandler) -> isCausedBy
org.apache.tika.sax.StandardOrganizations -> org.apache.tika.sax.StandardOrganizations:
    java.util.Map organizations -> organizations
    void <init>() -> <init>
    java.util.Map getOrganizations() -> getOrganizations
    java.lang.String getOrganzationsRegex() -> getOrganzationsRegex
    void <clinit>() -> <clinit>
org.apache.tika.sax.StandardReference -> org.apache.tika.sax.StandardReference:
    java.lang.String mainOrganization -> mainOrganization
    java.lang.String separator -> separator
    java.lang.String secondOrganization -> secondOrganization
    java.lang.String identifier -> identifier
    double score -> score
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double) -> <init>
    java.lang.String getMainOrganizationAcronym() -> getMainOrganizationAcronym
    void setMainOrganizationAcronym(java.lang.String) -> setMainOrganizationAcronym
    java.lang.String getSeparator() -> getSeparator
    void setSeparator(java.lang.String) -> setSeparator
    java.lang.String getSecondOrganizationAcronym() -> getSecondOrganizationAcronym
    void setSecondOrganizationAcronym(java.lang.String) -> setSecondOrganizationAcronym
    java.lang.String getIdentifier() -> getIdentifier
    void setIdentifier(java.lang.String) -> setIdentifier
    double getScore() -> getScore
    void setScore(double) -> setScore
    java.lang.String toString() -> toString
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,org.apache.tika.sax.StandardReference$1) -> <init>
org.apache.tika.sax.StandardReference$1 -> org.apache.tika.sax.StandardReference$1:
org.apache.tika.sax.StandardReference$StandardReferenceBuilder -> org.apache.tika.sax.StandardReference$StandardReferenceBuilder:
    java.lang.String mainOrganization -> mainOrganization
    java.lang.String separator -> separator
    java.lang.String secondOrganization -> secondOrganization
    java.lang.String identifier -> identifier
    double score -> score
    void <init>(java.lang.String,java.lang.String) -> <init>
    org.apache.tika.sax.StandardReference$StandardReferenceBuilder setSecondOrganization(java.lang.String,java.lang.String) -> setSecondOrganization
    org.apache.tika.sax.StandardReference$StandardReferenceBuilder setScore(double) -> setScore
    org.apache.tika.sax.StandardReference build() -> build
org.apache.tika.sax.StandardsExtractingContentHandler -> org.apache.tika.sax.StandardsExtractingContentHandler:
    java.lang.String STANDARD_REFERENCES -> STANDARD_REFERENCES
    org.apache.tika.metadata.Metadata metadata -> metadata
    java.lang.StringBuilder stringBuilder -> stringBuilder
    double threshold -> threshold
    void <init>(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata) -> <init>
    void <init>() -> <init>
    double getThreshold() -> getThreshold
    void setThreshold(double) -> setThreshold
    void characters(char[],int,int) -> characters
    void endDocument() -> endDocument
org.apache.tika.sax.StandardsText -> org.apache.tika.sax.StandardsText:
    java.lang.String REGEX_HEADER -> REGEX_HEADER
    java.lang.String REGEX_APPLICABLE_DOCUMENTS -> REGEX_APPLICABLE_DOCUMENTS
    java.lang.String REGEX_IDENTIFIER -> REGEX_IDENTIFIER
    java.lang.String REGEX_ORGANIZATION -> REGEX_ORGANIZATION
    java.lang.String REGEX_STANDARD_TYPE -> REGEX_STANDARD_TYPE
    java.lang.String REGEX_FALLBACK -> REGEX_FALLBACK
    java.lang.String REGEX_STANDARD -> REGEX_STANDARD
    void <init>() -> <init>
    java.util.ArrayList extractStandardReferences(java.lang.String,double) -> extractStandardReferences
    java.util.Map findHeaders(java.lang.String) -> findHeaders
    java.util.ArrayList findStandards(java.lang.String,java.util.Map,double) -> findStandards
    void <clinit>() -> <clinit>
org.apache.tika.sax.TaggedContentHandler -> org.apache.tika.sax.TaggedContentHandler:
    void <init>(org.xml.sax.ContentHandler) -> <init>
    boolean isCauseOf(org.xml.sax.SAXException) -> isCauseOf
    void throwIfCauseOf(java.lang.Exception) -> throwIfCauseOf
    void handleException(org.xml.sax.SAXException) -> handleException
org.apache.tika.sax.TaggedSAXException -> org.apache.tika.sax.TaggedSAXException:
    java.lang.Object tag -> tag
    void <init>(org.xml.sax.SAXException,java.lang.Object) -> <init>
    java.lang.Object getTag() -> getTag
    org.xml.sax.SAXException getCause() -> getCause
    java.lang.Throwable getCause() -> getCause
org.apache.tika.sax.TeeContentHandler -> org.apache.tika.sax.TeeContentHandler:
    org.xml.sax.ContentHandler[] handlers -> handlers
    void <init>(org.xml.sax.ContentHandler[]) -> <init>
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void skippedEntity(java.lang.String) -> skippedEntity
org.apache.tika.sax.TextContentHandler -> org.apache.tika.sax.TextContentHandler:
    char[] SPACE -> SPACE
    org.xml.sax.ContentHandler delegate -> delegate
    boolean addSpaceBetweenElements -> addSpaceBetweenElements
    void <init>(org.xml.sax.ContentHandler) -> <init>
    void <init>(org.xml.sax.ContentHandler,boolean) -> <init>
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
org.apache.tika.sax.ToHTMLContentHandler -> org.apache.tika.sax.ToHTMLContentHandler:
    java.util.Set EMPTY_ELEMENTS -> EMPTY_ELEMENTS
    void <init>(java.io.OutputStream,java.lang.String) -> <init>
    void <init>() -> <init>
    void startDocument() -> startDocument
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void <clinit>() -> <clinit>
org.apache.tika.sax.ToTextContentHandler -> org.apache.tika.sax.ToTextContentHandler:
    java.lang.String STYLE -> STYLE
    java.lang.String SCRIPT -> SCRIPT
    int styleDepth -> styleDepth
    int scriptDepth -> scriptDepth
    java.io.Writer writer -> writer
    void <init>(java.io.Writer) -> <init>
    void <init>(java.io.OutputStream) -> <init>
    void <init>(java.io.OutputStream,java.lang.String) -> <init>
    void <init>() -> <init>
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    java.lang.String toString() -> toString
org.apache.tika.sax.ToXMLContentHandler -> org.apache.tika.sax.ToXMLContentHandler:
    java.lang.String encoding -> encoding
    boolean inStartElement -> inStartElement
    java.util.Map namespaces -> namespaces
    org.apache.tika.sax.ToXMLContentHandler$ElementInfo currentElement -> currentElement
    void <init>(java.io.OutputStream,java.lang.String) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>() -> <init>
    void startDocument() -> startDocument
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void lazyCloseStartElement() -> lazyCloseStartElement
    void write(char) -> write
    void write(java.lang.String) -> write
    int writeCharsAndEntity(char[],int,int,java.lang.String) -> writeCharsAndEntity
    void writeEscaped(char[],int,int,boolean) -> writeEscaped
org.apache.tika.sax.ToXMLContentHandler$ElementInfo -> org.apache.tika.sax.ToXMLContentHandler$ElementInfo:
    org.apache.tika.sax.ToXMLContentHandler$ElementInfo parent -> parent
    java.util.Map namespaces -> namespaces
    void <init>(org.apache.tika.sax.ToXMLContentHandler$ElementInfo,java.util.Map) -> <init>
    java.lang.String getPrefix(java.lang.String) -> getPrefix
    java.lang.String getQName(java.lang.String,java.lang.String) -> getQName
    org.apache.tika.sax.ToXMLContentHandler$ElementInfo access$000(org.apache.tika.sax.ToXMLContentHandler$ElementInfo) -> access$000
org.apache.tika.sax.WriteOutContentHandler -> org.apache.tika.sax.WriteOutContentHandler:
    java.io.Serializable tag -> tag
    int writeLimit -> writeLimit
    int writeCount -> writeCount
    void <init>(org.xml.sax.ContentHandler,int) -> <init>
    void <init>(java.io.Writer,int) -> <init>
    void <init>(java.io.Writer) -> <init>
    void <init>(java.io.OutputStream) -> <init>
    void <init>(int) -> <init>
    void <init>() -> <init>
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    boolean isWriteLimitReached(java.lang.Throwable) -> isWriteLimitReached
org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException -> org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException:
    long serialVersionUID -> serialVersionUID
    java.io.Serializable tag -> tag
    void <init>(java.lang.String,java.io.Serializable) -> <init>
    java.io.Serializable access$000(org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException) -> access$000
org.apache.tika.sax.XHTMLContentHandler -> org.apache.tika.sax.XHTMLContentHandler:
    java.lang.String XHTML -> XHTML
    char[] NL -> NL
    char[] TAB -> TAB
    java.util.Set HEAD -> HEAD
    java.util.Set AUTO -> AUTO
    java.util.Set INDENT -> INDENT
    java.util.Set ENDLINE -> ENDLINE
    org.xml.sax.Attributes EMPTY_ATTRIBUTES -> EMPTY_ATTRIBUTES
    org.apache.tika.metadata.Metadata metadata -> metadata
    boolean documentStarted -> documentStarted
    boolean headStarted -> headStarted
    boolean headEnded -> headEnded
    boolean useFrameset -> useFrameset
    java.util.Set unmodifiableSet(java.lang.String[]) -> unmodifiableSet
    void <init>(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata) -> <init>
    void startDocument() -> startDocument
    void lazyStartHead() -> lazyStartHead
    void lazyEndHead(boolean) -> lazyEndHead
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String) -> startElement
    void startElement(java.lang.String,java.lang.String,java.lang.String) -> startElement
    void startElement(java.lang.String,org.xml.sax.helpers.AttributesImpl) -> startElement
    void endElement(java.lang.String) -> endElement
    void characters(java.lang.String) -> characters
    void newline() -> newline
    void element(java.lang.String,java.lang.String) -> element
    void <clinit>() -> <clinit>
org.apache.tika.sax.XMPContentHandler -> org.apache.tika.sax.XMPContentHandler:
    java.lang.String RDF -> RDF
    java.lang.String XMP -> XMP
    org.xml.sax.Attributes EMPTY_ATTRIBUTES -> EMPTY_ATTRIBUTES
    java.lang.String prefix -> prefix
    java.lang.String uri -> uri
    void <init>(org.xml.sax.ContentHandler) -> <init>
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startDescription(java.lang.String,java.lang.String,java.lang.String) -> startDescription
    void endDescription() -> endDescription
    void property(java.lang.String,java.lang.String) -> property
    void metadata(org.apache.tika.metadata.Metadata) -> metadata
    void description(org.apache.tika.metadata.Metadata,java.lang.String,java.lang.String) -> description
    void <clinit>() -> <clinit>
org.apache.tika.sax.package-info -> org.apache.tika.sax.package-info:
org.apache.tika.sax.xpath.AttributeMatcher -> org.apache.tika.sax.xpath.AttributeMatcher:
    org.apache.tika.sax.xpath.Matcher INSTANCE -> INSTANCE
    void <init>() -> <init>
    boolean matchesAttribute(java.lang.String,java.lang.String) -> matchesAttribute
    void <clinit>() -> <clinit>
org.apache.tika.sax.xpath.ChildMatcher -> org.apache.tika.sax.xpath.ChildMatcher:
    org.apache.tika.sax.xpath.Matcher then -> then
    void <init>(org.apache.tika.sax.xpath.Matcher) -> <init>
    org.apache.tika.sax.xpath.Matcher descend(java.lang.String,java.lang.String) -> descend
org.apache.tika.sax.xpath.CompositeMatcher -> org.apache.tika.sax.xpath.CompositeMatcher:
    org.apache.tika.sax.xpath.Matcher a -> a
    org.apache.tika.sax.xpath.Matcher b -> b
    void <init>(org.apache.tika.sax.xpath.Matcher,org.apache.tika.sax.xpath.Matcher) -> <init>
    org.apache.tika.sax.xpath.Matcher descend(java.lang.String,java.lang.String) -> descend
    boolean matchesElement() -> matchesElement
    boolean matchesAttribute(java.lang.String,java.lang.String) -> matchesAttribute
    boolean matchesText() -> matchesText
org.apache.tika.sax.xpath.ElementMatcher -> org.apache.tika.sax.xpath.ElementMatcher:
    org.apache.tika.sax.xpath.Matcher INSTANCE -> INSTANCE
    void <init>() -> <init>
    boolean matchesElement() -> matchesElement
    void <clinit>() -> <clinit>
org.apache.tika.sax.xpath.Matcher -> org.apache.tika.sax.xpath.Matcher:
    org.apache.tika.sax.xpath.Matcher FAIL -> FAIL
    void <init>() -> <init>
    org.apache.tika.sax.xpath.Matcher descend(java.lang.String,java.lang.String) -> descend
    boolean matchesElement() -> matchesElement
    boolean matchesAttribute(java.lang.String,java.lang.String) -> matchesAttribute
    boolean matchesText() -> matchesText
    void <clinit>() -> <clinit>
org.apache.tika.sax.xpath.MatchingContentHandler -> org.apache.tika.sax.xpath.MatchingContentHandler:
    java.util.LinkedList matchers -> matchers
    org.apache.tika.sax.xpath.Matcher matcher -> matcher
    void <init>(org.xml.sax.ContentHandler,org.apache.tika.sax.xpath.Matcher) -> <init>
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void skippedEntity(java.lang.String) -> skippedEntity
org.apache.tika.sax.xpath.NamedAttributeMatcher -> org.apache.tika.sax.xpath.NamedAttributeMatcher:
    java.lang.String namespace -> namespace
    java.lang.String name -> name
    void <init>(java.lang.String,java.lang.String) -> <init>
    boolean matchesAttribute(java.lang.String,java.lang.String) -> matchesAttribute
    boolean equals(java.lang.String,java.lang.String) -> equals
org.apache.tika.sax.xpath.NamedElementMatcher -> org.apache.tika.sax.xpath.NamedElementMatcher:
    java.lang.String namespace -> namespace
    java.lang.String name -> name
    void <init>(java.lang.String,java.lang.String,org.apache.tika.sax.xpath.Matcher) -> <init>
    org.apache.tika.sax.xpath.Matcher descend(java.lang.String,java.lang.String) -> descend
    boolean equals(java.lang.String,java.lang.String) -> equals
org.apache.tika.sax.xpath.NodeMatcher -> org.apache.tika.sax.xpath.NodeMatcher:
    org.apache.tika.sax.xpath.Matcher INSTANCE -> INSTANCE
    void <init>() -> <init>
    boolean matchesElement() -> matchesElement
    boolean matchesAttribute(java.lang.String,java.lang.String) -> matchesAttribute
    boolean matchesText() -> matchesText
    void <clinit>() -> <clinit>
org.apache.tika.sax.xpath.SubtreeMatcher -> org.apache.tika.sax.xpath.SubtreeMatcher:
    org.apache.tika.sax.xpath.Matcher then -> then
    void <init>(org.apache.tika.sax.xpath.Matcher) -> <init>
    org.apache.tika.sax.xpath.Matcher descend(java.lang.String,java.lang.String) -> descend
    boolean matchesElement() -> matchesElement
    boolean matchesAttribute(java.lang.String,java.lang.String) -> matchesAttribute
    boolean matchesText() -> matchesText
org.apache.tika.sax.xpath.TextMatcher -> org.apache.tika.sax.xpath.TextMatcher:
    org.apache.tika.sax.xpath.Matcher INSTANCE -> INSTANCE
    void <init>() -> <init>
    boolean matchesText() -> matchesText
    void <clinit>() -> <clinit>
org.apache.tika.sax.xpath.XPathParser -> org.apache.tika.sax.xpath.XPathParser:
    java.util.Map prefixes -> prefixes
    void <init>() -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    void addPrefix(java.lang.String,java.lang.String) -> addPrefix
    org.apache.tika.sax.xpath.Matcher parse(java.lang.String) -> parse
org.apache.tika.sax.xpath.package-info -> org.apache.tika.sax.xpath.package-info:
org.apache.tika.utils.AnnotationUtils -> org.apache.tika.utils.AnnotationUtils:
    java.util.Map PARAM_INFO -> PARAM_INFO
    void <init>() -> <init>
    java.util.List collectInfo(java.lang.Class,java.lang.Class) -> collectInfo
    void assignFieldParams(java.lang.Object,java.util.Map) -> assignFieldParams
    void <clinit>() -> <clinit>
org.apache.tika.utils.AnnotationUtils$1 -> org.apache.tika.utils.AnnotationUtils$1:
    java.lang.reflect.AccessibleObject val$member -> val$member
    void <init>(java.lang.reflect.AccessibleObject) -> <init>
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.tika.utils.CharsetUtils -> org.apache.tika.utils.CharsetUtils:
    java.util.regex.Pattern CHARSET_NAME_PATTERN -> CHARSET_NAME_PATTERN
    java.util.regex.Pattern ISO_NAME_PATTERN -> ISO_NAME_PATTERN
    java.util.regex.Pattern CP_NAME_PATTERN -> CP_NAME_PATTERN
    java.util.regex.Pattern WIN_NAME_PATTERN -> WIN_NAME_PATTERN
    java.util.Map COMMON_CHARSETS -> COMMON_CHARSETS
    java.lang.reflect.Method getCharsetICU -> getCharsetICU
    java.lang.reflect.Method isSupportedICU -> isSupportedICU
    void <init>() -> <init>
    java.util.Map initCommonCharsets(java.lang.String[]) -> initCommonCharsets
    boolean isSupported(java.lang.String) -> isSupported
    java.lang.String clean(java.lang.String) -> clean
    java.nio.charset.Charset forName(java.lang.String) -> forName
    void <clinit>() -> <clinit>
org.apache.tika.utils.ConcurrentUtils -> org.apache.tika.utils.ConcurrentUtils:
    void <init>() -> <init>
    java.util.concurrent.Future execute(org.apache.tika.parser.ParseContext,java.lang.Runnable) -> execute
org.apache.tika.utils.DateUtils -> org.apache.tika.utils.DateUtils:
    java.util.TimeZone UTC -> UTC
    java.util.TimeZone MIDDAY -> MIDDAY
    java.util.List iso8601InputFormats -> iso8601InputFormats
    void <init>() -> <init>
    java.text.DateFormat createDateFormat(java.lang.String,java.util.TimeZone) -> createDateFormat
    java.util.List loadDateFormats() -> loadDateFormats
    java.lang.String formatDate(java.util.Date) -> formatDate
    java.lang.String formatDate(java.util.Calendar) -> formatDate
    java.lang.String formatDateUnknownTimezone(java.util.Date) -> formatDateUnknownTimezone
    java.lang.String doFormatDate(java.util.Calendar) -> doFormatDate
    java.util.Date tryToParse(java.lang.String) -> tryToParse
    void <clinit>() -> <clinit>
org.apache.tika.utils.ExceptionUtils -> org.apache.tika.utils.ExceptionUtils:
    java.util.regex.Pattern MSG_PATTERN -> MSG_PATTERN
    void <init>() -> <init>
    java.lang.String getFilteredStackTrace(java.lang.Throwable) -> getFilteredStackTrace
    java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
    java.lang.String trimMessage(java.lang.String) -> trimMessage
    void <clinit>() -> <clinit>
org.apache.tika.utils.ParserUtils -> org.apache.tika.utils.ParserUtils:
    java.lang.String X_PARSED_BY -> X_PARSED_BY
    org.apache.tika.metadata.Property EMBEDDED_PARSER -> EMBEDDED_PARSER
    org.apache.tika.metadata.Property EMBEDDED_EXCEPTION -> EMBEDDED_EXCEPTION
    void <init>() -> <init>
    org.apache.tika.metadata.Metadata cloneMetadata(org.apache.tika.metadata.Metadata) -> cloneMetadata
    java.lang.String getParserClassname(org.apache.tika.parser.Parser) -> getParserClassname
    void recordParserDetails(org.apache.tika.parser.Parser,org.apache.tika.metadata.Metadata) -> recordParserDetails
    void recordParserFailure(org.apache.tika.parser.Parser,java.lang.Throwable,org.apache.tika.metadata.Metadata) -> recordParserFailure
    void <clinit>() -> <clinit>
org.apache.tika.utils.ProcessUtils -> org.apache.tika.utils.ProcessUtils:
    void <init>() -> <init>
    java.lang.String escapeCommandLine(java.lang.String) -> escapeCommandLine
    java.lang.String unescapeCommandLine(java.lang.String) -> unescapeCommandLine
org.apache.tika.utils.RegexUtils -> org.apache.tika.utils.RegexUtils:
    java.lang.String LINKS_REGEX -> LINKS_REGEX
    java.util.regex.Pattern LINKS_PATTERN -> LINKS_PATTERN
    void <init>() -> <init>
    java.util.List extractLinks(java.lang.String) -> extractLinks
    void <clinit>() -> <clinit>
org.apache.tika.utils.RereadableInputStream -> org.apache.tika.utils.RereadableInputStream:
    java.io.InputStream originalInputStream -> originalInputStream
    java.io.InputStream inputStream -> inputStream
    int maxBytesInMemory -> maxBytesInMemory
    boolean firstPass -> firstPass
    boolean bufferIsInFile -> bufferIsInFile
    byte[] byteBuffer -> byteBuffer
    int size -> size
    java.io.File storeFile -> storeFile
    java.io.OutputStream storeOutputStream -> storeOutputStream
    boolean readToEndOfStreamOnFirstRewind -> readToEndOfStreamOnFirstRewind
    boolean closeOriginalStreamOnClose -> closeOriginalStreamOnClose
    void <init>(java.io.InputStream,int,boolean,boolean) -> <init>
    int read() -> read
    void rewind() -> rewind
    void closeStream() -> closeStream
    void close() -> close
    int getSize() -> getSize
    void saveByte(int) -> saveByte
org.apache.tika.utils.ServiceLoaderUtils -> org.apache.tika.utils.ServiceLoaderUtils:
    void <init>() -> <init>
    void sortLoadedClasses(java.util.List) -> sortLoadedClasses
    java.lang.Object newInstance(java.lang.String) -> newInstance
    java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader) -> newInstance
org.apache.tika.utils.ServiceLoaderUtils$1 -> org.apache.tika.utils.ServiceLoaderUtils$1:
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.tika.utils.SystemUtils -> org.apache.tika.utils.SystemUtils:
    java.lang.String OS_NAME_WINDOWS_PREFIX -> OS_NAME_WINDOWS_PREFIX
    java.lang.String OS_NAME -> OS_NAME
    java.lang.String OS_VERSION -> OS_VERSION
    boolean IS_OS_AIX -> IS_OS_AIX
    boolean IS_OS_HP_UX -> IS_OS_HP_UX
    boolean IS_OS_IRIX -> IS_OS_IRIX
    boolean IS_OS_LINUX -> IS_OS_LINUX
    boolean IS_OS_MAC -> IS_OS_MAC
    boolean IS_OS_MAC_OSX -> IS_OS_MAC_OSX
    boolean IS_OS_OS2 -> IS_OS_OS2
    boolean IS_OS_SOLARIS -> IS_OS_SOLARIS
    boolean IS_OS_SUN_OS -> IS_OS_SUN_OS
    boolean IS_OS_UNIX -> IS_OS_UNIX
    boolean IS_OS_WINDOWS -> IS_OS_WINDOWS
    void <init>() -> <init>
    java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    boolean getOSMatchesName(java.lang.String) -> getOSMatchesName
    boolean isOSNameMatch(java.lang.String,java.lang.String) -> isOSNameMatch
    void <clinit>() -> <clinit>
org.apache.tika.utils.XMLReaderUtils -> org.apache.tika.utils.XMLReaderUtils:
    long serialVersionUID -> serialVersionUID
    java.util.logging.Logger LOG -> LOG
    java.lang.String XERCES_SECURITY_MANAGER -> XERCES_SECURITY_MANAGER
    java.lang.String XERCES_SECURITY_MANAGER_PROPERTY -> XERCES_SECURITY_MANAGER_PROPERTY
    org.xml.sax.ContentHandler IGNORING_CONTENT_HANDLER -> IGNORING_CONTENT_HANDLER
    org.xml.sax.DTDHandler IGNORING_DTD_HANDLER -> IGNORING_DTD_HANDLER
    org.xml.sax.ErrorHandler IGNORING_ERROR_HANDLER -> IGNORING_ERROR_HANDLER
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    int POOL_SIZE -> POOL_SIZE
    long LAST_LOG -> LAST_LOG
    java.lang.String JAXP_ENTITY_EXPANSION_LIMIT_KEY -> JAXP_ENTITY_EXPANSION_LIMIT_KEY
    int DEFAULT_MAX_ENTITY_EXPANSIONS -> DEFAULT_MAX_ENTITY_EXPANSIONS
    int MAX_ENTITY_EXPANSIONS -> MAX_ENTITY_EXPANSIONS
    java.util.concurrent.locks.ReentrantReadWriteLock SAX_READ_WRITE_LOCK -> SAX_READ_WRITE_LOCK
    java.util.concurrent.locks.ReentrantReadWriteLock DOM_READ_WRITE_LOCK -> DOM_READ_WRITE_LOCK
    java.util.concurrent.ArrayBlockingQueue SAX_PARSERS -> SAX_PARSERS
    java.util.concurrent.ArrayBlockingQueue DOM_BUILDERS -> DOM_BUILDERS
    java.util.concurrent.atomic.AtomicInteger POOL_GENERATION -> POOL_GENERATION
    org.xml.sax.EntityResolver IGNORING_SAX_ENTITY_RESOLVER -> IGNORING_SAX_ENTITY_RESOLVER
    javax.xml.stream.XMLResolver IGNORING_STAX_ENTITY_RESOLVER -> IGNORING_STAX_ENTITY_RESOLVER
    void <init>() -> <init>
    int determineMaxEntityExpansions() -> determineMaxEntityExpansions
    void setMaxEntityExpansions(int) -> setMaxEntityExpansions
    org.xml.sax.XMLReader getXMLReader() -> getXMLReader
    javax.xml.parsers.SAXParser getSAXParser() -> getSAXParser
    javax.xml.parsers.SAXParserFactory getSAXParserFactory() -> getSAXParserFactory
    javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory() -> getDocumentBuilderFactory
    javax.xml.parsers.DocumentBuilder getDocumentBuilder() -> getDocumentBuilder
    javax.xml.stream.XMLInputFactory getXMLInputFactory() -> getXMLInputFactory
    void trySetSAXFeature(javax.xml.parsers.SAXParserFactory,java.lang.String,boolean) -> trySetSAXFeature
    void trySetSAXFeature(javax.xml.parsers.DocumentBuilderFactory,java.lang.String,boolean) -> trySetSAXFeature
    void tryToSetStaxProperty(javax.xml.stream.XMLInputFactory,java.lang.String,boolean) -> tryToSetStaxProperty
    javax.xml.transform.Transformer getTransformer() -> getTransformer
    org.w3c.dom.Document buildDOM(java.io.InputStream,org.apache.tika.parser.ParseContext) -> buildDOM
    org.w3c.dom.Document buildDOM(java.nio.file.Path) -> buildDOM
    org.w3c.dom.Document buildDOM(java.lang.String) -> buildDOM
    org.w3c.dom.Document buildDOM(java.io.InputStream) -> buildDOM
    void parseSAX(java.io.InputStream,org.xml.sax.helpers.DefaultHandler,org.apache.tika.parser.ParseContext) -> parseSAX
    org.apache.tika.utils.XMLReaderUtils$PoolDOMBuilder acquireDOMBuilder() -> acquireDOMBuilder
    void releaseDOMBuilder(org.apache.tika.utils.XMLReaderUtils$PoolDOMBuilder) -> releaseDOMBuilder
    org.apache.tika.utils.XMLReaderUtils$PoolSAXParser acquireSAXParser() -> acquireSAXParser
    void releaseParser(org.apache.tika.utils.XMLReaderUtils$PoolSAXParser) -> releaseParser
    void setPoolSize(int) -> setPoolSize
    void trySetXercesSecurityManager(javax.xml.parsers.DocumentBuilderFactory) -> trySetXercesSecurityManager
    void trySetXercesSecurityManager(javax.xml.parsers.SAXParser) -> trySetXercesSecurityManager
    void trySetStaxSecurityManager(javax.xml.stream.XMLInputFactory) -> trySetStaxSecurityManager
    int getPoolSize() -> getPoolSize
    int getMaxEntityExpansions() -> getMaxEntityExpansions
    java.lang.String getAttrValue(java.lang.String,org.xml.sax.Attributes) -> getAttrValue
    org.apache.tika.utils.XMLReaderUtils$PoolSAXParser buildPoolParser(int,javax.xml.parsers.SAXParser) -> buildPoolParser
    void clearReader(org.xml.sax.XMLReader) -> clearReader
    org.xml.sax.EntityResolver access$000() -> access$000
    void access$100(org.xml.sax.XMLReader) -> access$100
    java.util.logging.Logger access$200() -> access$200
    void access$300(javax.xml.parsers.SAXParser) -> access$300
    void <clinit>() -> <clinit>
org.apache.tika.utils.XMLReaderUtils$1 -> org.apache.tika.utils.XMLReaderUtils$1:
    void <init>() -> <init>
    void notationDecl(java.lang.String,java.lang.String,java.lang.String) -> notationDecl
    void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> unparsedEntityDecl
org.apache.tika.utils.XMLReaderUtils$2 -> org.apache.tika.utils.XMLReaderUtils$2:
    void <init>() -> <init>
    void warning(org.xml.sax.SAXParseException) -> warning
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
org.apache.tika.utils.XMLReaderUtils$3 -> org.apache.tika.utils.XMLReaderUtils$3:
    void <init>() -> <init>
    org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String) -> resolveEntity
org.apache.tika.utils.XMLReaderUtils$4 -> org.apache.tika.utils.XMLReaderUtils$4:
    void <init>() -> <init>
    java.lang.Object resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> resolveEntity
org.apache.tika.utils.XMLReaderUtils$BuiltInPoolSAXParser -> org.apache.tika.utils.XMLReaderUtils$BuiltInPoolSAXParser:
    void <init>(int,javax.xml.parsers.SAXParser) -> <init>
    void reset() -> reset
org.apache.tika.utils.XMLReaderUtils$PoolDOMBuilder -> org.apache.tika.utils.XMLReaderUtils$PoolDOMBuilder:
    int poolGeneration -> poolGeneration
    javax.xml.parsers.DocumentBuilder documentBuilder -> documentBuilder
    void <init>(int,javax.xml.parsers.DocumentBuilder) -> <init>
    int getPoolGeneration() -> getPoolGeneration
    javax.xml.parsers.DocumentBuilder getDocumentBuilder() -> getDocumentBuilder
    void reset() -> reset
org.apache.tika.utils.XMLReaderUtils$PoolSAXParser -> org.apache.tika.utils.XMLReaderUtils$PoolSAXParser:
    int poolGeneration -> poolGeneration
    javax.xml.parsers.SAXParser saxParser -> saxParser
    void <init>(int,javax.xml.parsers.SAXParser) -> <init>
    void reset() -> reset
    int getGeneration() -> getGeneration
    javax.xml.parsers.SAXParser getSAXParser() -> getSAXParser
org.apache.tika.utils.XMLReaderUtils$UnrecognizedPoolSAXParser -> org.apache.tika.utils.XMLReaderUtils$UnrecognizedPoolSAXParser:
    void <init>(int,javax.xml.parsers.SAXParser) -> <init>
    void reset() -> reset
org.apache.tika.utils.XMLReaderUtils$Xerces2PoolSAXParser -> org.apache.tika.utils.XMLReaderUtils$Xerces2PoolSAXParser:
    void <init>(int,javax.xml.parsers.SAXParser) -> <init>
    void reset() -> reset
org.apache.tika.utils.XMLReaderUtils$XercesPoolSAXParser -> org.apache.tika.utils.XMLReaderUtils$XercesPoolSAXParser:
    void <init>(int,javax.xml.parsers.SAXParser) -> <init>
    void reset() -> reset
org.apache.tika.utils.package-info -> org.apache.tika.utils.package-info:
